

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Nov 02 22:30:01 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.42
    28                           ; Generated 13/04/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1503 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000E                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011D                     	;# 
   115  018C                     	;# 
   116  018E                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0197                     	;# 
   126  020C                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  0498                     	;# 
   146  0498                     	;# 
   147  0499                     	;# 
   148  049A                     	;# 
   149  049B                     	;# 
   150  049B                     	;# 
   151  049C                     	;# 
   152  049D                     	;# 
   153  049E                     	;# 
   154  049F                     	;# 
   155  0611                     	;# 
   156  0612                     	;# 
   157  0613                     	;# 
   158  0613                     	;# 
   159  0614                     	;# 
   160  0615                     	;# 
   161  0616                     	;# 
   162  0616                     	;# 
   163  0617                     	;# 
   164  0618                     	;# 
   165  0619                     	;# 
   166  0619                     	;# 
   167  061A                     	;# 
   168  061B                     	;# 
   169  061C                     	;# 
   170  061C                     	;# 
   171  0691                     	;# 
   172  0692                     	;# 
   173  0693                     	;# 
   174  0694                     	;# 
   175  0695                     	;# 
   176  0F0F                     	;# 
   177  0F10                     	;# 
   178  0F11                     	;# 
   179  0F12                     	;# 
   180  0F13                     	;# 
   181  0F14                     	;# 
   182  0F15                     	;# 
   183  0F16                     	;# 
   184  0F17                     	;# 
   185  0F18                     	;# 
   186  0F19                     	;# 
   187  0F1A                     	;# 
   188  0F1B                     	;# 
   189  0F1C                     	;# 
   190  0F1D                     	;# 
   191  0F1E                     	;# 
   192  0F1F                     	;# 
   193  0FE3                     	;# 
   194  0FE4                     	;# 
   195  0FE5                     	;# 
   196  0FE6                     	;# 
   197  0FE7                     	;# 
   198  0FE8                     	;# 
   199  0FE9                     	;# 
   200  0FEA                     	;# 
   201  0FEB                     	;# 
   202  0FED                     	;# 
   203  0FEE                     	;# 
   204  0FEF                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000E                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  008C                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010E                     	;# 
   249  0111                     	;# 
   250  0112                     	;# 
   251  0113                     	;# 
   252  0114                     	;# 
   253  0115                     	;# 
   254  0116                     	;# 
   255  0117                     	;# 
   256  0118                     	;# 
   257  0119                     	;# 
   258  011D                     	;# 
   259  018C                     	;# 
   260  018E                     	;# 
   261  0191                     	;# 
   262  0191                     	;# 
   263  0192                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0194                     	;# 
   267  0195                     	;# 
   268  0196                     	;# 
   269  0197                     	;# 
   270  020C                     	;# 
   271  0211                     	;# 
   272  0211                     	;# 
   273  0212                     	;# 
   274  0212                     	;# 
   275  0213                     	;# 
   276  0213                     	;# 
   277  0214                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0216                     	;# 
   283  0216                     	;# 
   284  0217                     	;# 
   285  0217                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0498                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  049E                     	;# 
   298  049F                     	;# 
   299  0611                     	;# 
   300  0612                     	;# 
   301  0613                     	;# 
   302  0613                     	;# 
   303  0614                     	;# 
   304  0615                     	;# 
   305  0616                     	;# 
   306  0616                     	;# 
   307  0617                     	;# 
   308  0618                     	;# 
   309  0619                     	;# 
   310  0619                     	;# 
   311  061A                     	;# 
   312  061B                     	;# 
   313  061C                     	;# 
   314  061C                     	;# 
   315  0691                     	;# 
   316  0692                     	;# 
   317  0693                     	;# 
   318  0694                     	;# 
   319  0695                     	;# 
   320  0F0F                     	;# 
   321  0F10                     	;# 
   322  0F11                     	;# 
   323  0F12                     	;# 
   324  0F13                     	;# 
   325  0F14                     	;# 
   326  0F15                     	;# 
   327  0F16                     	;# 
   328  0F17                     	;# 
   329  0F18                     	;# 
   330  0F19                     	;# 
   331  0F1A                     	;# 
   332  0F1B                     	;# 
   333  0F1C                     	;# 
   334  0F1D                     	;# 
   335  0F1E                     	;# 
   336  0F1F                     	;# 
   337  0FE3                     	;# 
   338  0FE4                     	;# 
   339  0FE5                     	;# 
   340  0FE6                     	;# 
   341  0FE7                     	;# 
   342  0FE8                     	;# 
   343  0FE9                     	;# 
   344  0FEA                     	;# 
   345  0FEB                     	;# 
   346  0FED                     	;# 
   347  0FEE                     	;# 
   348  0FEF                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0008                     	;# 
   358  0009                     	;# 
   359  000A                     	;# 
   360  000B                     	;# 
   361  000C                     	;# 
   362  000E                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0016                     	;# 
   369  0017                     	;# 
   370  0018                     	;# 
   371  0019                     	;# 
   372  001A                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  008C                     	;# 
   376  008E                     	;# 
   377  0091                     	;# 
   378  0092                     	;# 
   379  0093                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  010C                     	;# 
   392  010E                     	;# 
   393  0111                     	;# 
   394  0112                     	;# 
   395  0113                     	;# 
   396  0114                     	;# 
   397  0115                     	;# 
   398  0116                     	;# 
   399  0117                     	;# 
   400  0118                     	;# 
   401  0119                     	;# 
   402  011D                     	;# 
   403  018C                     	;# 
   404  018E                     	;# 
   405  0191                     	;# 
   406  0191                     	;# 
   407  0192                     	;# 
   408  0193                     	;# 
   409  0193                     	;# 
   410  0194                     	;# 
   411  0195                     	;# 
   412  0196                     	;# 
   413  0197                     	;# 
   414  020C                     	;# 
   415  0211                     	;# 
   416  0211                     	;# 
   417  0212                     	;# 
   418  0212                     	;# 
   419  0213                     	;# 
   420  0213                     	;# 
   421  0214                     	;# 
   422  0214                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0215                     	;# 
   426  0216                     	;# 
   427  0216                     	;# 
   428  0217                     	;# 
   429  0217                     	;# 
   430  0391                     	;# 
   431  0392                     	;# 
   432  0393                     	;# 
   433  0498                     	;# 
   434  0498                     	;# 
   435  0499                     	;# 
   436  049A                     	;# 
   437  049B                     	;# 
   438  049B                     	;# 
   439  049C                     	;# 
   440  049D                     	;# 
   441  049E                     	;# 
   442  049F                     	;# 
   443  0611                     	;# 
   444  0612                     	;# 
   445  0613                     	;# 
   446  0613                     	;# 
   447  0614                     	;# 
   448  0615                     	;# 
   449  0616                     	;# 
   450  0616                     	;# 
   451  0617                     	;# 
   452  0618                     	;# 
   453  0619                     	;# 
   454  0619                     	;# 
   455  061A                     	;# 
   456  061B                     	;# 
   457  061C                     	;# 
   458  061C                     	;# 
   459  0691                     	;# 
   460  0692                     	;# 
   461  0693                     	;# 
   462  0694                     	;# 
   463  0695                     	;# 
   464  0F0F                     	;# 
   465  0F10                     	;# 
   466  0F11                     	;# 
   467  0F12                     	;# 
   468  0F13                     	;# 
   469  0F14                     	;# 
   470  0F15                     	;# 
   471  0F16                     	;# 
   472  0F17                     	;# 
   473  0F18                     	;# 
   474  0F19                     	;# 
   475  0F1A                     	;# 
   476  0F1B                     	;# 
   477  0F1C                     	;# 
   478  0F1D                     	;# 
   479  0F1E                     	;# 
   480  0F1F                     	;# 
   481  0FE3                     	;# 
   482  0FE4                     	;# 
   483  0FE5                     	;# 
   484  0FE6                     	;# 
   485  0FE7                     	;# 
   486  0FE8                     	;# 
   487  0FE9                     	;# 
   488  0FEA                     	;# 
   489  0FEB                     	;# 
   490  0FED                     	;# 
   491  0FEE                     	;# 
   492  0FEF                     	;# 
   493  0000                     	;# 
   494  0001                     	;# 
   495  0002                     	;# 
   496  0003                     	;# 
   497  0004                     	;# 
   498  0005                     	;# 
   499  0006                     	;# 
   500  0007                     	;# 
   501  0008                     	;# 
   502  0009                     	;# 
   503  000A                     	;# 
   504  000B                     	;# 
   505  000C                     	;# 
   506  000E                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0015                     	;# 
   511  0016                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001C                     	;# 
   519  008C                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0095                     	;# 
   525  0096                     	;# 
   526  0097                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010E                     	;# 
   537  0111                     	;# 
   538  0112                     	;# 
   539  0113                     	;# 
   540  0114                     	;# 
   541  0115                     	;# 
   542  0116                     	;# 
   543  0117                     	;# 
   544  0118                     	;# 
   545  0119                     	;# 
   546  011D                     	;# 
   547  018C                     	;# 
   548  018E                     	;# 
   549  0191                     	;# 
   550  0191                     	;# 
   551  0192                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0194                     	;# 
   555  0195                     	;# 
   556  0196                     	;# 
   557  0197                     	;# 
   558  020C                     	;# 
   559  0211                     	;# 
   560  0211                     	;# 
   561  0212                     	;# 
   562  0212                     	;# 
   563  0213                     	;# 
   564  0213                     	;# 
   565  0214                     	;# 
   566  0214                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0216                     	;# 
   571  0216                     	;# 
   572  0217                     	;# 
   573  0217                     	;# 
   574  0391                     	;# 
   575  0392                     	;# 
   576  0393                     	;# 
   577  0498                     	;# 
   578  0498                     	;# 
   579  0499                     	;# 
   580  049A                     	;# 
   581  049B                     	;# 
   582  049B                     	;# 
   583  049C                     	;# 
   584  049D                     	;# 
   585  049E                     	;# 
   586  049F                     	;# 
   587  0611                     	;# 
   588  0612                     	;# 
   589  0613                     	;# 
   590  0613                     	;# 
   591  0614                     	;# 
   592  0615                     	;# 
   593  0616                     	;# 
   594  0616                     	;# 
   595  0617                     	;# 
   596  0618                     	;# 
   597  0619                     	;# 
   598  0619                     	;# 
   599  061A                     	;# 
   600  061B                     	;# 
   601  061C                     	;# 
   602  061C                     	;# 
   603  0691                     	;# 
   604  0692                     	;# 
   605  0693                     	;# 
   606  0694                     	;# 
   607  0695                     	;# 
   608  0F0F                     	;# 
   609  0F10                     	;# 
   610  0F11                     	;# 
   611  0F12                     	;# 
   612  0F13                     	;# 
   613  0F14                     	;# 
   614  0F15                     	;# 
   615  0F16                     	;# 
   616  0F17                     	;# 
   617  0F18                     	;# 
   618  0F19                     	;# 
   619  0F1A                     	;# 
   620  0F1B                     	;# 
   621  0F1C                     	;# 
   622  0F1D                     	;# 
   623  0F1E                     	;# 
   624  0F1F                     	;# 
   625  0FE3                     	;# 
   626  0FE4                     	;# 
   627  0FE5                     	;# 
   628  0FE6                     	;# 
   629  0FE7                     	;# 
   630  0FE8                     	;# 
   631  0FE9                     	;# 
   632  0FEA                     	;# 
   633  0FEB                     	;# 
   634  0FED                     	;# 
   635  0FEE                     	;# 
   636  0FEF                     	;# 
   637  0000                     	;# 
   638  0001                     	;# 
   639  0002                     	;# 
   640  0003                     	;# 
   641  0004                     	;# 
   642  0005                     	;# 
   643  0006                     	;# 
   644  0007                     	;# 
   645  0008                     	;# 
   646  0009                     	;# 
   647  000A                     	;# 
   648  000B                     	;# 
   649  000C                     	;# 
   650  000E                     	;# 
   651  0011                     	;# 
   652  0012                     	;# 
   653  0013                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  008C                     	;# 
   664  008E                     	;# 
   665  0091                     	;# 
   666  0092                     	;# 
   667  0093                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0097                     	;# 
   671  0099                     	;# 
   672  009A                     	;# 
   673  009B                     	;# 
   674  009B                     	;# 
   675  009C                     	;# 
   676  009D                     	;# 
   677  009E                     	;# 
   678  009F                     	;# 
   679  010C                     	;# 
   680  010E                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0115                     	;# 
   686  0116                     	;# 
   687  0117                     	;# 
   688  0118                     	;# 
   689  0119                     	;# 
   690  011D                     	;# 
   691  018C                     	;# 
   692  018E                     	;# 
   693  0191                     	;# 
   694  0191                     	;# 
   695  0192                     	;# 
   696  0193                     	;# 
   697  0193                     	;# 
   698  0194                     	;# 
   699  0195                     	;# 
   700  0196                     	;# 
   701  0197                     	;# 
   702  020C                     	;# 
   703  0211                     	;# 
   704  0211                     	;# 
   705  0212                     	;# 
   706  0212                     	;# 
   707  0213                     	;# 
   708  0213                     	;# 
   709  0214                     	;# 
   710  0214                     	;# 
   711  0215                     	;# 
   712  0215                     	;# 
   713  0215                     	;# 
   714  0216                     	;# 
   715  0216                     	;# 
   716  0217                     	;# 
   717  0217                     	;# 
   718  0391                     	;# 
   719  0392                     	;# 
   720  0393                     	;# 
   721  0498                     	;# 
   722  0498                     	;# 
   723  0499                     	;# 
   724  049A                     	;# 
   725  049B                     	;# 
   726  049B                     	;# 
   727  049C                     	;# 
   728  049D                     	;# 
   729  049E                     	;# 
   730  049F                     	;# 
   731  0611                     	;# 
   732  0612                     	;# 
   733  0613                     	;# 
   734  0613                     	;# 
   735  0614                     	;# 
   736  0615                     	;# 
   737  0616                     	;# 
   738  0616                     	;# 
   739  0617                     	;# 
   740  0618                     	;# 
   741  0619                     	;# 
   742  0619                     	;# 
   743  061A                     	;# 
   744  061B                     	;# 
   745  061C                     	;# 
   746  061C                     	;# 
   747  0691                     	;# 
   748  0692                     	;# 
   749  0693                     	;# 
   750  0694                     	;# 
   751  0695                     	;# 
   752  0F0F                     	;# 
   753  0F10                     	;# 
   754  0F11                     	;# 
   755  0F12                     	;# 
   756  0F13                     	;# 
   757  0F14                     	;# 
   758  0F15                     	;# 
   759  0F16                     	;# 
   760  0F17                     	;# 
   761  0F18                     	;# 
   762  0F19                     	;# 
   763  0F1A                     	;# 
   764  0F1B                     	;# 
   765  0F1C                     	;# 
   766  0F1D                     	;# 
   767  0F1E                     	;# 
   768  0F1F                     	;# 
   769  0FE3                     	;# 
   770  0FE4                     	;# 
   771  0FE5                     	;# 
   772  0FE6                     	;# 
   773  0FE7                     	;# 
   774  0FE8                     	;# 
   775  0FE9                     	;# 
   776  0FEA                     	;# 
   777  0FEB                     	;# 
   778  0FED                     	;# 
   779  0FEE                     	;# 
   780  0FEF                     	;# 
   781  0000                     	;# 
   782  0001                     	;# 
   783  0002                     	;# 
   784  0003                     	;# 
   785  0004                     	;# 
   786  0005                     	;# 
   787  0006                     	;# 
   788  0007                     	;# 
   789  0008                     	;# 
   790  0009                     	;# 
   791  000A                     	;# 
   792  000B                     	;# 
   793  000C                     	;# 
   794  000E                     	;# 
   795  0011                     	;# 
   796  0012                     	;# 
   797  0013                     	;# 
   798  0015                     	;# 
   799  0016                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  008C                     	;# 
   808  008E                     	;# 
   809  0091                     	;# 
   810  0092                     	;# 
   811  0093                     	;# 
   812  0095                     	;# 
   813  0096                     	;# 
   814  0097                     	;# 
   815  0099                     	;# 
   816  009A                     	;# 
   817  009B                     	;# 
   818  009B                     	;# 
   819  009C                     	;# 
   820  009D                     	;# 
   821  009E                     	;# 
   822  009F                     	;# 
   823  010C                     	;# 
   824  010E                     	;# 
   825  0111                     	;# 
   826  0112                     	;# 
   827  0113                     	;# 
   828  0114                     	;# 
   829  0115                     	;# 
   830  0116                     	;# 
   831  0117                     	;# 
   832  0118                     	;# 
   833  0119                     	;# 
   834  011D                     	;# 
   835  018C                     	;# 
   836  018E                     	;# 
   837  0191                     	;# 
   838  0191                     	;# 
   839  0192                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0194                     	;# 
   843  0195                     	;# 
   844  0196                     	;# 
   845  0197                     	;# 
   846  020C                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0216                     	;# 
   860  0217                     	;# 
   861  0217                     	;# 
   862  0391                     	;# 
   863  0392                     	;# 
   864  0393                     	;# 
   865  0498                     	;# 
   866  0498                     	;# 
   867  0499                     	;# 
   868  049A                     	;# 
   869  049B                     	;# 
   870  049B                     	;# 
   871  049C                     	;# 
   872  049D                     	;# 
   873  049E                     	;# 
   874  049F                     	;# 
   875  0611                     	;# 
   876  0612                     	;# 
   877  0613                     	;# 
   878  0613                     	;# 
   879  0614                     	;# 
   880  0615                     	;# 
   881  0616                     	;# 
   882  0616                     	;# 
   883  0617                     	;# 
   884  0618                     	;# 
   885  0619                     	;# 
   886  0619                     	;# 
   887  061A                     	;# 
   888  061B                     	;# 
   889  061C                     	;# 
   890  061C                     	;# 
   891  0691                     	;# 
   892  0692                     	;# 
   893  0693                     	;# 
   894  0694                     	;# 
   895  0695                     	;# 
   896  0F0F                     	;# 
   897  0F10                     	;# 
   898  0F11                     	;# 
   899  0F12                     	;# 
   900  0F13                     	;# 
   901  0F14                     	;# 
   902  0F15                     	;# 
   903  0F16                     	;# 
   904  0F17                     	;# 
   905  0F18                     	;# 
   906  0F19                     	;# 
   907  0F1A                     	;# 
   908  0F1B                     	;# 
   909  0F1C                     	;# 
   910  0F1D                     	;# 
   911  0F1E                     	;# 
   912  0F1F                     	;# 
   913  0FE3                     	;# 
   914  0FE4                     	;# 
   915  0FE5                     	;# 
   916  0FE6                     	;# 
   917  0FE7                     	;# 
   918  0FE8                     	;# 
   919  0FE9                     	;# 
   920  0FEA                     	;# 
   921  0FEB                     	;# 
   922  0FED                     	;# 
   923  0FEE                     	;# 
   924  0FEF                     	;# 
   925                           
   926                           	psect	idataCOMMON
   927  01CF                     __pidataCOMMON:	
   928                           
   929                           ;initializer for main@commandDN
   930  01CF  3401               	retlw	1
   931                           
   932                           ;initializer for main@commandUP
   933  01D0  3401               	retlw	1
   934                           
   935                           	psect	nvCOMMON
   936  0079                     __pnvCOMMON:	
   937  0079                     _pwm1_dutyCycle:	
   938  0079                     	ds	2
   939                           
   940                           	psect	nvBANK0
   941  0020                     __pnvBANK0:	
   942  0020                     _pwm4_dutyCycle:	
   943  0020                     	ds	2
   944  0022                     _pwm3_dutyCycle:	
   945  0022                     	ds	2
   946  0024                     _pwm2_dutyCycle:	
   947  0024                     	ds	2
   948  001C                     _T2CONbits	set	28
   949  001A                     _TMR2	set	26
   950  001B                     _PR2	set	27
   951  001C                     _T2CON	set	28
   952  000E                     _PORTCbits	set	14
   953  000C                     _PORTAbits	set	12
   954  0095                     _OPTION_REGbits	set	149
   955  008E                     _TRISC	set	142
   956  008C                     _TRISA	set	140
   957  0097                     _WDTCON	set	151
   958  0099                     _OSCCON	set	153
   959  010E                     _LATC	set	270
   960  010C                     _LATA	set	268
   961  018E                     _ANSELC	set	398
   962  018C                     _ANSELA	set	396
   963  020C                     _WPUA	set	524
   964  061A                     _PWM4DCL	set	1562
   965  061B                     _PWM4DCH	set	1563
   966  0617                     _PWM3DCL	set	1559
   967  0618                     _PWM3DCH	set	1560
   968  0614                     _PWM2DCL	set	1556
   969  0615                     _PWM2DCH	set	1557
   970  0611                     _PWM1DCL	set	1553
   971  0612                     _PWM1DCH	set	1554
   972  061C                     _PWM4CON	set	1564
   973  0619                     _PWM3CON	set	1561
   974  0616                     _PWM2CON	set	1558
   975  0613                     _PWM1CON	set	1555
   976                           
   977                           ; #config settings
   978  0000                     
   979                           	psect	cinit
   980  000E                     start_initialization:	
   981  000E                     __initialization:	
   982                           
   983                           ; Initialize objects allocated to COMMON
   984  000E  21CF               	fcall	__pidataCOMMON	;fetch initializer
   985  000F  00FB               	movwf	__pdataCOMMON& (0+127)
   986  0010  21D0               	fcall	__pidataCOMMON+1	;fetch initializer
   987  0011  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   988  0012                     end_of_initialization:	
   989                           ;End of C runtime variable initialization code
   990                           
   991  0012                     __end_of__initialization:	
   992  0012  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   993  0013  0020               	movlb	0
   994  0014  28F3               	ljmp	_main	;jump to C main() function
   995                           
   996                           	psect	dataCOMMON
   997  007B                     __pdataCOMMON:	
   998  007B                     main@commandDN:	
   999  007B                     	ds	1
  1000  007C                     main@commandUP:	
  1001  007C                     	ds	1
  1002                           
  1003                           	psect	cstackCOMMON
  1004  0070                     __pcstackCOMMON:	
  1005  0070                     ?_ConfigureOscillator:	
  1006  0070                     ?_InitApp:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_decDutyCycle:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?_getPWMSEL:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?_incDutyCycle:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?__init_gpio:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?__init_timer2:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?__init_pwm:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     ?_isr:	
  1028                           ; 1 bytes @ 0x0
  1029                           
  1030  0070                     ??_isr:	
  1031                           ; 1 bytes @ 0x0
  1032                           
  1033  0070                     ?_main:	
  1034                           ; 1 bytes @ 0x0
  1035                           
  1036                           
  1037                           ; 1 bytes @ 0x0
  1038  0070                     	ds	1
  1039  0071                     ??_ConfigureOscillator:	
  1040  0071                     ??_getPWMSEL:	
  1041                           ; 1 bytes @ 0x1
  1042                           
  1043  0071                     ??__init_gpio:	
  1044                           ; 1 bytes @ 0x1
  1045                           
  1046  0071                     ??__init_timer2:	
  1047                           ; 1 bytes @ 0x1
  1048                           
  1049  0071                     ?_pwm1_writeDutyCycle:	
  1050                           ; 1 bytes @ 0x1
  1051                           
  1052  0071                     ?_pwm2_writeDutyCycle:	
  1053                           ; 2 bytes @ 0x1
  1054                           
  1055  0071                     ?_pwm3_writeDutyCycle:	
  1056                           ; 2 bytes @ 0x1
  1057                           
  1058  0071                     ?_pwm4_writeDutyCycle:	
  1059                           ; 2 bytes @ 0x1
  1060                           
  1061  0071                     ?_checkDCBounds:	
  1062                           ; 2 bytes @ 0x1
  1063                           
  1064  0071                     pwm1_writeDutyCycle@dutyCycle:	
  1065                           ; 2 bytes @ 0x1
  1066                           
  1067  0071                     pwm2_writeDutyCycle@dutyCycle:	
  1068                           ; 2 bytes @ 0x1
  1069                           
  1070  0071                     pwm3_writeDutyCycle@dutyCycle:	
  1071                           ; 2 bytes @ 0x1
  1072                           
  1073  0071                     pwm4_writeDutyCycle@dutyCycle:	
  1074                           ; 2 bytes @ 0x1
  1075                           
  1076  0071                     checkDCBounds@dc:	
  1077                           ; 2 bytes @ 0x1
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x1
  1081  0071                     	ds	2
  1082  0073                     ??_pwm1_writeDutyCycle:	
  1083  0073                     ??_pwm2_writeDutyCycle:	
  1084                           ; 1 bytes @ 0x3
  1085                           
  1086  0073                     ??_pwm3_writeDutyCycle:	
  1087                           ; 1 bytes @ 0x3
  1088                           
  1089  0073                     ??_pwm4_writeDutyCycle:	
  1090                           ; 1 bytes @ 0x3
  1091                           
  1092  0073                     checkDCBounds@direction:	
  1093                           ; 1 bytes @ 0x3
  1094                           
  1095                           
  1096                           ; 1 bytes @ 0x3
  1097  0073                     	ds	1
  1098  0074                     ??_checkDCBounds:	
  1099  0074                     checkDCBounds@retval:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102                           
  1103                           ; 2 bytes @ 0x4
  1104  0074                     	ds	1
  1105  0075                     ??_InitApp:	
  1106  0075                     ??__init_pwm:	
  1107                           ; 1 bytes @ 0x5
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0x5
  1111  0075                     	ds	1
  1112  0076                     ??_decDutyCycle:	
  1113  0076                     ??_incDutyCycle:	
  1114                           ; 1 bytes @ 0x6
  1115                           
  1116  0076                     incDutyCycle@chan:	
  1117                           ; 1 bytes @ 0x6
  1118                           
  1119  0076                     decDutyCycle@chan:	
  1120                           ; 1 bytes @ 0x6
  1121                           
  1122                           
  1123                           ; 1 bytes @ 0x6
  1124  0076                     	ds	1
  1125  0077                     incDutyCycle@dutyCycle:	
  1126  0077                     decDutyCycle@dutyCycle:	
  1127                           ; 2 bytes @ 0x7
  1128                           
  1129                           
  1130                           ; 2 bytes @ 0x7
  1131  0077                     	ds	2
  1132  0079                     ??_main:	
  1133                           
  1134                           	psect	maintext
  1135  00F3                     __pmaintext:	
  1136                           ; 1 bytes @ 0x9
  1137 ;;
  1138 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1139 ;;
  1140 ;; *************** function _main *****************
  1141 ;; Defined at:
  1142 ;;		line 26 in file "main.c"
  1143 ;; Parameters:    Size  Location     Type
  1144 ;;		None
  1145 ;; Auto vars:     Size  Location     Type
  1146 ;;		None
  1147 ;; Return value:  Size  Location     Type
  1148 ;;                  1    wreg      void 
  1149 ;; Registers used:
  1150 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1151 ;; Tracked objects:
  1152 ;;		On entry : B1F/0
  1153 ;;		On exit  : 0/0
  1154 ;;		Unchanged: 0/0
  1155 ;; Data sizes:     COMMON   BANK0   BANK1
  1156 ;;      Params:         0       0       0
  1157 ;;      Locals:         0       0       0
  1158 ;;      Temps:          0       0       0
  1159 ;;      Totals:         0       0       0
  1160 ;;Total ram usage:        0 bytes
  1161 ;; Hardware stack levels required when called:    4
  1162 ;; This function calls:
  1163 ;;		_ConfigureOscillator
  1164 ;;		_InitApp
  1165 ;;		_decDutyCycle
  1166 ;;		_getPWMSEL
  1167 ;;		_incDutyCycle
  1168 ;; This function is called by:
  1169 ;;		Startup code after reset
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           
  1173                           
  1174                           ;psect for function _main
  1175  00F3                     _main:	
  1176                           
  1177                           ;main.c: 29: ConfigureOscillator();
  1178                           
  1179                           ;incstack = 0
  1180                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1181  00F3  21C6               	fcall	_ConfigureOscillator
  1182                           
  1183                           ;main.c: 32: InitApp();
  1184  00F4  21CB               	fcall	_InitApp
  1185  00F5                     l807:	
  1186                           ;main.c: 34: static bool commandUP = 1;
  1187                           ;main.c: 35: static bool commandDN = 1;
  1188                           ;main.c: 37: while(1)
  1189                           
  1190                           
  1191                           ;main.c: 38: {
  1192                           ;main.c: 39: if( PORTAbits.RA5 == 1 ){
  1193  00F5  0020               	movlb	0	; select bank0
  1194  00F6  1E8C               	btfss	12,5	;volatile
  1195  00F7  28FA               	goto	l29
  1196                           
  1197                           ;main.c: 40: commandDN = 1;
  1198  00F8  01FB               	clrf	main@commandDN
  1199  00F9  0AFB               	incf	main@commandDN,f
  1200  00FA                     l29:	
  1201                           
  1202                           ;main.c: 41: }
  1203                           ;main.c: 42: if( PORTAbits.RA4 == 1 ){
  1204  00FA  1E0C               	btfss	12,4	;volatile
  1205  00FB  28FE               	goto	l30
  1206                           
  1207                           ;main.c: 43: commandUP = 1;
  1208  00FC  01FC               	clrf	main@commandUP
  1209  00FD  0AFC               	incf	main@commandUP,f
  1210  00FE                     l30:	
  1211                           
  1212                           ;main.c: 44: }
  1213                           ;main.c: 46: if( PORTAbits.RA5 == 0 && commandDN == 1 && PORTCbits.RC0 == 0){
  1214  00FE  1A8C               	btfsc	12,5	;volatile
  1215  00FF  2907               	goto	l821
  1216  0100  037B               	decf	main@commandDN,w
  1217  0101  1903               	btfsc	3,2
  1218  0102  180E               	btfsc	14,0	;volatile
  1219  0103  2907               	goto	l821
  1220                           
  1221                           ;main.c: 47: decDutyCycle(getPWMSEL());
  1222  0104  2197               	fcall	_getPWMSEL
  1223  0105  2075               	fcall	_decDutyCycle
  1224                           
  1225                           ;main.c: 48: commandDN = 0;
  1226  0106  01FB               	clrf	main@commandDN
  1227  0107                     l821:	
  1228                           
  1229                           ;main.c: 49: }
  1230                           ;main.c: 50: if( PORTAbits.RA4 == 0 && commandUP == 1 && PORTCbits.RC0 == 0){
  1231  0107  0020               	movlb	0	; select bank0
  1232  0108  1A0C               	btfsc	12,4	;volatile
  1233  0109  28F5               	goto	l807
  1234  010A  037C               	decf	main@commandUP,w
  1235  010B  1903               	btfsc	3,2
  1236  010C  180E               	btfsc	14,0	;volatile
  1237  010D  28F5               	goto	l807
  1238                           
  1239                           ;main.c: 51: incDutyCycle(getPWMSEL());
  1240  010E  2197               	fcall	_getPWMSEL
  1241  010F  2015               	fcall	_incDutyCycle
  1242                           
  1243                           ;main.c: 52: commandUP = 0;
  1244  0110  01FC               	clrf	main@commandUP
  1245  0111  28F5               	goto	l807
  1246  0112                     __end_of_main:	
  1247                           
  1248                           	psect	text1
  1249  0015                     __ptext1:	
  1250 ;; *************** function _incDutyCycle *****************
  1251 ;; Defined at:
  1252 ;;		line 80 in file "pwm.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;  chan            1    wreg     enum E2930
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  chan            1    6[COMMON] enum E2930
  1257 ;;  dutyCycle       2    7[COMMON] unsigned int 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1
  1267 ;;      Params:         0       0       0
  1268 ;;      Locals:         3       0       0
  1269 ;;      Temps:          0       0       0
  1270 ;;      Totals:         3       0       0
  1271 ;;Total ram usage:        3 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    2
  1274 ;; This function calls:
  1275 ;;		_checkDCBounds
  1276 ;;		_pwm1_writeDutyCycle
  1277 ;;		_pwm2_writeDutyCycle
  1278 ;;		_pwm3_writeDutyCycle
  1279 ;;		_pwm4_writeDutyCycle
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _incDutyCycle
  1287  0015                     _incDutyCycle:	
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _incDutyCycle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1291                           ;incDutyCycle@chan stored from wreg
  1292  0015  00F6               	movwf	incDutyCycle@chan
  1293                           
  1294                           ;pwm.c: 81: uint16_t dutyCycle;
  1295                           ;pwm.c: 83: switch(chan){
  1296  0016  2866               	goto	l803
  1297  0017                     l793:	
  1298                           ;pwm.c: 84: case PWM_CH1:
  1299                           
  1300                           
  1301                           ;pwm.c: 86: dutyCycle = checkDCBounds(pwm1_dutyCycle + 1U, 1);
  1302  0017  0879               	movf	_pwm1_dutyCycle,w	;volatile
  1303  0018  3E01               	addlw	1
  1304  0019  00F1               	movwf	checkDCBounds@dc
  1305  001A  3000               	movlw	0
  1306  001B  3D7A               	addwfc	_pwm1_dutyCycle+1,w	;volatile
  1307  001C  00F2               	movwf	checkDCBounds@dc+1
  1308  001D  01F3               	clrf	checkDCBounds@direction
  1309  001E  0AF3               	incf	checkDCBounds@direction,f
  1310  001F  2163               	fcall	_checkDCBounds
  1311  0020  0872               	movf	?_checkDCBounds+1,w
  1312  0021  00F8               	movwf	incDutyCycle@dutyCycle+1
  1313  0022  0871               	movf	?_checkDCBounds,w
  1314  0023  00F7               	movwf	incDutyCycle@dutyCycle
  1315                           
  1316                           ;pwm.c: 89: pwm1_writeDutyCycle(dutyCycle);
  1317  0024  0878               	movf	incDutyCycle@dutyCycle+1,w
  1318  0025  00F2               	movwf	pwm1_writeDutyCycle@dutyCycle+1
  1319  0026  0877               	movf	incDutyCycle@dutyCycle,w
  1320  0027  00F1               	movwf	pwm1_writeDutyCycle@dutyCycle
  1321  0028  217D               	fcall	_pwm1_writeDutyCycle
  1322                           
  1323                           ;pwm.c: 91: break;
  1324  0029  0008               	return
  1325  002A                     l795:	
  1326                           ;pwm.c: 93: case PWM_CH2:
  1327                           
  1328                           
  1329                           ;pwm.c: 95: dutyCycle = checkDCBounds(pwm2_dutyCycle + 1U, 1);
  1330  002A  0020               	movlb	0	; select bank0
  1331  002B  0824               	movf	_pwm2_dutyCycle,w	;volatile
  1332  002C  3E01               	addlw	1
  1333  002D  00F1               	movwf	checkDCBounds@dc
  1334  002E  3000               	movlw	0
  1335  002F  3D25               	addwfc	_pwm2_dutyCycle+1,w	;volatile
  1336  0030  00F2               	movwf	checkDCBounds@dc+1
  1337  0031  01F3               	clrf	checkDCBounds@direction
  1338  0032  0AF3               	incf	checkDCBounds@direction,f
  1339  0033  2163               	fcall	_checkDCBounds
  1340  0034  0872               	movf	?_checkDCBounds+1,w
  1341  0035  00F8               	movwf	incDutyCycle@dutyCycle+1
  1342  0036  0871               	movf	?_checkDCBounds,w
  1343  0037  00F7               	movwf	incDutyCycle@dutyCycle
  1344                           
  1345                           ;pwm.c: 98: pwm2_writeDutyCycle(dutyCycle);
  1346  0038  0878               	movf	incDutyCycle@dutyCycle+1,w
  1347  0039  00F2               	movwf	pwm2_writeDutyCycle@dutyCycle+1
  1348  003A  0877               	movf	incDutyCycle@dutyCycle,w
  1349  003B  00F1               	movwf	pwm2_writeDutyCycle@dutyCycle
  1350  003C  2148               	fcall	_pwm2_writeDutyCycle
  1351                           
  1352                           ;pwm.c: 100: break;
  1353  003D  0008               	return
  1354  003E                     l797:	
  1355                           ;pwm.c: 102: case PWM_CH3:
  1356                           
  1357                           
  1358                           ;pwm.c: 104: dutyCycle = checkDCBounds(pwm3_dutyCycle + 1U, 1);
  1359  003E  0020               	movlb	0	; select bank0
  1360  003F  0822               	movf	_pwm3_dutyCycle,w	;volatile
  1361  0040  3E01               	addlw	1
  1362  0041  00F1               	movwf	checkDCBounds@dc
  1363  0042  3000               	movlw	0
  1364  0043  3D23               	addwfc	_pwm3_dutyCycle+1,w	;volatile
  1365  0044  00F2               	movwf	checkDCBounds@dc+1
  1366  0045  01F3               	clrf	checkDCBounds@direction
  1367  0046  0AF3               	incf	checkDCBounds@direction,f
  1368  0047  2163               	fcall	_checkDCBounds
  1369  0048  0872               	movf	?_checkDCBounds+1,w
  1370  0049  00F8               	movwf	incDutyCycle@dutyCycle+1
  1371  004A  0871               	movf	?_checkDCBounds,w
  1372  004B  00F7               	movwf	incDutyCycle@dutyCycle
  1373                           
  1374                           ;pwm.c: 107: pwm3_writeDutyCycle(dutyCycle);
  1375  004C  0878               	movf	incDutyCycle@dutyCycle+1,w
  1376  004D  00F2               	movwf	pwm3_writeDutyCycle@dutyCycle+1
  1377  004E  0877               	movf	incDutyCycle@dutyCycle,w
  1378  004F  00F1               	movwf	pwm3_writeDutyCycle@dutyCycle
  1379  0050  212D               	fcall	_pwm3_writeDutyCycle
  1380                           
  1381                           ;pwm.c: 109: break;
  1382  0051  0008               	return
  1383  0052                     l799:	
  1384                           ;pwm.c: 111: case PWM_CH4:
  1385                           
  1386                           
  1387                           ;pwm.c: 113: dutyCycle = checkDCBounds(pwm4_dutyCycle + 1U, 1);
  1388  0052  0020               	movlb	0	; select bank0
  1389  0053  0820               	movf	_pwm4_dutyCycle,w	;volatile
  1390  0054  3E01               	addlw	1
  1391  0055  00F1               	movwf	checkDCBounds@dc
  1392  0056  3000               	movlw	0
  1393  0057  3D21               	addwfc	_pwm4_dutyCycle+1,w	;volatile
  1394  0058  00F2               	movwf	checkDCBounds@dc+1
  1395  0059  01F3               	clrf	checkDCBounds@direction
  1396  005A  0AF3               	incf	checkDCBounds@direction,f
  1397  005B  2163               	fcall	_checkDCBounds
  1398  005C  0872               	movf	?_checkDCBounds+1,w
  1399  005D  00F8               	movwf	incDutyCycle@dutyCycle+1
  1400  005E  0871               	movf	?_checkDCBounds,w
  1401  005F  00F7               	movwf	incDutyCycle@dutyCycle
  1402                           
  1403                           ;pwm.c: 116: pwm4_writeDutyCycle(dutyCycle);
  1404  0060  0878               	movf	incDutyCycle@dutyCycle+1,w
  1405  0061  00F2               	movwf	pwm4_writeDutyCycle@dutyCycle+1
  1406  0062  0877               	movf	incDutyCycle@dutyCycle,w
  1407  0063  00F1               	movwf	pwm4_writeDutyCycle@dutyCycle
  1408  0064  2112               	fcall	_pwm4_writeDutyCycle
  1409                           
  1410                           ;pwm.c: 123: }
  1411                           
  1412                           ;pwm.c: 122: break;
  1413                           
  1414                           ;pwm.c: 120: default:
  1415                           
  1416                           ;pwm.c: 118: break;
  1417  0065  0008               	return
  1418  0066                     l803:	
  1419  0066  0876               	movf	incDutyCycle@chan,w
  1420                           
  1421                           ; Switch size 1, requested type "space"
  1422                           ; Number of cases is 4, Range of values is 0 to 3
  1423                           ; switch strategies available:
  1424                           ; Name         Instructions Cycles
  1425                           ; simple_byte           13     7 (average)
  1426                           ; direct_byte           14     6 (fixed)
  1427                           ; jumptable            260     6 (fixed)
  1428                           ;	Chosen strategy is simple_byte
  1429  0067  3A00               	xorlw	0	; case 0
  1430  0068  1903               	skipnz
  1431  0069  2817               	goto	l793
  1432  006A  3A01               	xorlw	1	; case 1
  1433  006B  1903               	skipnz
  1434  006C  282A               	goto	l795
  1435  006D  3A03               	xorlw	3	; case 2
  1436  006E  1903               	skipnz
  1437  006F  283E               	goto	l797
  1438  0070  3A01               	xorlw	1	; case 3
  1439  0071  1903               	skipnz
  1440  0072  2852               	goto	l799
  1441  0073  2874               	goto	l154
  1442  0074                     l154:	
  1443  0074  0008               	return
  1444  0075                     __end_of_incDutyCycle:	
  1445                           
  1446                           	psect	text2
  1447  0197                     __ptext2:	
  1448 ;; *************** function _getPWMSEL *****************
  1449 ;; Defined at:
  1450 ;;		line 172 in file "pwm.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;		None
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;		None
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  1    wreg      enum E2938
  1457 ;; Registers used:
  1458 ;;		wreg
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMMON   BANK0   BANK1
  1464 ;;      Params:         0       0       0
  1465 ;;      Locals:         0       0       0
  1466 ;;      Temps:          0       0       0
  1467 ;;      Totals:         0       0       0
  1468 ;;Total ram usage:        0 bytes
  1469 ;; Hardware stack levels used:    1
  1470 ;; Hardware stack levels required when called:    1
  1471 ;; This function calls:
  1472 ;;		Nothing
  1473 ;; This function is called by:
  1474 ;;		_main
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           
  1479                           ;psect for function _getPWMSEL
  1480  0197                     _getPWMSEL:	
  1481                           
  1482                           ;pwm.c: 174: if(PORTCbits.RC4 == 0 && PORTCbits.RC2 == 0){
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _getPWMSEL: [wreg]
  1486  0197  0020               	movlb	0	; select bank0
  1487  0198  1E0E               	btfss	14,4	;volatile
  1488  0199  190E               	btfsc	14,2	;volatile
  1489  019A  299D               	goto	l167
  1490                           
  1491                           ;pwm.c: 175: return PWM_CH1;
  1492  019B  3000               	movlw	0
  1493  019C  0008               	return
  1494  019D                     l167:	
  1495                           ;pwm.c: 176: }else if(PORTCbits.RC4 == 0 && PORTCbits.RC2 == 1){
  1496                           
  1497  019D  1E0E               	btfss	14,4	;volatile
  1498  019E  1D0E               	btfss	14,2	;volatile
  1499  019F  29A2               	goto	l170
  1500                           
  1501                           ;pwm.c: 177: return PWM_CH2;
  1502  01A0  3001               	movlw	1
  1503  01A1  0008               	return
  1504  01A2                     l170:	
  1505                           ;pwm.c: 178: }else if(PORTCbits.RC4 == 1 && PORTCbits.RC2 == 0){
  1506                           
  1507  01A2  1A0E               	btfsc	14,4	;volatile
  1508  01A3  190E               	btfsc	14,2	;volatile
  1509  01A4  29A7               	goto	l172
  1510                           
  1511                           ;pwm.c: 179: return PWM_CH3;
  1512  01A5  3002               	movlw	2
  1513  01A6  0008               	return
  1514  01A7                     l172:	
  1515                           ;pwm.c: 180: }else if( PORTCbits.RC4 == 1 && PORTCbits.RC2 == 1){
  1516                           
  1517  01A7  1A0E               	btfsc	14,4	;volatile
  1518  01A8  1D0E               	btfss	14,2	;volatile
  1519  01A9  29AC               	goto	l663
  1520                           
  1521                           ;pwm.c: 181: return PWM_CH4;
  1522  01AA  3003               	movlw	3
  1523  01AB  0008               	return
  1524  01AC                     l663:	
  1525                           ;pwm.c: 182: }else{
  1526                           
  1527                           
  1528                           ;pwm.c: 184: }
  1529                           ;pwm.c: 186: return PWM_CH1;
  1530  01AC  3000               	movlw	0
  1531  01AD  0008               	return
  1532  01AE                     __end_of_getPWMSEL:	
  1533                           
  1534                           	psect	text3
  1535  0075                     __ptext3:	
  1536 ;; *************** function _decDutyCycle *****************
  1537 ;; Defined at:
  1538 ;;		line 126 in file "pwm.c"
  1539 ;; Parameters:    Size  Location     Type
  1540 ;;  chan            1    wreg     enum E2930
  1541 ;; Auto vars:     Size  Location     Type
  1542 ;;  chan            1    6[COMMON] enum E2930
  1543 ;;  dutyCycle       2    7[COMMON] unsigned int 
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1
  1553 ;;      Params:         0       0       0
  1554 ;;      Locals:         3       0       0
  1555 ;;      Temps:          0       0       0
  1556 ;;      Totals:         3       0       0
  1557 ;;Total ram usage:        3 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    2
  1560 ;; This function calls:
  1561 ;;		_checkDCBounds
  1562 ;;		_pwm1_writeDutyCycle
  1563 ;;		_pwm2_writeDutyCycle
  1564 ;;		_pwm3_writeDutyCycle
  1565 ;;		_pwm4_writeDutyCycle
  1566 ;; This function is called by:
  1567 ;;		_main
  1568 ;; This function uses a non-reentrant model
  1569 ;;
  1570                           
  1571                           
  1572                           ;psect for function _decDutyCycle
  1573  0075                     _decDutyCycle:	
  1574                           
  1575                           ;incstack = 0
  1576                           ; Regs used in _decDutyCycle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1577                           ;decDutyCycle@chan stored from wreg
  1578  0075  00F6               	movwf	decDutyCycle@chan
  1579                           
  1580                           ;pwm.c: 127: uint16_t dutyCycle;
  1581                           ;pwm.c: 129: switch(chan){
  1582  0076  28C2               	goto	l789
  1583  0077                     l779:	
  1584                           ;pwm.c: 130: case PWM_CH1:
  1585                           
  1586                           
  1587                           ;pwm.c: 132: dutyCycle = checkDCBounds(pwm1_dutyCycle - 1U, 0);
  1588  0077  0879               	movf	_pwm1_dutyCycle,w	;volatile
  1589  0078  3EFF               	addlw	255
  1590  0079  00F1               	movwf	checkDCBounds@dc
  1591  007A  30FF               	movlw	255
  1592  007B  3D7A               	addwfc	_pwm1_dutyCycle+1,w	;volatile
  1593  007C  00F2               	movwf	checkDCBounds@dc+1
  1594  007D  01F3               	clrf	checkDCBounds@direction
  1595  007E  2163               	fcall	_checkDCBounds
  1596  007F  0872               	movf	?_checkDCBounds+1,w
  1597  0080  00F8               	movwf	decDutyCycle@dutyCycle+1
  1598  0081  0871               	movf	?_checkDCBounds,w
  1599  0082  00F7               	movwf	decDutyCycle@dutyCycle
  1600                           
  1601                           ;pwm.c: 135: pwm1_writeDutyCycle(dutyCycle);
  1602  0083  0878               	movf	decDutyCycle@dutyCycle+1,w
  1603  0084  00F2               	movwf	pwm1_writeDutyCycle@dutyCycle+1
  1604  0085  0877               	movf	decDutyCycle@dutyCycle,w
  1605  0086  00F1               	movwf	pwm1_writeDutyCycle@dutyCycle
  1606  0087  217D               	fcall	_pwm1_writeDutyCycle
  1607                           
  1608                           ;pwm.c: 137: break;
  1609  0088  0008               	return
  1610  0089                     l781:	
  1611                           ;pwm.c: 139: case PWM_CH2:
  1612                           
  1613                           
  1614                           ;pwm.c: 141: dutyCycle = checkDCBounds(pwm2_dutyCycle - 1U, 0);
  1615  0089  0020               	movlb	0	; select bank0
  1616  008A  0824               	movf	_pwm2_dutyCycle,w	;volatile
  1617  008B  3EFF               	addlw	255
  1618  008C  00F1               	movwf	checkDCBounds@dc
  1619  008D  30FF               	movlw	255
  1620  008E  3D25               	addwfc	_pwm2_dutyCycle+1,w	;volatile
  1621  008F  00F2               	movwf	checkDCBounds@dc+1
  1622  0090  01F3               	clrf	checkDCBounds@direction
  1623  0091  2163               	fcall	_checkDCBounds
  1624  0092  0872               	movf	?_checkDCBounds+1,w
  1625  0093  00F8               	movwf	decDutyCycle@dutyCycle+1
  1626  0094  0871               	movf	?_checkDCBounds,w
  1627  0095  00F7               	movwf	decDutyCycle@dutyCycle
  1628                           
  1629                           ;pwm.c: 144: pwm2_writeDutyCycle(dutyCycle);
  1630  0096  0878               	movf	decDutyCycle@dutyCycle+1,w
  1631  0097  00F2               	movwf	pwm2_writeDutyCycle@dutyCycle+1
  1632  0098  0877               	movf	decDutyCycle@dutyCycle,w
  1633  0099  00F1               	movwf	pwm2_writeDutyCycle@dutyCycle
  1634  009A  2148               	fcall	_pwm2_writeDutyCycle
  1635                           
  1636                           ;pwm.c: 146: break;
  1637  009B  0008               	return
  1638  009C                     l783:	
  1639                           ;pwm.c: 148: case PWM_CH3:
  1640                           
  1641                           
  1642                           ;pwm.c: 150: dutyCycle = checkDCBounds(pwm3_dutyCycle - 1U, 0);
  1643  009C  0020               	movlb	0	; select bank0
  1644  009D  0822               	movf	_pwm3_dutyCycle,w	;volatile
  1645  009E  3EFF               	addlw	255
  1646  009F  00F1               	movwf	checkDCBounds@dc
  1647  00A0  30FF               	movlw	255
  1648  00A1  3D23               	addwfc	_pwm3_dutyCycle+1,w	;volatile
  1649  00A2  00F2               	movwf	checkDCBounds@dc+1
  1650  00A3  01F3               	clrf	checkDCBounds@direction
  1651  00A4  2163               	fcall	_checkDCBounds
  1652  00A5  0872               	movf	?_checkDCBounds+1,w
  1653  00A6  00F8               	movwf	decDutyCycle@dutyCycle+1
  1654  00A7  0871               	movf	?_checkDCBounds,w
  1655  00A8  00F7               	movwf	decDutyCycle@dutyCycle
  1656                           
  1657                           ;pwm.c: 153: pwm3_writeDutyCycle(dutyCycle);
  1658  00A9  0878               	movf	decDutyCycle@dutyCycle+1,w
  1659  00AA  00F2               	movwf	pwm3_writeDutyCycle@dutyCycle+1
  1660  00AB  0877               	movf	decDutyCycle@dutyCycle,w
  1661  00AC  00F1               	movwf	pwm3_writeDutyCycle@dutyCycle
  1662  00AD  212D               	fcall	_pwm3_writeDutyCycle
  1663                           
  1664                           ;pwm.c: 155: break;
  1665  00AE  0008               	return
  1666  00AF                     l785:	
  1667                           ;pwm.c: 157: case PWM_CH4:
  1668                           
  1669                           
  1670                           ;pwm.c: 159: dutyCycle = checkDCBounds(pwm4_dutyCycle - 1U, 0);
  1671  00AF  0020               	movlb	0	; select bank0
  1672  00B0  0820               	movf	_pwm4_dutyCycle,w	;volatile
  1673  00B1  3EFF               	addlw	255
  1674  00B2  00F1               	movwf	checkDCBounds@dc
  1675  00B3  30FF               	movlw	255
  1676  00B4  3D21               	addwfc	_pwm4_dutyCycle+1,w	;volatile
  1677  00B5  00F2               	movwf	checkDCBounds@dc+1
  1678  00B6  01F3               	clrf	checkDCBounds@direction
  1679  00B7  2163               	fcall	_checkDCBounds
  1680  00B8  0872               	movf	?_checkDCBounds+1,w
  1681  00B9  00F8               	movwf	decDutyCycle@dutyCycle+1
  1682  00BA  0871               	movf	?_checkDCBounds,w
  1683  00BB  00F7               	movwf	decDutyCycle@dutyCycle
  1684                           
  1685                           ;pwm.c: 162: pwm4_writeDutyCycle(dutyCycle);
  1686  00BC  0878               	movf	decDutyCycle@dutyCycle+1,w
  1687  00BD  00F2               	movwf	pwm4_writeDutyCycle@dutyCycle+1
  1688  00BE  0877               	movf	decDutyCycle@dutyCycle,w
  1689  00BF  00F1               	movwf	pwm4_writeDutyCycle@dutyCycle
  1690  00C0  2112               	fcall	_pwm4_writeDutyCycle
  1691                           
  1692                           ;pwm.c: 169: }
  1693                           
  1694                           ;pwm.c: 168: break;
  1695                           
  1696                           ;pwm.c: 166: default:
  1697                           
  1698                           ;pwm.c: 164: break;
  1699  00C1  0008               	return
  1700  00C2                     l789:	
  1701  00C2  0876               	movf	decDutyCycle@chan,w
  1702                           
  1703                           ; Switch size 1, requested type "space"
  1704                           ; Number of cases is 4, Range of values is 0 to 3
  1705                           ; switch strategies available:
  1706                           ; Name         Instructions Cycles
  1707                           ; simple_byte           13     7 (average)
  1708                           ; direct_byte           14     6 (fixed)
  1709                           ; jumptable            260     6 (fixed)
  1710                           ;	Chosen strategy is simple_byte
  1711  00C3  3A00               	xorlw	0	; case 0
  1712  00C4  1903               	skipnz
  1713  00C5  2877               	goto	l779
  1714  00C6  3A01               	xorlw	1	; case 1
  1715  00C7  1903               	skipnz
  1716  00C8  2889               	goto	l781
  1717  00C9  3A03               	xorlw	3	; case 2
  1718  00CA  1903               	skipnz
  1719  00CB  289C               	goto	l783
  1720  00CC  3A01               	xorlw	1	; case 3
  1721  00CD  1903               	skipnz
  1722  00CE  28AF               	goto	l785
  1723  00CF  28D0               	goto	l164
  1724  00D0                     l164:	
  1725  00D0  0008               	return
  1726  00D1                     __end_of_decDutyCycle:	
  1727                           
  1728                           	psect	text4
  1729  0163                     __ptext4:	
  1730 ;; *************** function _checkDCBounds *****************
  1731 ;; Defined at:
  1732 ;;		line 66 in file "pwm.c"
  1733 ;; Parameters:    Size  Location     Type
  1734 ;;  dc              2    1[COMMON] unsigned int 
  1735 ;;  direction       1    3[COMMON] unsigned char 
  1736 ;; Auto vars:     Size  Location     Type
  1737 ;;  retval          2    4[COMMON] unsigned int 
  1738 ;; Return value:  Size  Location     Type
  1739 ;;                  2    1[COMMON] unsigned int 
  1740 ;; Registers used:
  1741 ;;		wreg, status,2, status,0
  1742 ;; Tracked objects:
  1743 ;;		On entry : 0/0
  1744 ;;		On exit  : 0/0
  1745 ;;		Unchanged: 0/0
  1746 ;; Data sizes:     COMMON   BANK0   BANK1
  1747 ;;      Params:         3       0       0
  1748 ;;      Locals:         2       0       0
  1749 ;;      Temps:          0       0       0
  1750 ;;      Totals:         5       0       0
  1751 ;;Total ram usage:        5 bytes
  1752 ;; Hardware stack levels used:    1
  1753 ;; Hardware stack levels required when called:    1
  1754 ;; This function calls:
  1755 ;;		Nothing
  1756 ;; This function is called by:
  1757 ;;		_incDutyCycle
  1758 ;;		_decDutyCycle
  1759 ;; This function uses a non-reentrant model
  1760 ;;
  1761                           
  1762                           
  1763                           ;psect for function _checkDCBounds
  1764  0163                     _checkDCBounds:	
  1765                           
  1766                           ;pwm.c: 67: uint16_t retval = dc;
  1767                           
  1768                           ;incstack = 0
  1769                           ; Regs used in _checkDCBounds: [wreg+status,2+status,0]
  1770  0163  0872               	movf	checkDCBounds@dc+1,w
  1771  0164  00F5               	movwf	checkDCBounds@retval+1
  1772  0165  0871               	movf	checkDCBounds@dc,w
  1773  0166  00F4               	movwf	checkDCBounds@retval
  1774                           
  1775                           ;pwm.c: 68: if( dc > 19U ){
  1776  0167  3000               	movlw	0
  1777  0168  0272               	subwf	checkDCBounds@dc+1,w
  1778  0169  3014               	movlw	20
  1779  016A  1903               	skipnz
  1780  016B  0271               	subwf	checkDCBounds@dc,w
  1781  016C  1C03               	skipc
  1782  016D  2978               	goto	l771
  1783                           
  1784                           ;pwm.c: 69: if(direction == 1){
  1785  016E  0373               	decf	checkDCBounds@direction,w
  1786  016F  1D03               	btfss	3,2
  1787  0170  2976               	goto	l769
  1788                           
  1789                           ;pwm.c: 70: retval = 19U;
  1790  0171  3013               	movlw	19
  1791  0172  00F4               	movwf	checkDCBounds@retval
  1792  0173  3000               	movlw	0
  1793  0174  00F5               	movwf	checkDCBounds@retval+1
  1794                           
  1795                           ;pwm.c: 71: }else{
  1796  0175  2978               	goto	l771
  1797  0176                     l769:	
  1798                           
  1799                           ;pwm.c: 72: retval = 0U;
  1800  0176  01F4               	clrf	checkDCBounds@retval
  1801  0177  01F5               	clrf	checkDCBounds@retval+1
  1802  0178                     l771:	
  1803                           
  1804                           ;pwm.c: 73: }
  1805                           ;pwm.c: 74: }
  1806                           ;pwm.c: 76: return retval;
  1807  0178  0875               	movf	checkDCBounds@retval+1,w
  1808  0179  00F2               	movwf	?_checkDCBounds+1
  1809  017A  0874               	movf	checkDCBounds@retval,w
  1810  017B  00F1               	movwf	?_checkDCBounds
  1811  017C  0008               	return
  1812  017D                     __end_of_checkDCBounds:	
  1813                           
  1814                           	psect	text5
  1815  01CB                     __ptext5:	
  1816 ;; *************** function _InitApp *****************
  1817 ;; Defined at:
  1818 ;;		line 13 in file "user.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2, status,0, pclath, cstack
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1
  1832 ;;      Params:         0       0       0
  1833 ;;      Locals:         0       0       0
  1834 ;;      Temps:          0       0       0
  1835 ;;      Totals:         0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    3
  1839 ;; This function calls:
  1840 ;;		__init_gpio
  1841 ;;		__init_pwm
  1842 ;;		__init_timer2
  1843 ;; This function is called by:
  1844 ;;		_main
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           
  1849                           ;psect for function _InitApp
  1850  01CB                     _InitApp:	
  1851                           
  1852                           ;user.c: 17: _init_gpio();
  1853                           
  1854                           ;incstack = 0
  1855                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  1856  01CB  21AE               	fcall	__init_gpio
  1857                           
  1858                           ;user.c: 20: _init_timer2();
  1859  01CC  21BF               	fcall	__init_timer2
  1860                           
  1861                           ;user.c: 21: _init_pwm();
  1862  01CD  20D1               	fcall	__init_pwm
  1863  01CE  0008               	return
  1864  01CF                     __end_of_InitApp:	
  1865                           
  1866                           	psect	text6
  1867  01BF                     __ptext6:	
  1868 ;; *************** function __init_timer2 *****************
  1869 ;; Defined at:
  1870 ;;		line 27 in file "user.c"
  1871 ;; Parameters:    Size  Location     Type
  1872 ;;		None
  1873 ;; Auto vars:     Size  Location     Type
  1874 ;;		None
  1875 ;; Return value:  Size  Location     Type
  1876 ;;                  1    wreg      void 
  1877 ;; Registers used:
  1878 ;;		wreg, status,2
  1879 ;; Tracked objects:
  1880 ;;		On entry : 0/0
  1881 ;;		On exit  : 0/0
  1882 ;;		Unchanged: 0/0
  1883 ;; Data sizes:     COMMON   BANK0   BANK1
  1884 ;;      Params:         0       0       0
  1885 ;;      Locals:         0       0       0
  1886 ;;      Temps:          0       0       0
  1887 ;;      Totals:         0       0       0
  1888 ;;Total ram usage:        0 bytes
  1889 ;; Hardware stack levels used:    1
  1890 ;; Hardware stack levels required when called:    1
  1891 ;; This function calls:
  1892 ;;		Nothing
  1893 ;; This function is called by:
  1894 ;;		_InitApp
  1895 ;; This function uses a non-reentrant model
  1896 ;;
  1897                           
  1898                           
  1899                           ;psect for function __init_timer2
  1900  01BF                     __init_timer2:	
  1901                           
  1902                           ;user.c: 30: T2CON = 0x00;
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in __init_timer2: [wreg+status,2]
  1906  01BF  0020               	movlb	0	; select bank0
  1907  01C0  019C               	clrf	28	;volatile
  1908                           
  1909                           ;user.c: 33: PR2 = 0x04;
  1910  01C1  3004               	movlw	4
  1911  01C2  009B               	movwf	27	;volatile
  1912                           
  1913                           ;user.c: 36: TMR2 = 0x00;
  1914  01C3  019A               	clrf	26	;volatile
  1915                           
  1916                           ;user.c: 39: T2CONbits.TMR2ON = 1;
  1917  01C4  151C               	bsf	28,2	;volatile
  1918  01C5  0008               	return
  1919  01C6                     __end_of__init_timer2:	
  1920                           
  1921                           	psect	text7
  1922  00D1                     __ptext7:	
  1923 ;; *************** function __init_pwm *****************
  1924 ;; Defined at:
  1925 ;;		line 14 in file "pwm.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;		None
  1928 ;; Auto vars:     Size  Location     Type
  1929 ;;		None
  1930 ;; Return value:  Size  Location     Type
  1931 ;;                  1    wreg      void 
  1932 ;; Registers used:
  1933 ;;		wreg, status,2, status,0, pclath, cstack
  1934 ;; Tracked objects:
  1935 ;;		On entry : 0/0
  1936 ;;		On exit  : 0/0
  1937 ;;		Unchanged: 0/0
  1938 ;; Data sizes:     COMMON   BANK0   BANK1
  1939 ;;      Params:         0       0       0
  1940 ;;      Locals:         0       0       0
  1941 ;;      Temps:          0       0       0
  1942 ;;      Totals:         0       0       0
  1943 ;;Total ram usage:        0 bytes
  1944 ;; Hardware stack levels used:    1
  1945 ;; Hardware stack levels required when called:    2
  1946 ;; This function calls:
  1947 ;;		_pwm1_writeDutyCycle
  1948 ;;		_pwm2_writeDutyCycle
  1949 ;;		_pwm3_writeDutyCycle
  1950 ;;		_pwm4_writeDutyCycle
  1951 ;; This function is called by:
  1952 ;;		_InitApp
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956                           
  1957                           ;psect for function __init_pwm
  1958  00D1                     __init_pwm:	
  1959                           
  1960                           ;pwm.c: 17: PWM1CON = 0x00;
  1961                           
  1962                           ;incstack = 0
  1963                           ; Regs used in __init_pwm: [wreg+status,2+status,0+pclath+cstack]
  1964  00D1  002C               	movlb	12	; select bank12
  1965  00D2  0193               	clrf	19	;volatile
  1966                           
  1967                           ;pwm.c: 18: PWM2CON = 0x00;
  1968  00D3  0196               	clrf	22	;volatile
  1969                           
  1970                           ;pwm.c: 19: PWM3CON = 0x00;
  1971  00D4  0199               	clrf	25	;volatile
  1972                           
  1973                           ;pwm.c: 20: PWM4CON = 0x00;
  1974  00D5  019C               	clrf	28	;volatile
  1975                           
  1976                           ;pwm.c: 23: PWM1CON = 0xC0;
  1977  00D6  30C0               	movlw	192
  1978  00D7  0093               	movwf	19	;volatile
  1979                           
  1980                           ;pwm.c: 24: PWM2CON = 0xC0;
  1981  00D8  30C0               	movlw	192
  1982  00D9  0096               	movwf	22	;volatile
  1983                           
  1984                           ;pwm.c: 25: PWM3CON = 0xC0;
  1985  00DA  30C0               	movlw	192
  1986  00DB  0099               	movwf	25	;volatile
  1987                           
  1988                           ;pwm.c: 26: PWM4CON = 0xC0;
  1989  00DC  30C0               	movlw	192
  1990  00DD  009C               	movwf	28	;volatile
  1991                           
  1992                           ;pwm.c: 28: pwm1_writeDutyCycle(19U);
  1993  00DE  3013               	movlw	19
  1994  00DF  00F1               	movwf	pwm1_writeDutyCycle@dutyCycle
  1995  00E0  3000               	movlw	0
  1996  00E1  00F2               	movwf	pwm1_writeDutyCycle@dutyCycle+1
  1997  00E2  217D               	fcall	_pwm1_writeDutyCycle
  1998                           
  1999                           ;pwm.c: 29: pwm2_writeDutyCycle(19U);
  2000  00E3  3013               	movlw	19
  2001  00E4  00F1               	movwf	pwm2_writeDutyCycle@dutyCycle
  2002  00E5  3000               	movlw	0
  2003  00E6  00F2               	movwf	pwm2_writeDutyCycle@dutyCycle+1
  2004  00E7  2148               	fcall	_pwm2_writeDutyCycle
  2005                           
  2006                           ;pwm.c: 30: pwm3_writeDutyCycle(19U);
  2007  00E8  3013               	movlw	19
  2008  00E9  00F1               	movwf	pwm3_writeDutyCycle@dutyCycle
  2009  00EA  3000               	movlw	0
  2010  00EB  00F2               	movwf	pwm3_writeDutyCycle@dutyCycle+1
  2011  00EC  212D               	fcall	_pwm3_writeDutyCycle
  2012                           
  2013                           ;pwm.c: 31: pwm4_writeDutyCycle(19U);
  2014  00ED  3013               	movlw	19
  2015  00EE  00F1               	movwf	pwm4_writeDutyCycle@dutyCycle
  2016  00EF  3000               	movlw	0
  2017  00F0  00F2               	movwf	pwm4_writeDutyCycle@dutyCycle+1
  2018  00F1  2112               	fcall	_pwm4_writeDutyCycle
  2019  00F2  0008               	return
  2020  00F3                     __end_of__init_pwm:	
  2021                           
  2022                           	psect	text8
  2023  0112                     __ptext8:	
  2024 ;; *************** function _pwm4_writeDutyCycle *****************
  2025 ;; Defined at:
  2026 ;;		line 55 in file "pwm.c"
  2027 ;; Parameters:    Size  Location     Type
  2028 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2029 ;; Auto vars:     Size  Location     Type
  2030 ;;		None
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2    1[COMMON] unsigned int 
  2033 ;; Registers used:
  2034 ;;		wreg, status,2, status,0
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1
  2040 ;;      Params:         2       0       0
  2041 ;;      Locals:         0       0       0
  2042 ;;      Temps:          2       0       0
  2043 ;;      Totals:         4       0       0
  2044 ;;Total ram usage:        4 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    1
  2047 ;; This function calls:
  2048 ;;		Nothing
  2049 ;; This function is called by:
  2050 ;;		__init_pwm
  2051 ;;		_incDutyCycle
  2052 ;;		_decDutyCycle
  2053 ;; This function uses a non-reentrant model
  2054 ;;
  2055                           
  2056                           
  2057                           ;psect for function _pwm4_writeDutyCycle
  2058  0112                     _pwm4_writeDutyCycle:	
  2059                           
  2060                           ;pwm.c: 56: PWM4DCH = (dutyCycle & 0x03FC)>>2;
  2061                           
  2062                           ;incstack = 0
  2063                           ; Regs used in _pwm4_writeDutyCycle: [wreg+status,2+status,0]
  2064  0112  0872               	movf	pwm4_writeDutyCycle@dutyCycle+1,w
  2065  0113  00F4               	movwf	??_pwm4_writeDutyCycle+1
  2066  0114  0871               	movf	pwm4_writeDutyCycle@dutyCycle,w
  2067  0115  00F3               	movwf	??_pwm4_writeDutyCycle
  2068  0116  36F4               	lsrf	??_pwm4_writeDutyCycle+1,f
  2069  0117  0CF3               	rrf	??_pwm4_writeDutyCycle,f
  2070  0118  36F4               	lsrf	??_pwm4_writeDutyCycle+1,f
  2071  0119  0CF3               	rrf	??_pwm4_writeDutyCycle,f
  2072  011A  0873               	movf	??_pwm4_writeDutyCycle,w
  2073  011B  002C               	movlb	12	; select bank12
  2074  011C  009B               	movwf	27	;volatile
  2075                           
  2076                           ;pwm.c: 57: PWM4DCL = (dutyCycle & 0x0003)<<6;
  2077  011D  0871               	movf	pwm4_writeDutyCycle@dutyCycle,w
  2078  011E  3903               	andlw	3
  2079  011F  00F3               	movwf	??_pwm4_writeDutyCycle
  2080  0120  3005               	movlw	5
  2081  0121                     u265:	
  2082  0121  35F3               	lslf	??_pwm4_writeDutyCycle,f
  2083  0122  3EFF               	addlw	-1
  2084  0123  1D03               	skipz
  2085  0124  2921               	goto	u265
  2086  0125  3573               	lslf	??_pwm4_writeDutyCycle,w
  2087  0126  009A               	movwf	26	;volatile
  2088                           
  2089                           ;pwm.c: 58: pwm4_dutyCycle = dutyCycle;
  2090  0127  0872               	movf	pwm4_writeDutyCycle@dutyCycle+1,w
  2091  0128  0020               	movlb	0	; select bank0
  2092  0129  00A1               	movwf	_pwm4_dutyCycle+1	;volatile
  2093  012A  0871               	movf	pwm4_writeDutyCycle@dutyCycle,w
  2094  012B  00A0               	movwf	_pwm4_dutyCycle	;volatile
  2095  012C  0008               	return
  2096  012D                     __end_of_pwm4_writeDutyCycle:	
  2097                           ;pwm.c: 59: return dutyCycle;
  2098                           ;	Return value of _pwm4_writeDutyCycle is never used
  2099                           
  2100                           
  2101                           	psect	text9
  2102  012D                     __ptext9:	
  2103 ;; *************** function _pwm3_writeDutyCycle *****************
  2104 ;; Defined at:
  2105 ;;		line 49 in file "pwm.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2    1[COMMON] unsigned int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1
  2119 ;;      Params:         2       0       0
  2120 ;;      Locals:         0       0       0
  2121 ;;      Temps:          2       0       0
  2122 ;;      Totals:         4       0       0
  2123 ;;Total ram usage:        4 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:    1
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		__init_pwm
  2130 ;;		_incDutyCycle
  2131 ;;		_decDutyCycle
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _pwm3_writeDutyCycle
  2137  012D                     _pwm3_writeDutyCycle:	
  2138                           
  2139                           ;pwm.c: 50: PWM3DCH = (dutyCycle & 0x03FC)>>2;
  2140                           
  2141                           ;incstack = 0
  2142                           ; Regs used in _pwm3_writeDutyCycle: [wreg+status,2+status,0]
  2143  012D  0872               	movf	pwm3_writeDutyCycle@dutyCycle+1,w
  2144  012E  00F4               	movwf	??_pwm3_writeDutyCycle+1
  2145  012F  0871               	movf	pwm3_writeDutyCycle@dutyCycle,w
  2146  0130  00F3               	movwf	??_pwm3_writeDutyCycle
  2147  0131  36F4               	lsrf	??_pwm3_writeDutyCycle+1,f
  2148  0132  0CF3               	rrf	??_pwm3_writeDutyCycle,f
  2149  0133  36F4               	lsrf	??_pwm3_writeDutyCycle+1,f
  2150  0134  0CF3               	rrf	??_pwm3_writeDutyCycle,f
  2151  0135  0873               	movf	??_pwm3_writeDutyCycle,w
  2152  0136  002C               	movlb	12	; select bank12
  2153  0137  0098               	movwf	24	;volatile
  2154                           
  2155                           ;pwm.c: 51: PWM3DCL = (dutyCycle & 0x0003)<<6;
  2156  0138  0871               	movf	pwm3_writeDutyCycle@dutyCycle,w
  2157  0139  3903               	andlw	3
  2158  013A  00F3               	movwf	??_pwm3_writeDutyCycle
  2159  013B  3005               	movlw	5
  2160  013C                     u255:	
  2161  013C  35F3               	lslf	??_pwm3_writeDutyCycle,f
  2162  013D  3EFF               	addlw	-1
  2163  013E  1D03               	skipz
  2164  013F  293C               	goto	u255
  2165  0140  3573               	lslf	??_pwm3_writeDutyCycle,w
  2166  0141  0097               	movwf	23	;volatile
  2167                           
  2168                           ;pwm.c: 52: pwm3_dutyCycle = dutyCycle;
  2169  0142  0872               	movf	pwm3_writeDutyCycle@dutyCycle+1,w
  2170  0143  0020               	movlb	0	; select bank0
  2171  0144  00A3               	movwf	_pwm3_dutyCycle+1	;volatile
  2172  0145  0871               	movf	pwm3_writeDutyCycle@dutyCycle,w
  2173  0146  00A2               	movwf	_pwm3_dutyCycle	;volatile
  2174  0147  0008               	return
  2175  0148                     __end_of_pwm3_writeDutyCycle:	
  2176                           ;pwm.c: 53: return dutyCycle;
  2177                           ;	Return value of _pwm3_writeDutyCycle is never used
  2178                           
  2179                           
  2180                           	psect	text10
  2181  0148                     __ptext10:	
  2182 ;; *************** function _pwm2_writeDutyCycle *****************
  2183 ;; Defined at:
  2184 ;;		line 43 in file "pwm.c"
  2185 ;; Parameters:    Size  Location     Type
  2186 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2187 ;; Auto vars:     Size  Location     Type
  2188 ;;		None
  2189 ;; Return value:  Size  Location     Type
  2190 ;;                  2    1[COMMON] unsigned int 
  2191 ;; Registers used:
  2192 ;;		wreg, status,2, status,0
  2193 ;; Tracked objects:
  2194 ;;		On entry : 0/0
  2195 ;;		On exit  : 0/0
  2196 ;;		Unchanged: 0/0
  2197 ;; Data sizes:     COMMON   BANK0   BANK1
  2198 ;;      Params:         2       0       0
  2199 ;;      Locals:         0       0       0
  2200 ;;      Temps:          2       0       0
  2201 ;;      Totals:         4       0       0
  2202 ;;Total ram usage:        4 bytes
  2203 ;; Hardware stack levels used:    1
  2204 ;; Hardware stack levels required when called:    1
  2205 ;; This function calls:
  2206 ;;		Nothing
  2207 ;; This function is called by:
  2208 ;;		__init_pwm
  2209 ;;		_incDutyCycle
  2210 ;;		_decDutyCycle
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _pwm2_writeDutyCycle
  2216  0148                     _pwm2_writeDutyCycle:	
  2217                           
  2218                           ;pwm.c: 44: PWM2DCH = (dutyCycle & 0x03FC)>>2;
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _pwm2_writeDutyCycle: [wreg+status,2+status,0]
  2222  0148  0872               	movf	pwm2_writeDutyCycle@dutyCycle+1,w
  2223  0149  00F4               	movwf	??_pwm2_writeDutyCycle+1
  2224  014A  0871               	movf	pwm2_writeDutyCycle@dutyCycle,w
  2225  014B  00F3               	movwf	??_pwm2_writeDutyCycle
  2226  014C  36F4               	lsrf	??_pwm2_writeDutyCycle+1,f
  2227  014D  0CF3               	rrf	??_pwm2_writeDutyCycle,f
  2228  014E  36F4               	lsrf	??_pwm2_writeDutyCycle+1,f
  2229  014F  0CF3               	rrf	??_pwm2_writeDutyCycle,f
  2230  0150  0873               	movf	??_pwm2_writeDutyCycle,w
  2231  0151  002C               	movlb	12	; select bank12
  2232  0152  0095               	movwf	21	;volatile
  2233                           
  2234                           ;pwm.c: 45: PWM2DCL = (dutyCycle & 0x0003)<<6;
  2235  0153  0871               	movf	pwm2_writeDutyCycle@dutyCycle,w
  2236  0154  3903               	andlw	3
  2237  0155  00F3               	movwf	??_pwm2_writeDutyCycle
  2238  0156  3005               	movlw	5
  2239  0157                     u245:	
  2240  0157  35F3               	lslf	??_pwm2_writeDutyCycle,f
  2241  0158  3EFF               	addlw	-1
  2242  0159  1D03               	skipz
  2243  015A  2957               	goto	u245
  2244  015B  3573               	lslf	??_pwm2_writeDutyCycle,w
  2245  015C  0094               	movwf	20	;volatile
  2246                           
  2247                           ;pwm.c: 46: pwm2_dutyCycle = dutyCycle;
  2248  015D  0872               	movf	pwm2_writeDutyCycle@dutyCycle+1,w
  2249  015E  0020               	movlb	0	; select bank0
  2250  015F  00A5               	movwf	_pwm2_dutyCycle+1	;volatile
  2251  0160  0871               	movf	pwm2_writeDutyCycle@dutyCycle,w
  2252  0161  00A4               	movwf	_pwm2_dutyCycle	;volatile
  2253  0162  0008               	return
  2254  0163                     __end_of_pwm2_writeDutyCycle:	
  2255                           ;pwm.c: 47: return dutyCycle;
  2256                           ;	Return value of _pwm2_writeDutyCycle is never used
  2257                           
  2258                           
  2259                           	psect	text11
  2260  017D                     __ptext11:	
  2261 ;; *************** function _pwm1_writeDutyCycle *****************
  2262 ;; Defined at:
  2263 ;;		line 37 in file "pwm.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  2    1[COMMON] unsigned int 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMMON   BANK0   BANK1
  2277 ;;      Params:         2       0       0
  2278 ;;      Locals:         0       0       0
  2279 ;;      Temps:          2       0       0
  2280 ;;      Totals:         4       0       0
  2281 ;;Total ram usage:        4 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    1
  2284 ;; This function calls:
  2285 ;;		Nothing
  2286 ;; This function is called by:
  2287 ;;		__init_pwm
  2288 ;;		_incDutyCycle
  2289 ;;		_decDutyCycle
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293                           
  2294                           ;psect for function _pwm1_writeDutyCycle
  2295  017D                     _pwm1_writeDutyCycle:	
  2296                           
  2297                           ;pwm.c: 38: PWM1DCH = (dutyCycle & 0x03FC)>>2;
  2298                           
  2299                           ;incstack = 0
  2300                           ; Regs used in _pwm1_writeDutyCycle: [wreg+status,2+status,0]
  2301  017D  0872               	movf	pwm1_writeDutyCycle@dutyCycle+1,w
  2302  017E  00F4               	movwf	??_pwm1_writeDutyCycle+1
  2303  017F  0871               	movf	pwm1_writeDutyCycle@dutyCycle,w
  2304  0180  00F3               	movwf	??_pwm1_writeDutyCycle
  2305  0181  36F4               	lsrf	??_pwm1_writeDutyCycle+1,f
  2306  0182  0CF3               	rrf	??_pwm1_writeDutyCycle,f
  2307  0183  36F4               	lsrf	??_pwm1_writeDutyCycle+1,f
  2308  0184  0CF3               	rrf	??_pwm1_writeDutyCycle,f
  2309  0185  0873               	movf	??_pwm1_writeDutyCycle,w
  2310  0186  002C               	movlb	12	; select bank12
  2311  0187  0092               	movwf	18	;volatile
  2312                           
  2313                           ;pwm.c: 39: PWM1DCL = (dutyCycle & 0x0003)<<6;
  2314  0188  0871               	movf	pwm1_writeDutyCycle@dutyCycle,w
  2315  0189  3903               	andlw	3
  2316  018A  00F3               	movwf	??_pwm1_writeDutyCycle
  2317  018B  3005               	movlw	5
  2318  018C                     u235:	
  2319  018C  35F3               	lslf	??_pwm1_writeDutyCycle,f
  2320  018D  3EFF               	addlw	-1
  2321  018E  1D03               	skipz
  2322  018F  298C               	goto	u235
  2323  0190  3573               	lslf	??_pwm1_writeDutyCycle,w
  2324  0191  0091               	movwf	17	;volatile
  2325                           
  2326                           ;pwm.c: 40: pwm1_dutyCycle = dutyCycle;
  2327  0192  0872               	movf	pwm1_writeDutyCycle@dutyCycle+1,w
  2328  0193  00FA               	movwf	_pwm1_dutyCycle+1	;volatile
  2329  0194  0871               	movf	pwm1_writeDutyCycle@dutyCycle,w
  2330  0195  00F9               	movwf	_pwm1_dutyCycle	;volatile
  2331  0196  0008               	return
  2332  0197                     __end_of_pwm1_writeDutyCycle:	
  2333                           ;pwm.c: 41: return dutyCycle;
  2334                           ;	Return value of _pwm1_writeDutyCycle is never used
  2335                           
  2336                           
  2337                           	psect	text12
  2338  01AE                     __ptext12:	
  2339 ;; *************** function __init_gpio *****************
  2340 ;; Defined at:
  2341 ;;		line 42 in file "user.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;		None
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;		None
  2346 ;; Return value:  Size  Location     Type
  2347 ;;                  1    wreg      void 
  2348 ;; Registers used:
  2349 ;;		wreg, status,2
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMMON   BANK0   BANK1
  2355 ;;      Params:         0       0       0
  2356 ;;      Locals:         0       0       0
  2357 ;;      Temps:          0       0       0
  2358 ;;      Totals:         0       0       0
  2359 ;;Total ram usage:        0 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    1
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_InitApp
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           
  2370                           ;psect for function __init_gpio
  2371  01AE                     __init_gpio:	
  2372                           
  2373                           ;user.c: 44: LATA = 0x00;
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in __init_gpio: [wreg+status,2]
  2377  01AE  0022               	movlb	2	; select bank2
  2378  01AF  018C               	clrf	12	;volatile
  2379                           
  2380                           ;user.c: 45: LATC = 0x00;
  2381  01B0  018E               	clrf	14	;volatile
  2382                           
  2383                           ;user.c: 47: TRISA = 0x33;
  2384  01B1  3033               	movlw	51
  2385  01B2  0021               	movlb	1	; select bank1
  2386  01B3  008C               	movwf	12	;volatile
  2387                           
  2388                           ;user.c: 48: TRISC = 0x15;
  2389  01B4  3015               	movlw	21
  2390  01B5  008E               	movwf	14	;volatile
  2391                           
  2392                           ;user.c: 51: ANSELA = 0x00;
  2393  01B6  0023               	movlb	3	; select bank3
  2394  01B7  018C               	clrf	12	;volatile
  2395                           
  2396                           ;user.c: 52: ANSELC = 0x00;
  2397  01B8  018E               	clrf	14	;volatile
  2398                           
  2399                           ;user.c: 55: WPUA = 0x30;
  2400  01B9  3030               	movlw	48
  2401  01BA  0024               	movlb	4	; select bank4
  2402  01BB  008C               	movwf	12	;volatile
  2403                           
  2404                           ;user.c: 56: OPTION_REGbits.nWPUEN = 0;
  2405  01BC  0021               	movlb	1	; select bank1
  2406  01BD  1395               	bcf	21,7	;volatile
  2407  01BE  0008               	return
  2408  01BF                     __end_of__init_gpio:	
  2409                           
  2410                           	psect	text13
  2411  01C6                     __ptext13:	
  2412 ;; *************** function _ConfigureOscillator *****************
  2413 ;; Defined at:
  2414 ;;		line 17 in file "system.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;		None
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg, status,2
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1
  2428 ;;      Params:         0       0       0
  2429 ;;      Locals:         0       0       0
  2430 ;;      Temps:          0       0       0
  2431 ;;      Totals:         0       0       0
  2432 ;;Total ram usage:        0 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_main
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           
  2443                           ;psect for function _ConfigureOscillator
  2444  01C6                     _ConfigureOscillator:	
  2445                           
  2446                           ;system.c: 20: OSCCON = 0x3B;
  2447                           
  2448                           ;incstack = 0
  2449                           ; Regs used in _ConfigureOscillator: [wreg+status,2]
  2450  01C6  303B               	movlw	59
  2451  01C7  0021               	movlb	1	; select bank1
  2452  01C8  0099               	movwf	25	;volatile
  2453                           
  2454                           ;system.c: 23: WDTCON = 0x00;
  2455  01C9  0197               	clrf	23	;volatile
  2456  01CA  0008               	return
  2457  01CB                     __end_of_ConfigureOscillator:	
  2458                           
  2459                           	psect	intentry
  2460  0004                     __pintentry:	
  2461 ;; *************** function _isr *****************
  2462 ;; Defined at:
  2463 ;;		line 20 in file "interrupts.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;		None
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;		None
  2468 ;; Return value:  Size  Location     Type
  2469 ;;                  1    wreg      void 
  2470 ;; Registers used:
  2471 ;;		None
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/0
  2474 ;;		On exit  : 0/0
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1
  2477 ;;      Params:         0       0       0
  2478 ;;      Locals:         0       0       0
  2479 ;;      Temps:          1       0       0
  2480 ;;      Totals:         1       0       0
  2481 ;;Total ram usage:        1 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; This function calls:
  2484 ;;		Nothing
  2485 ;; This function is called by:
  2486 ;;		Interrupt level 1
  2487 ;; This function uses a non-reentrant model
  2488 ;;
  2489                           
  2490  0004                     _isr:	
  2491                           
  2492                           ;incstack = 0
  2493  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2494                           
  2495                           ; Regs used in _isr: []
  2496  0005  3180               	pagesel	$
  2497  0006  0020               	movlb	0	; select bank0
  2498  0007  087F               	movf	127,w
  2499  0008  00F0               	movwf	??_isr
  2500  0009  0870               	movf	??_isr,w
  2501  000A  00FF               	movwf	127
  2502  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2503  000C  0009               	retfie
  2504  000D                     __end_of_isr:	
  2505  007E                     btemp	set	126	;btemp
  2506  007E                     int$flags	set	126
  2507  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       6
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_decDutyCycle
    _main->_incDutyCycle
    _incDutyCycle->_checkDCBounds
    _decDutyCycle->_checkDCBounds
    __init_pwm->_pwm1_writeDutyCycle
    __init_pwm->_pwm2_writeDutyCycle
    __init_pwm->_pwm3_writeDutyCycle
    __init_pwm->_pwm4_writeDutyCycle

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4198
                _ConfigureOscillator
                            _InitApp
                       _decDutyCycle
                          _getPWMSEL
                       _incDutyCycle
 ---------------------------------------------------------------------------------
 (1) _incDutyCycle                                         3     3      0    1697
                                              6 COMMON     3     3      0
                      _checkDCBounds
                _pwm1_writeDutyCycle
                _pwm2_writeDutyCycle
                _pwm3_writeDutyCycle
                _pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (1) _getPWMSEL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decDutyCycle                                         3     3      0    1697
                                              6 COMMON     3     3      0
                      _checkDCBounds
                _pwm1_writeDutyCycle
                _pwm2_writeDutyCycle
                _pwm3_writeDutyCycle
                _pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (2) _checkDCBounds                                        5     2      3     779
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0     804
                         __init_gpio
                          __init_pwm
                       __init_timer2
 ---------------------------------------------------------------------------------
 (2) __init_timer2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __init_pwm                                            0     0      0     804
                _pwm1_writeDutyCycle
                _pwm2_writeDutyCycle
                _pwm3_writeDutyCycle
                _pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (2) _pwm4_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _pwm3_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _pwm2_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _pwm1_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) __init_gpio                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     __init_gpio
     __init_pwm
       _pwm1_writeDutyCycle
       _pwm2_writeDutyCycle
       _pwm3_writeDutyCycle
       _pwm4_writeDutyCycle
     __init_timer2
   _decDutyCycle
     _checkDCBounds
     _pwm1_writeDutyCycle
     _pwm2_writeDutyCycle
     _pwm3_writeDutyCycle
     _pwm4_writeDutyCycle
   _getPWMSEL
   _incDutyCycle
     _checkDCBounds
     _pwm1_writeDutyCycle
     _pwm2_writeDutyCycle
     _pwm3_writeDutyCycle
     _pwm4_writeDutyCycle

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      13       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      13       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Nov 02 22:30:01 2017

                 __CFG_CP$OFF 0000                            l30 00FE                            l29 00FA  
                 __CFG_LVP$ON 0000                           l170 01A2                           l154 0074  
                         l164 00D0                           l172 01A7                           l167 019D  
                         l803 0066                           l821 0107                           l663 01AC  
                         l807 00F5                           l771 0178                           l781 0089  
                         l783 009C                           l769 0176                           l785 00AF  
                         l793 0017                           l779 0077                           l795 002A  
                         l789 00C2                           l797 003E                           l799 0052  
                         u235 018C                           u245 0157                           _PR2 001B  
                         u255 013C                           u265 0121                           _isr 0004  
        __end_of__init_timer2 01C6                  __CFG_BORV$LO 0000                          ?_isr 0070  
                        _LATA 010C                          _LATC 010E                          _TMR2 001A  
                        _WPUA 020C  pwm1_writeDutyCycle@dutyCycle 0071                  __CFG_WRT$OFF 0000  
              ??_incDutyCycle 0076                          _main 00F3                          btemp 007E  
               __CFG_BOREN$ON 0000                          start 000D         ??_pwm3_writeDutyCycle 0073  
               __CFG_MCLRE$ON 0000               __end_of_InitApp 01CF                         ??_isr 0070  
       __size_of_decDutyCycle 005C                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       _T2CON 001C                         _TRISA 008C                         _TRISC 008E  
         _ConfigureOscillator 01C6  pwm4_writeDutyCycle@dutyCycle 0071                         status 0003  
                       wtemp0 007E          ?_ConfigureOscillator 0070               __initialization 000E  
                _decDutyCycle 0075                  __end_of_main 0112                __CFG_LPBOR$OFF 0000  
                      ??_main 0079                 main@commandDN 007B                 main@commandUP 007C  
                      _ANSELA 018C                        _ANSELC 018E                _pwm1_dutyCycle 0079  
                      _OSCCON 0099                        _WDTCON 0097  __size_of_pwm2_writeDutyCycle 001B  
                   ??_InitApp 0075         ??_ConfigureOscillator 0071                __CFG_PWRTE$OFF 0000  
              _pwm2_dutyCycle 0024                __CFG_STVREN$ON 0000         __size_of__init_timer2 0007  
              _pwm3_dutyCycle 0022          __end_of_incDutyCycle 0075                  __pdataCOMMON 007B  
              _pwm4_dutyCycle 0020           checkDCBounds@retval 0074       __end_of__initialization 0012  
                __init_timer2 01BF               checkDCBounds@dc 0071                __pcstackCOMMON 0070  
__size_of_pwm4_writeDutyCycle 001B            __size_of__init_pwm 0022            __size_of_getPWMSEL 0017  
              _OPTION_REGbits 0095   __end_of_pwm1_writeDutyCycle 0197         incDutyCycle@dutyCycle 0077  
      __size_of_checkDCBounds 001A                    __init_gpio 01AE                    __pnvCOMMON 0079  
                  __pmaintext 00F3                    __pintentry 0004                       _PWM1DCH 0612  
                     _PWM1DCL 0611                       _PWM2DCH 0615                       _PWM2DCL 0614  
                     _PWM3DCH 0618                       _PWM3DCL 0617                       _PWM4DCH 061B  
                     _PWM1CON 0613                       _PWM4DCL 061A                       _PWM2CON 0616  
                     _PWM3CON 0619                       _PWM4CON 061C             __end_of__init_pwm 00F3  
 __end_of_pwm3_writeDutyCycle 0148             __end_of_getPWMSEL 01AE                       _InitApp 01CB  
               _checkDCBounds 0163         __size_of_incDutyCycle 0060  pwm3_writeDutyCycle@dutyCycle 0071  
                     __ptext1 0015                       __ptext2 0197                       __ptext3 0075  
                     __ptext4 0163                       __ptext5 01CB                       __ptext6 01BF  
                     __ptext7 00D1                       __ptext8 0112                       __ptext9 012D  
         _pwm2_writeDutyCycle 0148                     _T2CONbits 001C                  __size_of_isr 0009  
        end_of_initialization 0012                   ?__init_gpio 0070          ?_pwm2_writeDutyCycle 0071  
                _incDutyCycle 0015                ?_checkDCBounds 0071              decDutyCycle@chan 0076  
                   _PORTAbits 000C                     _PORTCbits 000E              __CFG_FOSC$INTOSC 0000  
         _pwm4_writeDutyCycle 0112   __end_of_ConfigureOscillator 01CB         ??_pwm2_writeDutyCycle 0073  
        ?_pwm4_writeDutyCycle 0071                 __pidataCOMMON 01CF           __size_of__init_gpio 0011  
         start_initialization 000E                   __end_of_isr 000D               ??_checkDCBounds 0074  
       ??_pwm4_writeDutyCycle 0073                     ___latbits 0000  __size_of_pwm1_writeDutyCycle 001A  
                    ?_InitApp 0070                     __pnvBANK0 0020                     __init_pwm 00D1  
                   _getPWMSEL 0197                 ?_decDutyCycle 0070                  ??__init_gpio 0071  
                  ?__init_pwm 0070                    ?_getPWMSEL 0070                ??_decDutyCycle 0076  
pwm2_writeDutyCycle@dutyCycle 0071  __size_of_pwm3_writeDutyCycle 001B            __end_of__init_gpio 01BF  
            incDutyCycle@chan 0076                 ?__init_timer2 0070              __size_of_InitApp 0004  
                    __ptext10 0148                      __ptext11 017D                      __ptext12 01AE  
                    __ptext13 01C6   __end_of_pwm2_writeDutyCycle 0163        checkDCBounds@direction 0073  
               __size_of_main 001F                   ??__init_pwm 0075                ??__init_timer2 0071  
__size_of_ConfigureOscillator 0005                   ??_getPWMSEL 0071                      int$flags 007E  
         _pwm1_writeDutyCycle 017D          __end_of_decDutyCycle 00D1                      intlevel1 0000  
        ?_pwm1_writeDutyCycle 0071   __end_of_pwm4_writeDutyCycle 012D             __CFG_CLKOUTEN$OFF 0000  
       __end_of_checkDCBounds 017D         decDutyCycle@dutyCycle 0077           _pwm3_writeDutyCycle 012D  
       ??_pwm1_writeDutyCycle 0073                 ?_incDutyCycle 0070          ?_pwm3_writeDutyCycle 0071  
