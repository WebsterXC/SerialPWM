

Microchip Technology PIC LITE Macro Assembler V1.42 build -159332390 
                                                                                               Thu Nov 02 22:17:00 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 1.42
    28                           ; Generated 13/04/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F1503 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000E                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  008C                     	;# 
    88  008E                     	;# 
    89  0091                     	;# 
    90  0092                     	;# 
    91  0093                     	;# 
    92  0095                     	;# 
    93  0096                     	;# 
    94  0097                     	;# 
    95  0099                     	;# 
    96  009A                     	;# 
    97  009B                     	;# 
    98  009B                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010E                     	;# 
   105  0111                     	;# 
   106  0112                     	;# 
   107  0113                     	;# 
   108  0114                     	;# 
   109  0115                     	;# 
   110  0116                     	;# 
   111  0117                     	;# 
   112  0118                     	;# 
   113  0119                     	;# 
   114  011D                     	;# 
   115  018C                     	;# 
   116  018E                     	;# 
   117  0191                     	;# 
   118  0191                     	;# 
   119  0192                     	;# 
   120  0193                     	;# 
   121  0193                     	;# 
   122  0194                     	;# 
   123  0195                     	;# 
   124  0196                     	;# 
   125  0197                     	;# 
   126  020C                     	;# 
   127  0211                     	;# 
   128  0211                     	;# 
   129  0212                     	;# 
   130  0212                     	;# 
   131  0213                     	;# 
   132  0213                     	;# 
   133  0214                     	;# 
   134  0214                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0215                     	;# 
   138  0216                     	;# 
   139  0216                     	;# 
   140  0217                     	;# 
   141  0217                     	;# 
   142  0391                     	;# 
   143  0392                     	;# 
   144  0393                     	;# 
   145  0498                     	;# 
   146  0498                     	;# 
   147  0499                     	;# 
   148  049A                     	;# 
   149  049B                     	;# 
   150  049B                     	;# 
   151  049C                     	;# 
   152  049D                     	;# 
   153  049E                     	;# 
   154  049F                     	;# 
   155  0611                     	;# 
   156  0612                     	;# 
   157  0613                     	;# 
   158  0613                     	;# 
   159  0614                     	;# 
   160  0615                     	;# 
   161  0616                     	;# 
   162  0616                     	;# 
   163  0617                     	;# 
   164  0618                     	;# 
   165  0619                     	;# 
   166  0619                     	;# 
   167  061A                     	;# 
   168  061B                     	;# 
   169  061C                     	;# 
   170  061C                     	;# 
   171  0691                     	;# 
   172  0692                     	;# 
   173  0693                     	;# 
   174  0694                     	;# 
   175  0695                     	;# 
   176  0F0F                     	;# 
   177  0F10                     	;# 
   178  0F11                     	;# 
   179  0F12                     	;# 
   180  0F13                     	;# 
   181  0F14                     	;# 
   182  0F15                     	;# 
   183  0F16                     	;# 
   184  0F17                     	;# 
   185  0F18                     	;# 
   186  0F19                     	;# 
   187  0F1A                     	;# 
   188  0F1B                     	;# 
   189  0F1C                     	;# 
   190  0F1D                     	;# 
   191  0F1E                     	;# 
   192  0F1F                     	;# 
   193  0FE3                     	;# 
   194  0FE4                     	;# 
   195  0FE5                     	;# 
   196  0FE6                     	;# 
   197  0FE7                     	;# 
   198  0FE8                     	;# 
   199  0FE9                     	;# 
   200  0FEA                     	;# 
   201  0FEB                     	;# 
   202  0FED                     	;# 
   203  0FEE                     	;# 
   204  0FEF                     	;# 
   205  0000                     	;# 
   206  0001                     	;# 
   207  0002                     	;# 
   208  0003                     	;# 
   209  0004                     	;# 
   210  0005                     	;# 
   211  0006                     	;# 
   212  0007                     	;# 
   213  0008                     	;# 
   214  0009                     	;# 
   215  000A                     	;# 
   216  000B                     	;# 
   217  000C                     	;# 
   218  000E                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0015                     	;# 
   223  0016                     	;# 
   224  0016                     	;# 
   225  0017                     	;# 
   226  0018                     	;# 
   227  0019                     	;# 
   228  001A                     	;# 
   229  001B                     	;# 
   230  001C                     	;# 
   231  008C                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0095                     	;# 
   237  0096                     	;# 
   238  0097                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009B                     	;# 
   243  009C                     	;# 
   244  009D                     	;# 
   245  009E                     	;# 
   246  009F                     	;# 
   247  010C                     	;# 
   248  010E                     	;# 
   249  0111                     	;# 
   250  0112                     	;# 
   251  0113                     	;# 
   252  0114                     	;# 
   253  0115                     	;# 
   254  0116                     	;# 
   255  0117                     	;# 
   256  0118                     	;# 
   257  0119                     	;# 
   258  011D                     	;# 
   259  018C                     	;# 
   260  018E                     	;# 
   261  0191                     	;# 
   262  0191                     	;# 
   263  0192                     	;# 
   264  0193                     	;# 
   265  0193                     	;# 
   266  0194                     	;# 
   267  0195                     	;# 
   268  0196                     	;# 
   269  0197                     	;# 
   270  020C                     	;# 
   271  0211                     	;# 
   272  0211                     	;# 
   273  0212                     	;# 
   274  0212                     	;# 
   275  0213                     	;# 
   276  0213                     	;# 
   277  0214                     	;# 
   278  0214                     	;# 
   279  0215                     	;# 
   280  0215                     	;# 
   281  0215                     	;# 
   282  0216                     	;# 
   283  0216                     	;# 
   284  0217                     	;# 
   285  0217                     	;# 
   286  0391                     	;# 
   287  0392                     	;# 
   288  0393                     	;# 
   289  0498                     	;# 
   290  0498                     	;# 
   291  0499                     	;# 
   292  049A                     	;# 
   293  049B                     	;# 
   294  049B                     	;# 
   295  049C                     	;# 
   296  049D                     	;# 
   297  049E                     	;# 
   298  049F                     	;# 
   299  0611                     	;# 
   300  0612                     	;# 
   301  0613                     	;# 
   302  0613                     	;# 
   303  0614                     	;# 
   304  0615                     	;# 
   305  0616                     	;# 
   306  0616                     	;# 
   307  0617                     	;# 
   308  0618                     	;# 
   309  0619                     	;# 
   310  0619                     	;# 
   311  061A                     	;# 
   312  061B                     	;# 
   313  061C                     	;# 
   314  061C                     	;# 
   315  0691                     	;# 
   316  0692                     	;# 
   317  0693                     	;# 
   318  0694                     	;# 
   319  0695                     	;# 
   320  0F0F                     	;# 
   321  0F10                     	;# 
   322  0F11                     	;# 
   323  0F12                     	;# 
   324  0F13                     	;# 
   325  0F14                     	;# 
   326  0F15                     	;# 
   327  0F16                     	;# 
   328  0F17                     	;# 
   329  0F18                     	;# 
   330  0F19                     	;# 
   331  0F1A                     	;# 
   332  0F1B                     	;# 
   333  0F1C                     	;# 
   334  0F1D                     	;# 
   335  0F1E                     	;# 
   336  0F1F                     	;# 
   337  0FE3                     	;# 
   338  0FE4                     	;# 
   339  0FE5                     	;# 
   340  0FE6                     	;# 
   341  0FE7                     	;# 
   342  0FE8                     	;# 
   343  0FE9                     	;# 
   344  0FEA                     	;# 
   345  0FEB                     	;# 
   346  0FED                     	;# 
   347  0FEE                     	;# 
   348  0FEF                     	;# 
   349  0000                     	;# 
   350  0001                     	;# 
   351  0002                     	;# 
   352  0003                     	;# 
   353  0004                     	;# 
   354  0005                     	;# 
   355  0006                     	;# 
   356  0007                     	;# 
   357  0008                     	;# 
   358  0009                     	;# 
   359  000A                     	;# 
   360  000B                     	;# 
   361  000C                     	;# 
   362  000E                     	;# 
   363  0011                     	;# 
   364  0012                     	;# 
   365  0013                     	;# 
   366  0015                     	;# 
   367  0016                     	;# 
   368  0016                     	;# 
   369  0017                     	;# 
   370  0018                     	;# 
   371  0019                     	;# 
   372  001A                     	;# 
   373  001B                     	;# 
   374  001C                     	;# 
   375  008C                     	;# 
   376  008E                     	;# 
   377  0091                     	;# 
   378  0092                     	;# 
   379  0093                     	;# 
   380  0095                     	;# 
   381  0096                     	;# 
   382  0097                     	;# 
   383  0099                     	;# 
   384  009A                     	;# 
   385  009B                     	;# 
   386  009B                     	;# 
   387  009C                     	;# 
   388  009D                     	;# 
   389  009E                     	;# 
   390  009F                     	;# 
   391  010C                     	;# 
   392  010E                     	;# 
   393  0111                     	;# 
   394  0112                     	;# 
   395  0113                     	;# 
   396  0114                     	;# 
   397  0115                     	;# 
   398  0116                     	;# 
   399  0117                     	;# 
   400  0118                     	;# 
   401  0119                     	;# 
   402  011D                     	;# 
   403  018C                     	;# 
   404  018E                     	;# 
   405  0191                     	;# 
   406  0191                     	;# 
   407  0192                     	;# 
   408  0193                     	;# 
   409  0193                     	;# 
   410  0194                     	;# 
   411  0195                     	;# 
   412  0196                     	;# 
   413  0197                     	;# 
   414  020C                     	;# 
   415  0211                     	;# 
   416  0211                     	;# 
   417  0212                     	;# 
   418  0212                     	;# 
   419  0213                     	;# 
   420  0213                     	;# 
   421  0214                     	;# 
   422  0214                     	;# 
   423  0215                     	;# 
   424  0215                     	;# 
   425  0215                     	;# 
   426  0216                     	;# 
   427  0216                     	;# 
   428  0217                     	;# 
   429  0217                     	;# 
   430  0391                     	;# 
   431  0392                     	;# 
   432  0393                     	;# 
   433  0498                     	;# 
   434  0498                     	;# 
   435  0499                     	;# 
   436  049A                     	;# 
   437  049B                     	;# 
   438  049B                     	;# 
   439  049C                     	;# 
   440  049D                     	;# 
   441  049E                     	;# 
   442  049F                     	;# 
   443  0611                     	;# 
   444  0612                     	;# 
   445  0613                     	;# 
   446  0613                     	;# 
   447  0614                     	;# 
   448  0615                     	;# 
   449  0616                     	;# 
   450  0616                     	;# 
   451  0617                     	;# 
   452  0618                     	;# 
   453  0619                     	;# 
   454  0619                     	;# 
   455  061A                     	;# 
   456  061B                     	;# 
   457  061C                     	;# 
   458  061C                     	;# 
   459  0691                     	;# 
   460  0692                     	;# 
   461  0693                     	;# 
   462  0694                     	;# 
   463  0695                     	;# 
   464  0F0F                     	;# 
   465  0F10                     	;# 
   466  0F11                     	;# 
   467  0F12                     	;# 
   468  0F13                     	;# 
   469  0F14                     	;# 
   470  0F15                     	;# 
   471  0F16                     	;# 
   472  0F17                     	;# 
   473  0F18                     	;# 
   474  0F19                     	;# 
   475  0F1A                     	;# 
   476  0F1B                     	;# 
   477  0F1C                     	;# 
   478  0F1D                     	;# 
   479  0F1E                     	;# 
   480  0F1F                     	;# 
   481  0FE3                     	;# 
   482  0FE4                     	;# 
   483  0FE5                     	;# 
   484  0FE6                     	;# 
   485  0FE7                     	;# 
   486  0FE8                     	;# 
   487  0FE9                     	;# 
   488  0FEA                     	;# 
   489  0FEB                     	;# 
   490  0FED                     	;# 
   491  0FEE                     	;# 
   492  0FEF                     	;# 
   493  0000                     	;# 
   494  0001                     	;# 
   495  0002                     	;# 
   496  0003                     	;# 
   497  0004                     	;# 
   498  0005                     	;# 
   499  0006                     	;# 
   500  0007                     	;# 
   501  0008                     	;# 
   502  0009                     	;# 
   503  000A                     	;# 
   504  000B                     	;# 
   505  000C                     	;# 
   506  000E                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0015                     	;# 
   511  0016                     	;# 
   512  0016                     	;# 
   513  0017                     	;# 
   514  0018                     	;# 
   515  0019                     	;# 
   516  001A                     	;# 
   517  001B                     	;# 
   518  001C                     	;# 
   519  008C                     	;# 
   520  008E                     	;# 
   521  0091                     	;# 
   522  0092                     	;# 
   523  0093                     	;# 
   524  0095                     	;# 
   525  0096                     	;# 
   526  0097                     	;# 
   527  0099                     	;# 
   528  009A                     	;# 
   529  009B                     	;# 
   530  009B                     	;# 
   531  009C                     	;# 
   532  009D                     	;# 
   533  009E                     	;# 
   534  009F                     	;# 
   535  010C                     	;# 
   536  010E                     	;# 
   537  0111                     	;# 
   538  0112                     	;# 
   539  0113                     	;# 
   540  0114                     	;# 
   541  0115                     	;# 
   542  0116                     	;# 
   543  0117                     	;# 
   544  0118                     	;# 
   545  0119                     	;# 
   546  011D                     	;# 
   547  018C                     	;# 
   548  018E                     	;# 
   549  0191                     	;# 
   550  0191                     	;# 
   551  0192                     	;# 
   552  0193                     	;# 
   553  0193                     	;# 
   554  0194                     	;# 
   555  0195                     	;# 
   556  0196                     	;# 
   557  0197                     	;# 
   558  020C                     	;# 
   559  0211                     	;# 
   560  0211                     	;# 
   561  0212                     	;# 
   562  0212                     	;# 
   563  0213                     	;# 
   564  0213                     	;# 
   565  0214                     	;# 
   566  0214                     	;# 
   567  0215                     	;# 
   568  0215                     	;# 
   569  0215                     	;# 
   570  0216                     	;# 
   571  0216                     	;# 
   572  0217                     	;# 
   573  0217                     	;# 
   574  0391                     	;# 
   575  0392                     	;# 
   576  0393                     	;# 
   577  0498                     	;# 
   578  0498                     	;# 
   579  0499                     	;# 
   580  049A                     	;# 
   581  049B                     	;# 
   582  049B                     	;# 
   583  049C                     	;# 
   584  049D                     	;# 
   585  049E                     	;# 
   586  049F                     	;# 
   587  0611                     	;# 
   588  0612                     	;# 
   589  0613                     	;# 
   590  0613                     	;# 
   591  0614                     	;# 
   592  0615                     	;# 
   593  0616                     	;# 
   594  0616                     	;# 
   595  0617                     	;# 
   596  0618                     	;# 
   597  0619                     	;# 
   598  0619                     	;# 
   599  061A                     	;# 
   600  061B                     	;# 
   601  061C                     	;# 
   602  061C                     	;# 
   603  0691                     	;# 
   604  0692                     	;# 
   605  0693                     	;# 
   606  0694                     	;# 
   607  0695                     	;# 
   608  0F0F                     	;# 
   609  0F10                     	;# 
   610  0F11                     	;# 
   611  0F12                     	;# 
   612  0F13                     	;# 
   613  0F14                     	;# 
   614  0F15                     	;# 
   615  0F16                     	;# 
   616  0F17                     	;# 
   617  0F18                     	;# 
   618  0F19                     	;# 
   619  0F1A                     	;# 
   620  0F1B                     	;# 
   621  0F1C                     	;# 
   622  0F1D                     	;# 
   623  0F1E                     	;# 
   624  0F1F                     	;# 
   625  0FE3                     	;# 
   626  0FE4                     	;# 
   627  0FE5                     	;# 
   628  0FE6                     	;# 
   629  0FE7                     	;# 
   630  0FE8                     	;# 
   631  0FE9                     	;# 
   632  0FEA                     	;# 
   633  0FEB                     	;# 
   634  0FED                     	;# 
   635  0FEE                     	;# 
   636  0FEF                     	;# 
   637  0000                     	;# 
   638  0001                     	;# 
   639  0002                     	;# 
   640  0003                     	;# 
   641  0004                     	;# 
   642  0005                     	;# 
   643  0006                     	;# 
   644  0007                     	;# 
   645  0008                     	;# 
   646  0009                     	;# 
   647  000A                     	;# 
   648  000B                     	;# 
   649  000C                     	;# 
   650  000E                     	;# 
   651  0011                     	;# 
   652  0012                     	;# 
   653  0013                     	;# 
   654  0015                     	;# 
   655  0016                     	;# 
   656  0016                     	;# 
   657  0017                     	;# 
   658  0018                     	;# 
   659  0019                     	;# 
   660  001A                     	;# 
   661  001B                     	;# 
   662  001C                     	;# 
   663  008C                     	;# 
   664  008E                     	;# 
   665  0091                     	;# 
   666  0092                     	;# 
   667  0093                     	;# 
   668  0095                     	;# 
   669  0096                     	;# 
   670  0097                     	;# 
   671  0099                     	;# 
   672  009A                     	;# 
   673  009B                     	;# 
   674  009B                     	;# 
   675  009C                     	;# 
   676  009D                     	;# 
   677  009E                     	;# 
   678  009F                     	;# 
   679  010C                     	;# 
   680  010E                     	;# 
   681  0111                     	;# 
   682  0112                     	;# 
   683  0113                     	;# 
   684  0114                     	;# 
   685  0115                     	;# 
   686  0116                     	;# 
   687  0117                     	;# 
   688  0118                     	;# 
   689  0119                     	;# 
   690  011D                     	;# 
   691  018C                     	;# 
   692  018E                     	;# 
   693  0191                     	;# 
   694  0191                     	;# 
   695  0192                     	;# 
   696  0193                     	;# 
   697  0193                     	;# 
   698  0194                     	;# 
   699  0195                     	;# 
   700  0196                     	;# 
   701  0197                     	;# 
   702  020C                     	;# 
   703  0211                     	;# 
   704  0211                     	;# 
   705  0212                     	;# 
   706  0212                     	;# 
   707  0213                     	;# 
   708  0213                     	;# 
   709  0214                     	;# 
   710  0214                     	;# 
   711  0215                     	;# 
   712  0215                     	;# 
   713  0215                     	;# 
   714  0216                     	;# 
   715  0216                     	;# 
   716  0217                     	;# 
   717  0217                     	;# 
   718  0391                     	;# 
   719  0392                     	;# 
   720  0393                     	;# 
   721  0498                     	;# 
   722  0498                     	;# 
   723  0499                     	;# 
   724  049A                     	;# 
   725  049B                     	;# 
   726  049B                     	;# 
   727  049C                     	;# 
   728  049D                     	;# 
   729  049E                     	;# 
   730  049F                     	;# 
   731  0611                     	;# 
   732  0612                     	;# 
   733  0613                     	;# 
   734  0613                     	;# 
   735  0614                     	;# 
   736  0615                     	;# 
   737  0616                     	;# 
   738  0616                     	;# 
   739  0617                     	;# 
   740  0618                     	;# 
   741  0619                     	;# 
   742  0619                     	;# 
   743  061A                     	;# 
   744  061B                     	;# 
   745  061C                     	;# 
   746  061C                     	;# 
   747  0691                     	;# 
   748  0692                     	;# 
   749  0693                     	;# 
   750  0694                     	;# 
   751  0695                     	;# 
   752  0F0F                     	;# 
   753  0F10                     	;# 
   754  0F11                     	;# 
   755  0F12                     	;# 
   756  0F13                     	;# 
   757  0F14                     	;# 
   758  0F15                     	;# 
   759  0F16                     	;# 
   760  0F17                     	;# 
   761  0F18                     	;# 
   762  0F19                     	;# 
   763  0F1A                     	;# 
   764  0F1B                     	;# 
   765  0F1C                     	;# 
   766  0F1D                     	;# 
   767  0F1E                     	;# 
   768  0F1F                     	;# 
   769  0FE3                     	;# 
   770  0FE4                     	;# 
   771  0FE5                     	;# 
   772  0FE6                     	;# 
   773  0FE7                     	;# 
   774  0FE8                     	;# 
   775  0FE9                     	;# 
   776  0FEA                     	;# 
   777  0FEB                     	;# 
   778  0FED                     	;# 
   779  0FEE                     	;# 
   780  0FEF                     	;# 
   781  0000                     	;# 
   782  0001                     	;# 
   783  0002                     	;# 
   784  0003                     	;# 
   785  0004                     	;# 
   786  0005                     	;# 
   787  0006                     	;# 
   788  0007                     	;# 
   789  0008                     	;# 
   790  0009                     	;# 
   791  000A                     	;# 
   792  000B                     	;# 
   793  000C                     	;# 
   794  000E                     	;# 
   795  0011                     	;# 
   796  0012                     	;# 
   797  0013                     	;# 
   798  0015                     	;# 
   799  0016                     	;# 
   800  0016                     	;# 
   801  0017                     	;# 
   802  0018                     	;# 
   803  0019                     	;# 
   804  001A                     	;# 
   805  001B                     	;# 
   806  001C                     	;# 
   807  008C                     	;# 
   808  008E                     	;# 
   809  0091                     	;# 
   810  0092                     	;# 
   811  0093                     	;# 
   812  0095                     	;# 
   813  0096                     	;# 
   814  0097                     	;# 
   815  0099                     	;# 
   816  009A                     	;# 
   817  009B                     	;# 
   818  009B                     	;# 
   819  009C                     	;# 
   820  009D                     	;# 
   821  009E                     	;# 
   822  009F                     	;# 
   823  010C                     	;# 
   824  010E                     	;# 
   825  0111                     	;# 
   826  0112                     	;# 
   827  0113                     	;# 
   828  0114                     	;# 
   829  0115                     	;# 
   830  0116                     	;# 
   831  0117                     	;# 
   832  0118                     	;# 
   833  0119                     	;# 
   834  011D                     	;# 
   835  018C                     	;# 
   836  018E                     	;# 
   837  0191                     	;# 
   838  0191                     	;# 
   839  0192                     	;# 
   840  0193                     	;# 
   841  0193                     	;# 
   842  0194                     	;# 
   843  0195                     	;# 
   844  0196                     	;# 
   845  0197                     	;# 
   846  020C                     	;# 
   847  0211                     	;# 
   848  0211                     	;# 
   849  0212                     	;# 
   850  0212                     	;# 
   851  0213                     	;# 
   852  0213                     	;# 
   853  0214                     	;# 
   854  0214                     	;# 
   855  0215                     	;# 
   856  0215                     	;# 
   857  0215                     	;# 
   858  0216                     	;# 
   859  0216                     	;# 
   860  0217                     	;# 
   861  0217                     	;# 
   862  0391                     	;# 
   863  0392                     	;# 
   864  0393                     	;# 
   865  0498                     	;# 
   866  0498                     	;# 
   867  0499                     	;# 
   868  049A                     	;# 
   869  049B                     	;# 
   870  049B                     	;# 
   871  049C                     	;# 
   872  049D                     	;# 
   873  049E                     	;# 
   874  049F                     	;# 
   875  0611                     	;# 
   876  0612                     	;# 
   877  0613                     	;# 
   878  0613                     	;# 
   879  0614                     	;# 
   880  0615                     	;# 
   881  0616                     	;# 
   882  0616                     	;# 
   883  0617                     	;# 
   884  0618                     	;# 
   885  0619                     	;# 
   886  0619                     	;# 
   887  061A                     	;# 
   888  061B                     	;# 
   889  061C                     	;# 
   890  061C                     	;# 
   891  0691                     	;# 
   892  0692                     	;# 
   893  0693                     	;# 
   894  0694                     	;# 
   895  0695                     	;# 
   896  0F0F                     	;# 
   897  0F10                     	;# 
   898  0F11                     	;# 
   899  0F12                     	;# 
   900  0F13                     	;# 
   901  0F14                     	;# 
   902  0F15                     	;# 
   903  0F16                     	;# 
   904  0F17                     	;# 
   905  0F18                     	;# 
   906  0F19                     	;# 
   907  0F1A                     	;# 
   908  0F1B                     	;# 
   909  0F1C                     	;# 
   910  0F1D                     	;# 
   911  0F1E                     	;# 
   912  0F1F                     	;# 
   913  0FE3                     	;# 
   914  0FE4                     	;# 
   915  0FE5                     	;# 
   916  0FE6                     	;# 
   917  0FE7                     	;# 
   918  0FE8                     	;# 
   919  0FE9                     	;# 
   920  0FEA                     	;# 
   921  0FEB                     	;# 
   922  0FED                     	;# 
   923  0FEE                     	;# 
   924  0FEF                     	;# 
   925                           
   926                           	psect	idataCOMMON
   927  01CC                     __pidataCOMMON:	
   928                           
   929                           ;initializer for main@commandDN
   930  01CC  3401               	retlw	1
   931                           
   932                           ;initializer for main@commandUP
   933  01CD  3401               	retlw	1
   934                           
   935                           	psect	nvCOMMON
   936  0079                     __pnvCOMMON:	
   937  0079                     _pwm1_dutyCycle:	
   938  0079                     	ds	2
   939                           
   940                           	psect	nvBANK0
   941  0020                     __pnvBANK0:	
   942  0020                     _pwm4_dutyCycle:	
   943  0020                     	ds	2
   944  0022                     _pwm3_dutyCycle:	
   945  0022                     	ds	2
   946  0024                     _pwm2_dutyCycle:	
   947  0024                     	ds	2
   948  001C                     _T2CONbits	set	28
   949  001A                     _TMR2	set	26
   950  001B                     _PR2	set	27
   951  001C                     _T2CON	set	28
   952  000E                     _PORTCbits	set	14
   953  000C                     _PORTAbits	set	12
   954  008E                     _TRISC	set	142
   955  008C                     _TRISA	set	140
   956  0097                     _WDTCON	set	151
   957  0099                     _OSCCON	set	153
   958  010E                     _LATC	set	270
   959  010C                     _LATA	set	268
   960  018E                     _ANSELC	set	398
   961  018C                     _ANSELA	set	396
   962  020C                     _WPUA	set	524
   963  061A                     _PWM4DCL	set	1562
   964  061B                     _PWM4DCH	set	1563
   965  0617                     _PWM3DCL	set	1559
   966  0618                     _PWM3DCH	set	1560
   967  0614                     _PWM2DCL	set	1556
   968  0615                     _PWM2DCH	set	1557
   969  0611                     _PWM1DCL	set	1553
   970  0612                     _PWM1DCH	set	1554
   971  061C                     _PWM4CON	set	1564
   972  0619                     _PWM3CON	set	1561
   973  0616                     _PWM2CON	set	1558
   974  0613                     _PWM1CON	set	1555
   975                           
   976                           ; #config settings
   977  0000                     
   978                           	psect	cinit
   979  000E                     start_initialization:	
   980  000E                     __initialization:	
   981                           
   982                           ; Initialize objects allocated to COMMON
   983  000E  21CC               	fcall	__pidataCOMMON	;fetch initializer
   984  000F  00FB               	movwf	__pdataCOMMON& (0+127)
   985  0010  21CD               	fcall	__pidataCOMMON+1	;fetch initializer
   986  0011  00FC               	movwf	(__pdataCOMMON+1)& (0+127)
   987  0012                     end_of_initialization:	
   988                           ;End of C runtime variable initialization code
   989                           
   990  0012                     __end_of__initialization:	
   991  0012  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   992  0013  0020               	movlb	0
   993  0014  28F3               	ljmp	_main	;jump to C main() function
   994                           
   995                           	psect	dataCOMMON
   996  007B                     __pdataCOMMON:	
   997  007B                     main@commandDN:	
   998  007B                     	ds	1
   999  007C                     main@commandUP:	
  1000  007C                     	ds	1
  1001                           
  1002                           	psect	cstackCOMMON
  1003  0070                     __pcstackCOMMON:	
  1004  0070                     ?_ConfigureOscillator:	
  1005  0070                     ?_InitApp:	
  1006                           ; 1 bytes @ 0x0
  1007                           
  1008  0070                     ?_decDutyCycle:	
  1009                           ; 1 bytes @ 0x0
  1010                           
  1011  0070                     ?_getPWMSEL:	
  1012                           ; 1 bytes @ 0x0
  1013                           
  1014  0070                     ?_incDutyCycle:	
  1015                           ; 1 bytes @ 0x0
  1016                           
  1017  0070                     ?__init_gpio:	
  1018                           ; 1 bytes @ 0x0
  1019                           
  1020  0070                     ?__init_timer2:	
  1021                           ; 1 bytes @ 0x0
  1022                           
  1023  0070                     ?__init_pwm:	
  1024                           ; 1 bytes @ 0x0
  1025                           
  1026  0070                     ?_isr:	
  1027                           ; 1 bytes @ 0x0
  1028                           
  1029  0070                     ??_isr:	
  1030                           ; 1 bytes @ 0x0
  1031                           
  1032  0070                     ?_main:	
  1033                           ; 1 bytes @ 0x0
  1034                           
  1035                           
  1036                           ; 1 bytes @ 0x0
  1037  0070                     	ds	1
  1038  0071                     ??_ConfigureOscillator:	
  1039  0071                     ??_getPWMSEL:	
  1040                           ; 1 bytes @ 0x1
  1041                           
  1042  0071                     ??__init_gpio:	
  1043                           ; 1 bytes @ 0x1
  1044                           
  1045  0071                     ??__init_timer2:	
  1046                           ; 1 bytes @ 0x1
  1047                           
  1048  0071                     ?_pwm1_writeDutyCycle:	
  1049                           ; 1 bytes @ 0x1
  1050                           
  1051  0071                     ?_pwm2_writeDutyCycle:	
  1052                           ; 2 bytes @ 0x1
  1053                           
  1054  0071                     ?_pwm3_writeDutyCycle:	
  1055                           ; 2 bytes @ 0x1
  1056                           
  1057  0071                     ?_pwm4_writeDutyCycle:	
  1058                           ; 2 bytes @ 0x1
  1059                           
  1060  0071                     ?_checkDCBounds:	
  1061                           ; 2 bytes @ 0x1
  1062                           
  1063  0071                     pwm1_writeDutyCycle@dutyCycle:	
  1064                           ; 2 bytes @ 0x1
  1065                           
  1066  0071                     pwm2_writeDutyCycle@dutyCycle:	
  1067                           ; 2 bytes @ 0x1
  1068                           
  1069  0071                     pwm3_writeDutyCycle@dutyCycle:	
  1070                           ; 2 bytes @ 0x1
  1071                           
  1072  0071                     pwm4_writeDutyCycle@dutyCycle:	
  1073                           ; 2 bytes @ 0x1
  1074                           
  1075  0071                     checkDCBounds@dc:	
  1076                           ; 2 bytes @ 0x1
  1077                           
  1078                           
  1079                           ; 2 bytes @ 0x1
  1080  0071                     	ds	2
  1081  0073                     ??_pwm1_writeDutyCycle:	
  1082  0073                     ??_pwm2_writeDutyCycle:	
  1083                           ; 1 bytes @ 0x3
  1084                           
  1085  0073                     ??_pwm3_writeDutyCycle:	
  1086                           ; 1 bytes @ 0x3
  1087                           
  1088  0073                     ??_pwm4_writeDutyCycle:	
  1089                           ; 1 bytes @ 0x3
  1090                           
  1091  0073                     checkDCBounds@direction:	
  1092                           ; 1 bytes @ 0x3
  1093                           
  1094                           
  1095                           ; 1 bytes @ 0x3
  1096  0073                     	ds	1
  1097  0074                     ??_checkDCBounds:	
  1098  0074                     checkDCBounds@retval:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101                           
  1102                           ; 2 bytes @ 0x4
  1103  0074                     	ds	1
  1104  0075                     ??_InitApp:	
  1105  0075                     ??__init_pwm:	
  1106                           ; 1 bytes @ 0x5
  1107                           
  1108                           
  1109                           ; 1 bytes @ 0x5
  1110  0075                     	ds	1
  1111  0076                     ??_decDutyCycle:	
  1112  0076                     ??_incDutyCycle:	
  1113                           ; 1 bytes @ 0x6
  1114                           
  1115  0076                     incDutyCycle@chan:	
  1116                           ; 1 bytes @ 0x6
  1117                           
  1118  0076                     decDutyCycle@chan:	
  1119                           ; 1 bytes @ 0x6
  1120                           
  1121                           
  1122                           ; 1 bytes @ 0x6
  1123  0076                     	ds	1
  1124  0077                     incDutyCycle@dutyCycle:	
  1125  0077                     decDutyCycle@dutyCycle:	
  1126                           ; 2 bytes @ 0x7
  1127                           
  1128                           
  1129                           ; 2 bytes @ 0x7
  1130  0077                     	ds	2
  1131  0079                     ??_main:	
  1132                           
  1133                           	psect	maintext
  1134  00F3                     __pmaintext:	
  1135                           ; 1 bytes @ 0x9
  1136 ;;
  1137 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1138 ;;
  1139 ;; *************** function _main *****************
  1140 ;; Defined at:
  1141 ;;		line 30 in file "main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;                  1    wreg      void 
  1148 ;; Registers used:
  1149 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1150 ;; Tracked objects:
  1151 ;;		On entry : B1F/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1
  1155 ;;      Params:         0       0       0
  1156 ;;      Locals:         0       0       0
  1157 ;;      Temps:          0       0       0
  1158 ;;      Totals:         0       0       0
  1159 ;;Total ram usage:        0 bytes
  1160 ;; Hardware stack levels required when called:    4
  1161 ;; This function calls:
  1162 ;;		_ConfigureOscillator
  1163 ;;		_InitApp
  1164 ;;		_decDutyCycle
  1165 ;;		_getPWMSEL
  1166 ;;		_incDutyCycle
  1167 ;; This function is called by:
  1168 ;;		Startup code after reset
  1169 ;; This function uses a non-reentrant model
  1170 ;;
  1171                           
  1172                           
  1173                           ;psect for function _main
  1174  00F3                     _main:	
  1175                           
  1176                           ;main.c: 33: ConfigureOscillator();
  1177                           
  1178                           ;incstack = 0
  1179                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1180  00F3  21C3               	fcall	_ConfigureOscillator
  1181                           
  1182                           ;main.c: 36: InitApp();
  1183  00F4  21C8               	fcall	_InitApp
  1184  00F5                     l801:	
  1185                           ;main.c: 38: static bool commandUP = 1;
  1186                           ;main.c: 39: static bool commandDN = 1;
  1187                           ;main.c: 41: while(1)
  1188                           
  1189                           
  1190                           ;main.c: 42: {
  1191                           ;main.c: 43: if( PORTAbits.RA5 == 1 ){
  1192  00F5  0020               	movlb	0	; select bank0
  1193  00F6  1E8C               	btfss	12,5	;volatile
  1194  00F7  28FA               	goto	l29
  1195                           
  1196                           ;main.c: 44: commandDN = 1;
  1197  00F8  01FB               	clrf	main@commandDN
  1198  00F9  0AFB               	incf	main@commandDN,f
  1199  00FA                     l29:	
  1200                           
  1201                           ;main.c: 45: }
  1202                           ;main.c: 46: if( PORTAbits.RA4 == 1 ){
  1203  00FA  1E0C               	btfss	12,4	;volatile
  1204  00FB  28FE               	goto	l30
  1205                           
  1206                           ;main.c: 47: commandUP = 1;
  1207  00FC  01FC               	clrf	main@commandUP
  1208  00FD  0AFC               	incf	main@commandUP,f
  1209  00FE                     l30:	
  1210                           
  1211                           ;main.c: 48: }
  1212                           ;main.c: 50: if( PORTAbits.RA5 == 0 && commandDN == 1 && PORTCbits.RC0 == 0){
  1213  00FE  1A8C               	btfsc	12,5	;volatile
  1214  00FF  2907               	goto	l815
  1215  0100  037B               	decf	main@commandDN,w
  1216  0101  1903               	btfsc	3,2
  1217  0102  180E               	btfsc	14,0	;volatile
  1218  0103  2907               	goto	l815
  1219                           
  1220                           ;main.c: 51: decDutyCycle(getPWMSEL());
  1221  0104  2197               	fcall	_getPWMSEL
  1222  0105  2075               	fcall	_decDutyCycle
  1223                           
  1224                           ;main.c: 52: commandDN = 0;
  1225  0106  01FB               	clrf	main@commandDN
  1226  0107                     l815:	
  1227                           
  1228                           ;main.c: 53: }
  1229                           ;main.c: 54: if( PORTAbits.RA4 == 0 && commandUP == 1 && PORTCbits.RC0 == 0){
  1230  0107  0020               	movlb	0	; select bank0
  1231  0108  1A0C               	btfsc	12,4	;volatile
  1232  0109  28F5               	goto	l801
  1233  010A  037C               	decf	main@commandUP,w
  1234  010B  1903               	btfsc	3,2
  1235  010C  180E               	btfsc	14,0	;volatile
  1236  010D  28F5               	goto	l801
  1237                           
  1238                           ;main.c: 55: incDutyCycle(getPWMSEL());
  1239  010E  2197               	fcall	_getPWMSEL
  1240  010F  2015               	fcall	_incDutyCycle
  1241                           
  1242                           ;main.c: 56: commandUP = 0;
  1243  0110  01FC               	clrf	main@commandUP
  1244  0111  28F5               	goto	l801
  1245  0112                     __end_of_main:	
  1246                           
  1247                           	psect	text1
  1248  0015                     __ptext1:	
  1249 ;; *************** function _incDutyCycle *****************
  1250 ;; Defined at:
  1251 ;;		line 86 in file "pwm.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  chan            1    wreg     enum E2930
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;  chan            1    6[COMMON] enum E2930
  1256 ;;  dutyCycle       2    7[COMMON] unsigned int 
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMMON   BANK0   BANK1
  1266 ;;      Params:         0       0       0
  1267 ;;      Locals:         3       0       0
  1268 ;;      Temps:          0       0       0
  1269 ;;      Totals:         3       0       0
  1270 ;;Total ram usage:        3 bytes
  1271 ;; Hardware stack levels used:    1
  1272 ;; Hardware stack levels required when called:    2
  1273 ;; This function calls:
  1274 ;;		_checkDCBounds
  1275 ;;		_pwm1_writeDutyCycle
  1276 ;;		_pwm2_writeDutyCycle
  1277 ;;		_pwm3_writeDutyCycle
  1278 ;;		_pwm4_writeDutyCycle
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _incDutyCycle
  1286  0015                     _incDutyCycle:	
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _incDutyCycle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1290                           ;incDutyCycle@chan stored from wreg
  1291  0015  00F6               	movwf	incDutyCycle@chan
  1292                           
  1293                           ;pwm.c: 87: uint16_t dutyCycle;
  1294                           ;pwm.c: 89: switch(chan){
  1295  0016  2866               	goto	l797
  1296  0017                     l787:	
  1297                           ;pwm.c: 90: case PWM_CH1:
  1298                           
  1299                           
  1300                           ;pwm.c: 92: dutyCycle = checkDCBounds(pwm1_dutyCycle + 1U, 1);
  1301  0017  0879               	movf	_pwm1_dutyCycle,w	;volatile
  1302  0018  3E01               	addlw	1
  1303  0019  00F1               	movwf	checkDCBounds@dc
  1304  001A  3000               	movlw	0
  1305  001B  3D7A               	addwfc	_pwm1_dutyCycle+1,w	;volatile
  1306  001C  00F2               	movwf	checkDCBounds@dc+1
  1307  001D  01F3               	clrf	checkDCBounds@direction
  1308  001E  0AF3               	incf	checkDCBounds@direction,f
  1309  001F  2163               	fcall	_checkDCBounds
  1310  0020  0872               	movf	?_checkDCBounds+1,w
  1311  0021  00F8               	movwf	incDutyCycle@dutyCycle+1
  1312  0022  0871               	movf	?_checkDCBounds,w
  1313  0023  00F7               	movwf	incDutyCycle@dutyCycle
  1314                           
  1315                           ;pwm.c: 95: pwm1_writeDutyCycle(dutyCycle);
  1316  0024  0878               	movf	incDutyCycle@dutyCycle+1,w
  1317  0025  00F2               	movwf	pwm1_writeDutyCycle@dutyCycle+1
  1318  0026  0877               	movf	incDutyCycle@dutyCycle,w
  1319  0027  00F1               	movwf	pwm1_writeDutyCycle@dutyCycle
  1320  0028  217D               	fcall	_pwm1_writeDutyCycle
  1321                           
  1322                           ;pwm.c: 97: break;
  1323  0029  0008               	return
  1324  002A                     l789:	
  1325                           ;pwm.c: 99: case PWM_CH2:
  1326                           
  1327                           
  1328                           ;pwm.c: 101: dutyCycle = checkDCBounds(pwm2_dutyCycle + 1U, 1);
  1329  002A  0020               	movlb	0	; select bank0
  1330  002B  0824               	movf	_pwm2_dutyCycle,w	;volatile
  1331  002C  3E01               	addlw	1
  1332  002D  00F1               	movwf	checkDCBounds@dc
  1333  002E  3000               	movlw	0
  1334  002F  3D25               	addwfc	_pwm2_dutyCycle+1,w	;volatile
  1335  0030  00F2               	movwf	checkDCBounds@dc+1
  1336  0031  01F3               	clrf	checkDCBounds@direction
  1337  0032  0AF3               	incf	checkDCBounds@direction,f
  1338  0033  2163               	fcall	_checkDCBounds
  1339  0034  0872               	movf	?_checkDCBounds+1,w
  1340  0035  00F8               	movwf	incDutyCycle@dutyCycle+1
  1341  0036  0871               	movf	?_checkDCBounds,w
  1342  0037  00F7               	movwf	incDutyCycle@dutyCycle
  1343                           
  1344                           ;pwm.c: 104: pwm2_writeDutyCycle(dutyCycle);
  1345  0038  0878               	movf	incDutyCycle@dutyCycle+1,w
  1346  0039  00F2               	movwf	pwm2_writeDutyCycle@dutyCycle+1
  1347  003A  0877               	movf	incDutyCycle@dutyCycle,w
  1348  003B  00F1               	movwf	pwm2_writeDutyCycle@dutyCycle
  1349  003C  2148               	fcall	_pwm2_writeDutyCycle
  1350                           
  1351                           ;pwm.c: 106: break;
  1352  003D  0008               	return
  1353  003E                     l791:	
  1354                           ;pwm.c: 108: case PWM_CH3:
  1355                           
  1356                           
  1357                           ;pwm.c: 110: dutyCycle = checkDCBounds(pwm3_dutyCycle + 1U, 1);
  1358  003E  0020               	movlb	0	; select bank0
  1359  003F  0822               	movf	_pwm3_dutyCycle,w	;volatile
  1360  0040  3E01               	addlw	1
  1361  0041  00F1               	movwf	checkDCBounds@dc
  1362  0042  3000               	movlw	0
  1363  0043  3D23               	addwfc	_pwm3_dutyCycle+1,w	;volatile
  1364  0044  00F2               	movwf	checkDCBounds@dc+1
  1365  0045  01F3               	clrf	checkDCBounds@direction
  1366  0046  0AF3               	incf	checkDCBounds@direction,f
  1367  0047  2163               	fcall	_checkDCBounds
  1368  0048  0872               	movf	?_checkDCBounds+1,w
  1369  0049  00F8               	movwf	incDutyCycle@dutyCycle+1
  1370  004A  0871               	movf	?_checkDCBounds,w
  1371  004B  00F7               	movwf	incDutyCycle@dutyCycle
  1372                           
  1373                           ;pwm.c: 113: pwm3_writeDutyCycle(dutyCycle);
  1374  004C  0878               	movf	incDutyCycle@dutyCycle+1,w
  1375  004D  00F2               	movwf	pwm3_writeDutyCycle@dutyCycle+1
  1376  004E  0877               	movf	incDutyCycle@dutyCycle,w
  1377  004F  00F1               	movwf	pwm3_writeDutyCycle@dutyCycle
  1378  0050  212D               	fcall	_pwm3_writeDutyCycle
  1379                           
  1380                           ;pwm.c: 115: break;
  1381  0051  0008               	return
  1382  0052                     l793:	
  1383                           ;pwm.c: 117: case PWM_CH4:
  1384                           
  1385                           
  1386                           ;pwm.c: 119: dutyCycle = checkDCBounds(pwm4_dutyCycle + 1U, 1);
  1387  0052  0020               	movlb	0	; select bank0
  1388  0053  0820               	movf	_pwm4_dutyCycle,w	;volatile
  1389  0054  3E01               	addlw	1
  1390  0055  00F1               	movwf	checkDCBounds@dc
  1391  0056  3000               	movlw	0
  1392  0057  3D21               	addwfc	_pwm4_dutyCycle+1,w	;volatile
  1393  0058  00F2               	movwf	checkDCBounds@dc+1
  1394  0059  01F3               	clrf	checkDCBounds@direction
  1395  005A  0AF3               	incf	checkDCBounds@direction,f
  1396  005B  2163               	fcall	_checkDCBounds
  1397  005C  0872               	movf	?_checkDCBounds+1,w
  1398  005D  00F8               	movwf	incDutyCycle@dutyCycle+1
  1399  005E  0871               	movf	?_checkDCBounds,w
  1400  005F  00F7               	movwf	incDutyCycle@dutyCycle
  1401                           
  1402                           ;pwm.c: 122: pwm4_writeDutyCycle(dutyCycle);
  1403  0060  0878               	movf	incDutyCycle@dutyCycle+1,w
  1404  0061  00F2               	movwf	pwm4_writeDutyCycle@dutyCycle+1
  1405  0062  0877               	movf	incDutyCycle@dutyCycle,w
  1406  0063  00F1               	movwf	pwm4_writeDutyCycle@dutyCycle
  1407  0064  2112               	fcall	_pwm4_writeDutyCycle
  1408                           
  1409                           ;pwm.c: 129: }
  1410                           
  1411                           ;pwm.c: 128: break;
  1412                           
  1413                           ;pwm.c: 126: default:
  1414                           
  1415                           ;pwm.c: 124: break;
  1416  0065  0008               	return
  1417  0066                     l797:	
  1418  0066  0876               	movf	incDutyCycle@chan,w
  1419                           
  1420                           ; Switch size 1, requested type "space"
  1421                           ; Number of cases is 4, Range of values is 0 to 3
  1422                           ; switch strategies available:
  1423                           ; Name         Instructions Cycles
  1424                           ; simple_byte           13     7 (average)
  1425                           ; direct_byte           14     6 (fixed)
  1426                           ; jumptable            260     6 (fixed)
  1427                           ;	Chosen strategy is simple_byte
  1428  0067  3A00               	xorlw	0	; case 0
  1429  0068  1903               	skipnz
  1430  0069  2817               	goto	l787
  1431  006A  3A01               	xorlw	1	; case 1
  1432  006B  1903               	skipnz
  1433  006C  282A               	goto	l789
  1434  006D  3A03               	xorlw	3	; case 2
  1435  006E  1903               	skipnz
  1436  006F  283E               	goto	l791
  1437  0070  3A01               	xorlw	1	; case 3
  1438  0071  1903               	skipnz
  1439  0072  2852               	goto	l793
  1440  0073  2874               	goto	l152
  1441  0074                     l152:	
  1442  0074  0008               	return
  1443  0075                     __end_of_incDutyCycle:	
  1444                           
  1445                           	psect	text2
  1446  0197                     __ptext2:	
  1447 ;; *************** function _getPWMSEL *****************
  1448 ;; Defined at:
  1449 ;;		line 178 in file "pwm.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      enum E2938
  1456 ;; Registers used:
  1457 ;;		wreg
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMMON   BANK0   BANK1
  1463 ;;      Params:         0       0       0
  1464 ;;      Locals:         0       0       0
  1465 ;;      Temps:          0       0       0
  1466 ;;      Totals:         0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels used:    1
  1469 ;; Hardware stack levels required when called:    1
  1470 ;; This function calls:
  1471 ;;		Nothing
  1472 ;; This function is called by:
  1473 ;;		_main
  1474 ;; This function uses a non-reentrant model
  1475 ;;
  1476                           
  1477                           
  1478                           ;psect for function _getPWMSEL
  1479  0197                     _getPWMSEL:	
  1480                           
  1481                           ;pwm.c: 180: if(PORTCbits.RC4 == 0 && PORTCbits.RC2 == 0){
  1482                           
  1483                           ;incstack = 0
  1484                           ; Regs used in _getPWMSEL: [wreg]
  1485  0197  0020               	movlb	0	; select bank0
  1486  0198  1E0E               	btfss	14,4	;volatile
  1487  0199  190E               	btfsc	14,2	;volatile
  1488  019A  299D               	goto	l165
  1489                           
  1490                           ;pwm.c: 181: return PWM_CH1;
  1491  019B  3000               	movlw	0
  1492  019C  0008               	return
  1493  019D                     l165:	
  1494                           ;pwm.c: 182: }else if(PORTCbits.RC4 == 0 && PORTCbits.RC2 == 1){
  1495                           
  1496  019D  1E0E               	btfss	14,4	;volatile
  1497  019E  1D0E               	btfss	14,2	;volatile
  1498  019F  29A2               	goto	l168
  1499                           
  1500                           ;pwm.c: 183: return PWM_CH2;
  1501  01A0  3001               	movlw	1
  1502  01A1  0008               	return
  1503  01A2                     l168:	
  1504                           ;pwm.c: 184: }else if(PORTCbits.RC4 == 1 && PORTCbits.RC2 == 0){
  1505                           
  1506  01A2  1A0E               	btfsc	14,4	;volatile
  1507  01A3  190E               	btfsc	14,2	;volatile
  1508  01A4  29A7               	goto	l170
  1509                           
  1510                           ;pwm.c: 185: return PWM_CH3;
  1511  01A5  3002               	movlw	2
  1512  01A6  0008               	return
  1513  01A7                     l170:	
  1514                           ;pwm.c: 186: }else if( PORTCbits.RC4 == 1 && PORTCbits.RC2 == 1){
  1515                           
  1516  01A7  1A0E               	btfsc	14,4	;volatile
  1517  01A8  1D0E               	btfss	14,2	;volatile
  1518  01A9  29AC               	goto	l657
  1519                           
  1520                           ;pwm.c: 187: return PWM_CH4;
  1521  01AA  3003               	movlw	3
  1522  01AB  0008               	return
  1523  01AC                     l657:	
  1524                           ;pwm.c: 188: }else{
  1525                           
  1526                           
  1527                           ;pwm.c: 190: }
  1528                           ;pwm.c: 192: return PWM_CH1;
  1529  01AC  3000               	movlw	0
  1530  01AD  0008               	return
  1531  01AE                     __end_of_getPWMSEL:	
  1532                           
  1533                           	psect	text3
  1534  0075                     __ptext3:	
  1535 ;; *************** function _decDutyCycle *****************
  1536 ;; Defined at:
  1537 ;;		line 132 in file "pwm.c"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;  chan            1    wreg     enum E2930
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;  chan            1    6[COMMON] enum E2930
  1542 ;;  dutyCycle       2    7[COMMON] unsigned int 
  1543 ;; Return value:  Size  Location     Type
  1544 ;;                  1    wreg      void 
  1545 ;; Registers used:
  1546 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1547 ;; Tracked objects:
  1548 ;;		On entry : 0/0
  1549 ;;		On exit  : 0/0
  1550 ;;		Unchanged: 0/0
  1551 ;; Data sizes:     COMMON   BANK0   BANK1
  1552 ;;      Params:         0       0       0
  1553 ;;      Locals:         3       0       0
  1554 ;;      Temps:          0       0       0
  1555 ;;      Totals:         3       0       0
  1556 ;;Total ram usage:        3 bytes
  1557 ;; Hardware stack levels used:    1
  1558 ;; Hardware stack levels required when called:    2
  1559 ;; This function calls:
  1560 ;;		_checkDCBounds
  1561 ;;		_pwm1_writeDutyCycle
  1562 ;;		_pwm2_writeDutyCycle
  1563 ;;		_pwm3_writeDutyCycle
  1564 ;;		_pwm4_writeDutyCycle
  1565 ;; This function is called by:
  1566 ;;		_main
  1567 ;; This function uses a non-reentrant model
  1568 ;;
  1569                           
  1570                           
  1571                           ;psect for function _decDutyCycle
  1572  0075                     _decDutyCycle:	
  1573                           
  1574                           ;incstack = 0
  1575                           ; Regs used in _decDutyCycle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1576                           ;decDutyCycle@chan stored from wreg
  1577  0075  00F6               	movwf	decDutyCycle@chan
  1578                           
  1579                           ;pwm.c: 133: uint16_t dutyCycle;
  1580                           ;pwm.c: 135: switch(chan){
  1581  0076  28C2               	goto	l783
  1582  0077                     l773:	
  1583                           ;pwm.c: 136: case PWM_CH1:
  1584                           
  1585                           
  1586                           ;pwm.c: 138: dutyCycle = checkDCBounds(pwm1_dutyCycle - 1U, 0);
  1587  0077  0879               	movf	_pwm1_dutyCycle,w	;volatile
  1588  0078  3EFF               	addlw	255
  1589  0079  00F1               	movwf	checkDCBounds@dc
  1590  007A  30FF               	movlw	255
  1591  007B  3D7A               	addwfc	_pwm1_dutyCycle+1,w	;volatile
  1592  007C  00F2               	movwf	checkDCBounds@dc+1
  1593  007D  01F3               	clrf	checkDCBounds@direction
  1594  007E  2163               	fcall	_checkDCBounds
  1595  007F  0872               	movf	?_checkDCBounds+1,w
  1596  0080  00F8               	movwf	decDutyCycle@dutyCycle+1
  1597  0081  0871               	movf	?_checkDCBounds,w
  1598  0082  00F7               	movwf	decDutyCycle@dutyCycle
  1599                           
  1600                           ;pwm.c: 141: pwm1_writeDutyCycle(dutyCycle);
  1601  0083  0878               	movf	decDutyCycle@dutyCycle+1,w
  1602  0084  00F2               	movwf	pwm1_writeDutyCycle@dutyCycle+1
  1603  0085  0877               	movf	decDutyCycle@dutyCycle,w
  1604  0086  00F1               	movwf	pwm1_writeDutyCycle@dutyCycle
  1605  0087  217D               	fcall	_pwm1_writeDutyCycle
  1606                           
  1607                           ;pwm.c: 143: break;
  1608  0088  0008               	return
  1609  0089                     l775:	
  1610                           ;pwm.c: 145: case PWM_CH2:
  1611                           
  1612                           
  1613                           ;pwm.c: 147: dutyCycle = checkDCBounds(pwm2_dutyCycle - 1U, 0);
  1614  0089  0020               	movlb	0	; select bank0
  1615  008A  0824               	movf	_pwm2_dutyCycle,w	;volatile
  1616  008B  3EFF               	addlw	255
  1617  008C  00F1               	movwf	checkDCBounds@dc
  1618  008D  30FF               	movlw	255
  1619  008E  3D25               	addwfc	_pwm2_dutyCycle+1,w	;volatile
  1620  008F  00F2               	movwf	checkDCBounds@dc+1
  1621  0090  01F3               	clrf	checkDCBounds@direction
  1622  0091  2163               	fcall	_checkDCBounds
  1623  0092  0872               	movf	?_checkDCBounds+1,w
  1624  0093  00F8               	movwf	decDutyCycle@dutyCycle+1
  1625  0094  0871               	movf	?_checkDCBounds,w
  1626  0095  00F7               	movwf	decDutyCycle@dutyCycle
  1627                           
  1628                           ;pwm.c: 150: pwm2_writeDutyCycle(dutyCycle);
  1629  0096  0878               	movf	decDutyCycle@dutyCycle+1,w
  1630  0097  00F2               	movwf	pwm2_writeDutyCycle@dutyCycle+1
  1631  0098  0877               	movf	decDutyCycle@dutyCycle,w
  1632  0099  00F1               	movwf	pwm2_writeDutyCycle@dutyCycle
  1633  009A  2148               	fcall	_pwm2_writeDutyCycle
  1634                           
  1635                           ;pwm.c: 152: break;
  1636  009B  0008               	return
  1637  009C                     l777:	
  1638                           ;pwm.c: 154: case PWM_CH3:
  1639                           
  1640                           
  1641                           ;pwm.c: 156: dutyCycle = checkDCBounds(pwm3_dutyCycle - 1U, 0);
  1642  009C  0020               	movlb	0	; select bank0
  1643  009D  0822               	movf	_pwm3_dutyCycle,w	;volatile
  1644  009E  3EFF               	addlw	255
  1645  009F  00F1               	movwf	checkDCBounds@dc
  1646  00A0  30FF               	movlw	255
  1647  00A1  3D23               	addwfc	_pwm3_dutyCycle+1,w	;volatile
  1648  00A2  00F2               	movwf	checkDCBounds@dc+1
  1649  00A3  01F3               	clrf	checkDCBounds@direction
  1650  00A4  2163               	fcall	_checkDCBounds
  1651  00A5  0872               	movf	?_checkDCBounds+1,w
  1652  00A6  00F8               	movwf	decDutyCycle@dutyCycle+1
  1653  00A7  0871               	movf	?_checkDCBounds,w
  1654  00A8  00F7               	movwf	decDutyCycle@dutyCycle
  1655                           
  1656                           ;pwm.c: 159: pwm3_writeDutyCycle(dutyCycle);
  1657  00A9  0878               	movf	decDutyCycle@dutyCycle+1,w
  1658  00AA  00F2               	movwf	pwm3_writeDutyCycle@dutyCycle+1
  1659  00AB  0877               	movf	decDutyCycle@dutyCycle,w
  1660  00AC  00F1               	movwf	pwm3_writeDutyCycle@dutyCycle
  1661  00AD  212D               	fcall	_pwm3_writeDutyCycle
  1662                           
  1663                           ;pwm.c: 161: break;
  1664  00AE  0008               	return
  1665  00AF                     l779:	
  1666                           ;pwm.c: 163: case PWM_CH4:
  1667                           
  1668                           
  1669                           ;pwm.c: 165: dutyCycle = checkDCBounds(pwm4_dutyCycle - 1U, 0);
  1670  00AF  0020               	movlb	0	; select bank0
  1671  00B0  0820               	movf	_pwm4_dutyCycle,w	;volatile
  1672  00B1  3EFF               	addlw	255
  1673  00B2  00F1               	movwf	checkDCBounds@dc
  1674  00B3  30FF               	movlw	255
  1675  00B4  3D21               	addwfc	_pwm4_dutyCycle+1,w	;volatile
  1676  00B5  00F2               	movwf	checkDCBounds@dc+1
  1677  00B6  01F3               	clrf	checkDCBounds@direction
  1678  00B7  2163               	fcall	_checkDCBounds
  1679  00B8  0872               	movf	?_checkDCBounds+1,w
  1680  00B9  00F8               	movwf	decDutyCycle@dutyCycle+1
  1681  00BA  0871               	movf	?_checkDCBounds,w
  1682  00BB  00F7               	movwf	decDutyCycle@dutyCycle
  1683                           
  1684                           ;pwm.c: 168: pwm4_writeDutyCycle(dutyCycle);
  1685  00BC  0878               	movf	decDutyCycle@dutyCycle+1,w
  1686  00BD  00F2               	movwf	pwm4_writeDutyCycle@dutyCycle+1
  1687  00BE  0877               	movf	decDutyCycle@dutyCycle,w
  1688  00BF  00F1               	movwf	pwm4_writeDutyCycle@dutyCycle
  1689  00C0  2112               	fcall	_pwm4_writeDutyCycle
  1690                           
  1691                           ;pwm.c: 175: }
  1692                           
  1693                           ;pwm.c: 174: break;
  1694                           
  1695                           ;pwm.c: 172: default:
  1696                           
  1697                           ;pwm.c: 170: break;
  1698  00C1  0008               	return
  1699  00C2                     l783:	
  1700  00C2  0876               	movf	decDutyCycle@chan,w
  1701                           
  1702                           ; Switch size 1, requested type "space"
  1703                           ; Number of cases is 4, Range of values is 0 to 3
  1704                           ; switch strategies available:
  1705                           ; Name         Instructions Cycles
  1706                           ; simple_byte           13     7 (average)
  1707                           ; direct_byte           14     6 (fixed)
  1708                           ; jumptable            260     6 (fixed)
  1709                           ;	Chosen strategy is simple_byte
  1710  00C3  3A00               	xorlw	0	; case 0
  1711  00C4  1903               	skipnz
  1712  00C5  2877               	goto	l773
  1713  00C6  3A01               	xorlw	1	; case 1
  1714  00C7  1903               	skipnz
  1715  00C8  2889               	goto	l775
  1716  00C9  3A03               	xorlw	3	; case 2
  1717  00CA  1903               	skipnz
  1718  00CB  289C               	goto	l777
  1719  00CC  3A01               	xorlw	1	; case 3
  1720  00CD  1903               	skipnz
  1721  00CE  28AF               	goto	l779
  1722  00CF  28D0               	goto	l162
  1723  00D0                     l162:	
  1724  00D0  0008               	return
  1725  00D1                     __end_of_decDutyCycle:	
  1726                           
  1727                           	psect	text4
  1728  0163                     __ptext4:	
  1729 ;; *************** function _checkDCBounds *****************
  1730 ;; Defined at:
  1731 ;;		line 72 in file "pwm.c"
  1732 ;; Parameters:    Size  Location     Type
  1733 ;;  dc              2    1[COMMON] unsigned int 
  1734 ;;  direction       1    3[COMMON] unsigned char 
  1735 ;; Auto vars:     Size  Location     Type
  1736 ;;  retval          2    4[COMMON] unsigned int 
  1737 ;; Return value:  Size  Location     Type
  1738 ;;                  2    1[COMMON] unsigned int 
  1739 ;; Registers used:
  1740 ;;		wreg, status,2, status,0
  1741 ;; Tracked objects:
  1742 ;;		On entry : 0/0
  1743 ;;		On exit  : 0/0
  1744 ;;		Unchanged: 0/0
  1745 ;; Data sizes:     COMMON   BANK0   BANK1
  1746 ;;      Params:         3       0       0
  1747 ;;      Locals:         2       0       0
  1748 ;;      Temps:          0       0       0
  1749 ;;      Totals:         5       0       0
  1750 ;;Total ram usage:        5 bytes
  1751 ;; Hardware stack levels used:    1
  1752 ;; Hardware stack levels required when called:    1
  1753 ;; This function calls:
  1754 ;;		Nothing
  1755 ;; This function is called by:
  1756 ;;		_incDutyCycle
  1757 ;;		_decDutyCycle
  1758 ;; This function uses a non-reentrant model
  1759 ;;
  1760                           
  1761                           
  1762                           ;psect for function _checkDCBounds
  1763  0163                     _checkDCBounds:	
  1764                           
  1765                           ;pwm.c: 73: uint16_t retval = dc;
  1766                           
  1767                           ;incstack = 0
  1768                           ; Regs used in _checkDCBounds: [wreg+status,2+status,0]
  1769  0163  0872               	movf	checkDCBounds@dc+1,w
  1770  0164  00F5               	movwf	checkDCBounds@retval+1
  1771  0165  0871               	movf	checkDCBounds@dc,w
  1772  0166  00F4               	movwf	checkDCBounds@retval
  1773                           
  1774                           ;pwm.c: 74: if( dc > 19U ){
  1775  0167  3000               	movlw	0
  1776  0168  0272               	subwf	checkDCBounds@dc+1,w
  1777  0169  3014               	movlw	20
  1778  016A  1903               	skipnz
  1779  016B  0271               	subwf	checkDCBounds@dc,w
  1780  016C  1C03               	skipc
  1781  016D  2978               	goto	l765
  1782                           
  1783                           ;pwm.c: 75: if(direction == 1){
  1784  016E  0373               	decf	checkDCBounds@direction,w
  1785  016F  1D03               	btfss	3,2
  1786  0170  2976               	goto	l763
  1787                           
  1788                           ;pwm.c: 76: retval = 19U;
  1789  0171  3013               	movlw	19
  1790  0172  00F4               	movwf	checkDCBounds@retval
  1791  0173  3000               	movlw	0
  1792  0174  00F5               	movwf	checkDCBounds@retval+1
  1793                           
  1794                           ;pwm.c: 77: }else{
  1795  0175  2978               	goto	l765
  1796  0176                     l763:	
  1797                           
  1798                           ;pwm.c: 78: retval = 0U;
  1799  0176  01F4               	clrf	checkDCBounds@retval
  1800  0177  01F5               	clrf	checkDCBounds@retval+1
  1801  0178                     l765:	
  1802                           
  1803                           ;pwm.c: 79: }
  1804                           ;pwm.c: 80: }
  1805                           ;pwm.c: 82: return retval;
  1806  0178  0875               	movf	checkDCBounds@retval+1,w
  1807  0179  00F2               	movwf	?_checkDCBounds+1
  1808  017A  0874               	movf	checkDCBounds@retval,w
  1809  017B  00F1               	movwf	?_checkDCBounds
  1810  017C  0008               	return
  1811  017D                     __end_of_checkDCBounds:	
  1812                           
  1813                           	psect	text5
  1814  01C8                     __ptext5:	
  1815 ;; *************** function _InitApp *****************
  1816 ;; Defined at:
  1817 ;;		line 21 in file "user.c"
  1818 ;; Parameters:    Size  Location     Type
  1819 ;;		None
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;		None
  1822 ;; Return value:  Size  Location     Type
  1823 ;;                  1    wreg      void 
  1824 ;; Registers used:
  1825 ;;		wreg, status,2, status,0, pclath, cstack
  1826 ;; Tracked objects:
  1827 ;;		On entry : 0/0
  1828 ;;		On exit  : 0/0
  1829 ;;		Unchanged: 0/0
  1830 ;; Data sizes:     COMMON   BANK0   BANK1
  1831 ;;      Params:         0       0       0
  1832 ;;      Locals:         0       0       0
  1833 ;;      Temps:          0       0       0
  1834 ;;      Totals:         0       0       0
  1835 ;;Total ram usage:        0 bytes
  1836 ;; Hardware stack levels used:    1
  1837 ;; Hardware stack levels required when called:    3
  1838 ;; This function calls:
  1839 ;;		__init_gpio
  1840 ;;		__init_pwm
  1841 ;;		__init_timer2
  1842 ;; This function is called by:
  1843 ;;		_main
  1844 ;; This function uses a non-reentrant model
  1845 ;;
  1846                           
  1847                           
  1848                           ;psect for function _InitApp
  1849  01C8                     _InitApp:	
  1850                           
  1851                           ;user.c: 25: _init_gpio();
  1852                           
  1853                           ;incstack = 0
  1854                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  1855  01C8  21AE               	fcall	__init_gpio
  1856                           
  1857                           ;user.c: 28: _init_timer2();
  1858  01C9  21BC               	fcall	__init_timer2
  1859                           
  1860                           ;user.c: 29: _init_pwm();
  1861  01CA  20D1               	fcall	__init_pwm
  1862  01CB  0008               	return
  1863  01CC                     __end_of_InitApp:	
  1864                           
  1865                           	psect	text6
  1866  01BC                     __ptext6:	
  1867 ;; *************** function __init_timer2 *****************
  1868 ;; Defined at:
  1869 ;;		line 35 in file "user.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;                  1    wreg      void 
  1876 ;; Registers used:
  1877 ;;		wreg, status,2
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMMON   BANK0   BANK1
  1883 ;;      Params:         0       0       0
  1884 ;;      Locals:         0       0       0
  1885 ;;      Temps:          0       0       0
  1886 ;;      Totals:         0       0       0
  1887 ;;Total ram usage:        0 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    1
  1890 ;; This function calls:
  1891 ;;		Nothing
  1892 ;; This function is called by:
  1893 ;;		_InitApp
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           
  1898                           ;psect for function __init_timer2
  1899  01BC                     __init_timer2:	
  1900                           
  1901                           ;user.c: 38: T2CON = 0x00;
  1902                           
  1903                           ;incstack = 0
  1904                           ; Regs used in __init_timer2: [wreg+status,2]
  1905  01BC  0020               	movlb	0	; select bank0
  1906  01BD  019C               	clrf	28	;volatile
  1907                           
  1908                           ;user.c: 41: PR2 = 0x04;
  1909  01BE  3004               	movlw	4
  1910  01BF  009B               	movwf	27	;volatile
  1911                           
  1912                           ;user.c: 44: TMR2 = 0x00;
  1913  01C0  019A               	clrf	26	;volatile
  1914                           
  1915                           ;user.c: 47: T2CONbits.TMR2ON = 1;
  1916  01C1  151C               	bsf	28,2	;volatile
  1917  01C2  0008               	return
  1918  01C3                     __end_of__init_timer2:	
  1919                           
  1920                           	psect	text7
  1921  00D1                     __ptext7:	
  1922 ;; *************** function __init_pwm *****************
  1923 ;; Defined at:
  1924 ;;		line 16 in file "pwm.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      void 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1
  1938 ;;      Params:         0       0       0
  1939 ;;      Locals:         0       0       0
  1940 ;;      Temps:          0       0       0
  1941 ;;      Totals:         0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    2
  1945 ;; This function calls:
  1946 ;;		_pwm1_writeDutyCycle
  1947 ;;		_pwm2_writeDutyCycle
  1948 ;;		_pwm3_writeDutyCycle
  1949 ;;		_pwm4_writeDutyCycle
  1950 ;; This function is called by:
  1951 ;;		_InitApp
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function __init_pwm
  1957  00D1                     __init_pwm:	
  1958                           
  1959                           ;pwm.c: 19: PWM1CON = 0x00;
  1960                           
  1961                           ;incstack = 0
  1962                           ; Regs used in __init_pwm: [wreg+status,2+status,0+pclath+cstack]
  1963  00D1  002C               	movlb	12	; select bank12
  1964  00D2  0193               	clrf	19	;volatile
  1965                           
  1966                           ;pwm.c: 20: PWM2CON = 0x00;
  1967  00D3  0196               	clrf	22	;volatile
  1968                           
  1969                           ;pwm.c: 21: PWM3CON = 0x00;
  1970  00D4  0199               	clrf	25	;volatile
  1971                           
  1972                           ;pwm.c: 22: PWM4CON = 0x00;
  1973  00D5  019C               	clrf	28	;volatile
  1974                           
  1975                           ;pwm.c: 25: PWM1CON = 0xC0;
  1976  00D6  30C0               	movlw	192
  1977  00D7  0093               	movwf	19	;volatile
  1978                           
  1979                           ;pwm.c: 26: PWM2CON = 0xC0;
  1980  00D8  30C0               	movlw	192
  1981  00D9  0096               	movwf	22	;volatile
  1982                           
  1983                           ;pwm.c: 27: PWM3CON = 0xC0;
  1984  00DA  30C0               	movlw	192
  1985  00DB  0099               	movwf	25	;volatile
  1986                           
  1987                           ;pwm.c: 28: PWM4CON = 0xC0;
  1988  00DC  30C0               	movlw	192
  1989  00DD  009C               	movwf	28	;volatile
  1990                           
  1991                           ;pwm.c: 30: pwm1_writeDutyCycle(19U);
  1992  00DE  3013               	movlw	19
  1993  00DF  00F1               	movwf	pwm1_writeDutyCycle@dutyCycle
  1994  00E0  3000               	movlw	0
  1995  00E1  00F2               	movwf	pwm1_writeDutyCycle@dutyCycle+1
  1996  00E2  217D               	fcall	_pwm1_writeDutyCycle
  1997                           
  1998                           ;pwm.c: 31: pwm2_writeDutyCycle(19U);
  1999  00E3  3013               	movlw	19
  2000  00E4  00F1               	movwf	pwm2_writeDutyCycle@dutyCycle
  2001  00E5  3000               	movlw	0
  2002  00E6  00F2               	movwf	pwm2_writeDutyCycle@dutyCycle+1
  2003  00E7  2148               	fcall	_pwm2_writeDutyCycle
  2004                           
  2005                           ;pwm.c: 32: pwm3_writeDutyCycle(19U);
  2006  00E8  3013               	movlw	19
  2007  00E9  00F1               	movwf	pwm3_writeDutyCycle@dutyCycle
  2008  00EA  3000               	movlw	0
  2009  00EB  00F2               	movwf	pwm3_writeDutyCycle@dutyCycle+1
  2010  00EC  212D               	fcall	_pwm3_writeDutyCycle
  2011                           
  2012                           ;pwm.c: 33: pwm4_writeDutyCycle(19U);
  2013  00ED  3013               	movlw	19
  2014  00EE  00F1               	movwf	pwm4_writeDutyCycle@dutyCycle
  2015  00EF  3000               	movlw	0
  2016  00F0  00F2               	movwf	pwm4_writeDutyCycle@dutyCycle+1
  2017  00F1  2112               	fcall	_pwm4_writeDutyCycle
  2018  00F2  0008               	return
  2019  00F3                     __end_of__init_pwm:	
  2020                           
  2021                           	psect	text8
  2022  0112                     __ptext8:	
  2023 ;; *************** function _pwm4_writeDutyCycle *****************
  2024 ;; Defined at:
  2025 ;;		line 60 in file "pwm.c"
  2026 ;; Parameters:    Size  Location     Type
  2027 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2028 ;; Auto vars:     Size  Location     Type
  2029 ;;		None
  2030 ;; Return value:  Size  Location     Type
  2031 ;;                  2    1[COMMON] unsigned int 
  2032 ;; Registers used:
  2033 ;;		wreg, status,2, status,0
  2034 ;; Tracked objects:
  2035 ;;		On entry : 0/0
  2036 ;;		On exit  : 0/0
  2037 ;;		Unchanged: 0/0
  2038 ;; Data sizes:     COMMON   BANK0   BANK1
  2039 ;;      Params:         2       0       0
  2040 ;;      Locals:         0       0       0
  2041 ;;      Temps:          2       0       0
  2042 ;;      Totals:         4       0       0
  2043 ;;Total ram usage:        4 bytes
  2044 ;; Hardware stack levels used:    1
  2045 ;; Hardware stack levels required when called:    1
  2046 ;; This function calls:
  2047 ;;		Nothing
  2048 ;; This function is called by:
  2049 ;;		__init_pwm
  2050 ;;		_incDutyCycle
  2051 ;;		_decDutyCycle
  2052 ;; This function uses a non-reentrant model
  2053 ;;
  2054                           
  2055                           
  2056                           ;psect for function _pwm4_writeDutyCycle
  2057  0112                     _pwm4_writeDutyCycle:	
  2058                           
  2059                           ;pwm.c: 62: PWM4DCH = (dutyCycle & 0x03FC)>>2;
  2060                           
  2061                           ;incstack = 0
  2062                           ; Regs used in _pwm4_writeDutyCycle: [wreg+status,2+status,0]
  2063  0112  0872               	movf	pwm4_writeDutyCycle@dutyCycle+1,w
  2064  0113  00F4               	movwf	??_pwm4_writeDutyCycle+1
  2065  0114  0871               	movf	pwm4_writeDutyCycle@dutyCycle,w
  2066  0115  00F3               	movwf	??_pwm4_writeDutyCycle
  2067  0116  36F4               	lsrf	??_pwm4_writeDutyCycle+1,f
  2068  0117  0CF3               	rrf	??_pwm4_writeDutyCycle,f
  2069  0118  36F4               	lsrf	??_pwm4_writeDutyCycle+1,f
  2070  0119  0CF3               	rrf	??_pwm4_writeDutyCycle,f
  2071  011A  0873               	movf	??_pwm4_writeDutyCycle,w
  2072  011B  002C               	movlb	12	; select bank12
  2073  011C  009B               	movwf	27	;volatile
  2074                           
  2075                           ;pwm.c: 63: PWM4DCL = (dutyCycle & 0x0003)<<6;
  2076  011D  0871               	movf	pwm4_writeDutyCycle@dutyCycle,w
  2077  011E  3903               	andlw	3
  2078  011F  00F3               	movwf	??_pwm4_writeDutyCycle
  2079  0120  3005               	movlw	5
  2080  0121                     u265:	
  2081  0121  35F3               	lslf	??_pwm4_writeDutyCycle,f
  2082  0122  3EFF               	addlw	-1
  2083  0123  1D03               	skipz
  2084  0124  2921               	goto	u265
  2085  0125  3573               	lslf	??_pwm4_writeDutyCycle,w
  2086  0126  009A               	movwf	26	;volatile
  2087                           
  2088                           ;pwm.c: 64: pwm4_dutyCycle = dutyCycle;
  2089  0127  0872               	movf	pwm4_writeDutyCycle@dutyCycle+1,w
  2090  0128  0020               	movlb	0	; select bank0
  2091  0129  00A1               	movwf	_pwm4_dutyCycle+1	;volatile
  2092  012A  0871               	movf	pwm4_writeDutyCycle@dutyCycle,w
  2093  012B  00A0               	movwf	_pwm4_dutyCycle	;volatile
  2094  012C  0008               	return
  2095  012D                     __end_of_pwm4_writeDutyCycle:	
  2096                           ;pwm.c: 65: return dutyCycle;
  2097                           ;	Return value of _pwm4_writeDutyCycle is never used
  2098                           
  2099                           
  2100                           	psect	text9
  2101  012D                     __ptext9:	
  2102 ;; *************** function _pwm3_writeDutyCycle *****************
  2103 ;; Defined at:
  2104 ;;		line 53 in file "pwm.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;		None
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  2    1[COMMON] unsigned int 
  2111 ;; Registers used:
  2112 ;;		wreg, status,2, status,0
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1
  2118 ;;      Params:         2       0       0
  2119 ;;      Locals:         0       0       0
  2120 ;;      Temps:          2       0       0
  2121 ;;      Totals:         4       0       0
  2122 ;;Total ram usage:        4 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		__init_pwm
  2129 ;;		_incDutyCycle
  2130 ;;		_decDutyCycle
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           
  2135                           ;psect for function _pwm3_writeDutyCycle
  2136  012D                     _pwm3_writeDutyCycle:	
  2137                           
  2138                           ;pwm.c: 55: PWM3DCH = (dutyCycle & 0x03FC)>>2;
  2139                           
  2140                           ;incstack = 0
  2141                           ; Regs used in _pwm3_writeDutyCycle: [wreg+status,2+status,0]
  2142  012D  0872               	movf	pwm3_writeDutyCycle@dutyCycle+1,w
  2143  012E  00F4               	movwf	??_pwm3_writeDutyCycle+1
  2144  012F  0871               	movf	pwm3_writeDutyCycle@dutyCycle,w
  2145  0130  00F3               	movwf	??_pwm3_writeDutyCycle
  2146  0131  36F4               	lsrf	??_pwm3_writeDutyCycle+1,f
  2147  0132  0CF3               	rrf	??_pwm3_writeDutyCycle,f
  2148  0133  36F4               	lsrf	??_pwm3_writeDutyCycle+1,f
  2149  0134  0CF3               	rrf	??_pwm3_writeDutyCycle,f
  2150  0135  0873               	movf	??_pwm3_writeDutyCycle,w
  2151  0136  002C               	movlb	12	; select bank12
  2152  0137  0098               	movwf	24	;volatile
  2153                           
  2154                           ;pwm.c: 56: PWM3DCL = (dutyCycle & 0x0003)<<6;
  2155  0138  0871               	movf	pwm3_writeDutyCycle@dutyCycle,w
  2156  0139  3903               	andlw	3
  2157  013A  00F3               	movwf	??_pwm3_writeDutyCycle
  2158  013B  3005               	movlw	5
  2159  013C                     u255:	
  2160  013C  35F3               	lslf	??_pwm3_writeDutyCycle,f
  2161  013D  3EFF               	addlw	-1
  2162  013E  1D03               	skipz
  2163  013F  293C               	goto	u255
  2164  0140  3573               	lslf	??_pwm3_writeDutyCycle,w
  2165  0141  0097               	movwf	23	;volatile
  2166                           
  2167                           ;pwm.c: 57: pwm3_dutyCycle = dutyCycle;
  2168  0142  0872               	movf	pwm3_writeDutyCycle@dutyCycle+1,w
  2169  0143  0020               	movlb	0	; select bank0
  2170  0144  00A3               	movwf	_pwm3_dutyCycle+1	;volatile
  2171  0145  0871               	movf	pwm3_writeDutyCycle@dutyCycle,w
  2172  0146  00A2               	movwf	_pwm3_dutyCycle	;volatile
  2173  0147  0008               	return
  2174  0148                     __end_of_pwm3_writeDutyCycle:	
  2175                           ;pwm.c: 58: return dutyCycle;
  2176                           ;	Return value of _pwm3_writeDutyCycle is never used
  2177                           
  2178                           
  2179                           	psect	text10
  2180  0148                     __ptext10:	
  2181 ;; *************** function _pwm2_writeDutyCycle *****************
  2182 ;; Defined at:
  2183 ;;		line 46 in file "pwm.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;		None
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  2    1[COMMON] unsigned int 
  2190 ;; Registers used:
  2191 ;;		wreg, status,2, status,0
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMMON   BANK0   BANK1
  2197 ;;      Params:         2       0       0
  2198 ;;      Locals:         0       0       0
  2199 ;;      Temps:          2       0       0
  2200 ;;      Totals:         4       0       0
  2201 ;;Total ram usage:        4 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    1
  2204 ;; This function calls:
  2205 ;;		Nothing
  2206 ;; This function is called by:
  2207 ;;		__init_pwm
  2208 ;;		_incDutyCycle
  2209 ;;		_decDutyCycle
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           
  2214                           ;psect for function _pwm2_writeDutyCycle
  2215  0148                     _pwm2_writeDutyCycle:	
  2216                           
  2217                           ;pwm.c: 48: PWM2DCH = (dutyCycle & 0x03FC)>>2;
  2218                           
  2219                           ;incstack = 0
  2220                           ; Regs used in _pwm2_writeDutyCycle: [wreg+status,2+status,0]
  2221  0148  0872               	movf	pwm2_writeDutyCycle@dutyCycle+1,w
  2222  0149  00F4               	movwf	??_pwm2_writeDutyCycle+1
  2223  014A  0871               	movf	pwm2_writeDutyCycle@dutyCycle,w
  2224  014B  00F3               	movwf	??_pwm2_writeDutyCycle
  2225  014C  36F4               	lsrf	??_pwm2_writeDutyCycle+1,f
  2226  014D  0CF3               	rrf	??_pwm2_writeDutyCycle,f
  2227  014E  36F4               	lsrf	??_pwm2_writeDutyCycle+1,f
  2228  014F  0CF3               	rrf	??_pwm2_writeDutyCycle,f
  2229  0150  0873               	movf	??_pwm2_writeDutyCycle,w
  2230  0151  002C               	movlb	12	; select bank12
  2231  0152  0095               	movwf	21	;volatile
  2232                           
  2233                           ;pwm.c: 49: PWM2DCL = (dutyCycle & 0x0003)<<6;
  2234  0153  0871               	movf	pwm2_writeDutyCycle@dutyCycle,w
  2235  0154  3903               	andlw	3
  2236  0155  00F3               	movwf	??_pwm2_writeDutyCycle
  2237  0156  3005               	movlw	5
  2238  0157                     u245:	
  2239  0157  35F3               	lslf	??_pwm2_writeDutyCycle,f
  2240  0158  3EFF               	addlw	-1
  2241  0159  1D03               	skipz
  2242  015A  2957               	goto	u245
  2243  015B  3573               	lslf	??_pwm2_writeDutyCycle,w
  2244  015C  0094               	movwf	20	;volatile
  2245                           
  2246                           ;pwm.c: 50: pwm2_dutyCycle = dutyCycle;
  2247  015D  0872               	movf	pwm2_writeDutyCycle@dutyCycle+1,w
  2248  015E  0020               	movlb	0	; select bank0
  2249  015F  00A5               	movwf	_pwm2_dutyCycle+1	;volatile
  2250  0160  0871               	movf	pwm2_writeDutyCycle@dutyCycle,w
  2251  0161  00A4               	movwf	_pwm2_dutyCycle	;volatile
  2252  0162  0008               	return
  2253  0163                     __end_of_pwm2_writeDutyCycle:	
  2254                           ;pwm.c: 51: return dutyCycle;
  2255                           ;	Return value of _pwm2_writeDutyCycle is never used
  2256                           
  2257                           
  2258                           	psect	text11
  2259  017D                     __ptext11:	
  2260 ;; *************** function _pwm1_writeDutyCycle *****************
  2261 ;; Defined at:
  2262 ;;		line 39 in file "pwm.c"
  2263 ;; Parameters:    Size  Location     Type
  2264 ;;  dutyCycle       2    1[COMMON] unsigned int 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;		None
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  2    1[COMMON] unsigned int 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1
  2276 ;;      Params:         2       0       0
  2277 ;;      Locals:         0       0       0
  2278 ;;      Temps:          2       0       0
  2279 ;;      Totals:         4       0       0
  2280 ;;Total ram usage:        4 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    1
  2283 ;; This function calls:
  2284 ;;		Nothing
  2285 ;; This function is called by:
  2286 ;;		__init_pwm
  2287 ;;		_incDutyCycle
  2288 ;;		_decDutyCycle
  2289 ;; This function uses a non-reentrant model
  2290 ;;
  2291                           
  2292                           
  2293                           ;psect for function _pwm1_writeDutyCycle
  2294  017D                     _pwm1_writeDutyCycle:	
  2295                           
  2296                           ;pwm.c: 41: PWM1DCH = (dutyCycle & 0x03FC)>>2;
  2297                           
  2298                           ;incstack = 0
  2299                           ; Regs used in _pwm1_writeDutyCycle: [wreg+status,2+status,0]
  2300  017D  0872               	movf	pwm1_writeDutyCycle@dutyCycle+1,w
  2301  017E  00F4               	movwf	??_pwm1_writeDutyCycle+1
  2302  017F  0871               	movf	pwm1_writeDutyCycle@dutyCycle,w
  2303  0180  00F3               	movwf	??_pwm1_writeDutyCycle
  2304  0181  36F4               	lsrf	??_pwm1_writeDutyCycle+1,f
  2305  0182  0CF3               	rrf	??_pwm1_writeDutyCycle,f
  2306  0183  36F4               	lsrf	??_pwm1_writeDutyCycle+1,f
  2307  0184  0CF3               	rrf	??_pwm1_writeDutyCycle,f
  2308  0185  0873               	movf	??_pwm1_writeDutyCycle,w
  2309  0186  002C               	movlb	12	; select bank12
  2310  0187  0092               	movwf	18	;volatile
  2311                           
  2312                           ;pwm.c: 42: PWM1DCL = (dutyCycle & 0x0003)<<6;
  2313  0188  0871               	movf	pwm1_writeDutyCycle@dutyCycle,w
  2314  0189  3903               	andlw	3
  2315  018A  00F3               	movwf	??_pwm1_writeDutyCycle
  2316  018B  3005               	movlw	5
  2317  018C                     u235:	
  2318  018C  35F3               	lslf	??_pwm1_writeDutyCycle,f
  2319  018D  3EFF               	addlw	-1
  2320  018E  1D03               	skipz
  2321  018F  298C               	goto	u235
  2322  0190  3573               	lslf	??_pwm1_writeDutyCycle,w
  2323  0191  0091               	movwf	17	;volatile
  2324                           
  2325                           ;pwm.c: 43: pwm1_dutyCycle = dutyCycle;
  2326  0192  0872               	movf	pwm1_writeDutyCycle@dutyCycle+1,w
  2327  0193  00FA               	movwf	_pwm1_dutyCycle+1	;volatile
  2328  0194  0871               	movf	pwm1_writeDutyCycle@dutyCycle,w
  2329  0195  00F9               	movwf	_pwm1_dutyCycle	;volatile
  2330  0196  0008               	return
  2331  0197                     __end_of_pwm1_writeDutyCycle:	
  2332                           ;pwm.c: 44: return dutyCycle;
  2333                           ;	Return value of _pwm1_writeDutyCycle is never used
  2334                           
  2335                           
  2336                           	psect	text12
  2337  01AE                     __ptext12:	
  2338 ;; *************** function __init_gpio *****************
  2339 ;; Defined at:
  2340 ;;		line 50 in file "user.c"
  2341 ;; Parameters:    Size  Location     Type
  2342 ;;		None
  2343 ;; Auto vars:     Size  Location     Type
  2344 ;;		None
  2345 ;; Return value:  Size  Location     Type
  2346 ;;                  1    wreg      void 
  2347 ;; Registers used:
  2348 ;;		wreg, status,2
  2349 ;; Tracked objects:
  2350 ;;		On entry : 0/0
  2351 ;;		On exit  : 0/0
  2352 ;;		Unchanged: 0/0
  2353 ;; Data sizes:     COMMON   BANK0   BANK1
  2354 ;;      Params:         0       0       0
  2355 ;;      Locals:         0       0       0
  2356 ;;      Temps:          0       0       0
  2357 ;;      Totals:         0       0       0
  2358 ;;Total ram usage:        0 bytes
  2359 ;; Hardware stack levels used:    1
  2360 ;; Hardware stack levels required when called:    1
  2361 ;; This function calls:
  2362 ;;		Nothing
  2363 ;; This function is called by:
  2364 ;;		_InitApp
  2365 ;; This function uses a non-reentrant model
  2366 ;;
  2367                           
  2368                           
  2369                           ;psect for function __init_gpio
  2370  01AE                     __init_gpio:	
  2371                           
  2372                           ;user.c: 52: LATA = 0x00;
  2373                           
  2374                           ;incstack = 0
  2375                           ; Regs used in __init_gpio: [wreg+status,2]
  2376  01AE  0022               	movlb	2	; select bank2
  2377  01AF  018C               	clrf	12	;volatile
  2378                           
  2379                           ;user.c: 53: LATC = 0x00;
  2380  01B0  018E               	clrf	14	;volatile
  2381                           
  2382                           ;user.c: 55: TRISA = 0x33;
  2383  01B1  3033               	movlw	51
  2384  01B2  0021               	movlb	1	; select bank1
  2385  01B3  008C               	movwf	12	;volatile
  2386                           
  2387                           ;user.c: 56: TRISC = 0x15;
  2388  01B4  3015               	movlw	21
  2389  01B5  008E               	movwf	14	;volatile
  2390                           
  2391                           ;user.c: 59: ANSELA = 0x00;
  2392  01B6  0023               	movlb	3	; select bank3
  2393  01B7  018C               	clrf	12	;volatile
  2394                           
  2395                           ;user.c: 60: ANSELC = 0x00;
  2396  01B8  018E               	clrf	14	;volatile
  2397                           
  2398                           ;user.c: 63: WPUA = 0x00;
  2399  01B9  0024               	movlb	4	; select bank4
  2400  01BA  018C               	clrf	12	;volatile
  2401  01BB  0008               	return
  2402  01BC                     __end_of__init_gpio:	
  2403                           
  2404                           	psect	text13
  2405  01C3                     __ptext13:	
  2406 ;; *************** function _ConfigureOscillator *****************
  2407 ;; Defined at:
  2408 ;;		line 17 in file "system.c"
  2409 ;; Parameters:    Size  Location     Type
  2410 ;;		None
  2411 ;; Auto vars:     Size  Location     Type
  2412 ;;		None
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  1    wreg      void 
  2415 ;; Registers used:
  2416 ;;		wreg, status,2
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1
  2422 ;;      Params:         0       0       0
  2423 ;;      Locals:         0       0       0
  2424 ;;      Temps:          0       0       0
  2425 ;;      Totals:         0       0       0
  2426 ;;Total ram usage:        0 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    1
  2429 ;; This function calls:
  2430 ;;		Nothing
  2431 ;; This function is called by:
  2432 ;;		_main
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           
  2437                           ;psect for function _ConfigureOscillator
  2438  01C3                     _ConfigureOscillator:	
  2439                           
  2440                           ;system.c: 20: OSCCON = 0x3B;
  2441                           
  2442                           ;incstack = 0
  2443                           ; Regs used in _ConfigureOscillator: [wreg+status,2]
  2444  01C3  303B               	movlw	59
  2445  01C4  0021               	movlb	1	; select bank1
  2446  01C5  0099               	movwf	25	;volatile
  2447                           
  2448                           ;system.c: 23: WDTCON = 0x00;
  2449  01C6  0197               	clrf	23	;volatile
  2450  01C7  0008               	return
  2451  01C8                     __end_of_ConfigureOscillator:	
  2452                           
  2453                           	psect	intentry
  2454  0004                     __pintentry:	
  2455 ;; *************** function _isr *****************
  2456 ;; Defined at:
  2457 ;;		line 24 in file "interrupts.c"
  2458 ;; Parameters:    Size  Location     Type
  2459 ;;		None
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;		None
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  1    wreg      void 
  2464 ;; Registers used:
  2465 ;;		None
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1
  2471 ;;      Params:         0       0       0
  2472 ;;      Locals:         0       0       0
  2473 ;;      Temps:          1       0       0
  2474 ;;      Totals:         1       0       0
  2475 ;;Total ram usage:        1 bytes
  2476 ;; Hardware stack levels used:    1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		Interrupt level 1
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484  0004                     _isr:	
  2485                           
  2486                           ;incstack = 0
  2487  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2488                           
  2489                           ; Regs used in _isr: []
  2490  0005  3180               	pagesel	$
  2491  0006  0020               	movlb	0	; select bank0
  2492  0007  087F               	movf	127,w
  2493  0008  00F0               	movwf	??_isr
  2494  0009  0870               	movf	??_isr,w
  2495  000A  00FF               	movwf	127
  2496  000B  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2497  000C  0009               	retfie
  2498  000D                     __end_of_isr:	
  2499  007E                     btemp	set	126	;btemp
  2500  007E                     int$flags	set	126
  2501  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         0
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      0       6
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_decDutyCycle
    _main->_incDutyCycle
    _incDutyCycle->_checkDCBounds
    _decDutyCycle->_checkDCBounds
    __init_pwm->_pwm1_writeDutyCycle
    __init_pwm->_pwm2_writeDutyCycle
    __init_pwm->_pwm3_writeDutyCycle
    __init_pwm->_pwm4_writeDutyCycle

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4198
                _ConfigureOscillator
                            _InitApp
                       _decDutyCycle
                          _getPWMSEL
                       _incDutyCycle
 ---------------------------------------------------------------------------------
 (1) _incDutyCycle                                         3     3      0    1697
                                              6 COMMON     3     3      0
                      _checkDCBounds
                _pwm1_writeDutyCycle
                _pwm2_writeDutyCycle
                _pwm3_writeDutyCycle
                _pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (1) _getPWMSEL                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _decDutyCycle                                         3     3      0    1697
                                              6 COMMON     3     3      0
                      _checkDCBounds
                _pwm1_writeDutyCycle
                _pwm2_writeDutyCycle
                _pwm3_writeDutyCycle
                _pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (2) _checkDCBounds                                        5     2      3     779
                                              1 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0     804
                         __init_gpio
                          __init_pwm
                       __init_timer2
 ---------------------------------------------------------------------------------
 (2) __init_timer2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __init_pwm                                            0     0      0     804
                _pwm1_writeDutyCycle
                _pwm2_writeDutyCycle
                _pwm3_writeDutyCycle
                _pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (2) _pwm4_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _pwm3_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _pwm2_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _pwm1_writeDutyCycle                                  4     2      2     201
                                              1 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) __init_gpio                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     __init_gpio
     __init_pwm
       _pwm1_writeDutyCycle
       _pwm2_writeDutyCycle
       _pwm3_writeDutyCycle
       _pwm4_writeDutyCycle
     __init_timer2
   _decDutyCycle
     _checkDCBounds
     _pwm1_writeDutyCycle
     _pwm2_writeDutyCycle
     _pwm3_writeDutyCycle
     _pwm4_writeDutyCycle
   _getPWMSEL
   _incDutyCycle
     _checkDCBounds
     _pwm1_writeDutyCycle
     _pwm2_writeDutyCycle
     _pwm3_writeDutyCycle
     _pwm4_writeDutyCycle

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      13       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      0       6       6        7.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      13       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Thu Nov 02 22:17:00 2017

                 __CFG_CP$OFF 0000                            l30 00FE                            l29 00FA  
                 __CFG_LVP$ON 0000                           l152 0074                           l162 00D0  
                         l170 01A7                           l165 019D                           l168 01A2  
                         l801 00F5                           l815 0107                           l657 01AC  
                         l763 0176                           l765 0178                           l773 0077  
                         l775 0089                           l783 00C2                           l791 003E  
                         l777 009C                           l793 0052                           l779 00AF  
                         l787 0017                           l789 002A                           l797 0066  
                         u235 018C                           u245 0157                           _PR2 001B  
                         u255 013C                           u265 0121                           _isr 0004  
        __end_of__init_timer2 01C3                  __CFG_BORV$LO 0000                          ?_isr 0070  
                        _LATA 010C                          _LATC 010E                          _TMR2 001A  
                        _WPUA 020C  pwm1_writeDutyCycle@dutyCycle 0071                  __CFG_WRT$OFF 0000  
              ??_incDutyCycle 0076                          _main 00F3                          btemp 007E  
               __CFG_BOREN$ON 0000                          start 000D         ??_pwm3_writeDutyCycle 0073  
               __CFG_MCLRE$ON 0000               __end_of_InitApp 01CC                         ??_isr 0070  
       __size_of_decDutyCycle 005C                         ?_main 0070                 __CFG_WDTE$OFF 0000  
                       _T2CON 001C                         _TRISA 008C                         _TRISC 008E  
         _ConfigureOscillator 01C3  pwm4_writeDutyCycle@dutyCycle 0071                         status 0003  
                       wtemp0 007E          ?_ConfigureOscillator 0070               __initialization 000E  
                _decDutyCycle 0075                  __end_of_main 0112                __CFG_LPBOR$OFF 0000  
                      ??_main 0079                 main@commandDN 007B                 main@commandUP 007C  
                      _ANSELA 018C                        _ANSELC 018E                _pwm1_dutyCycle 0079  
                      _OSCCON 0099                        _WDTCON 0097  __size_of_pwm2_writeDutyCycle 001B  
                   ??_InitApp 0075         ??_ConfigureOscillator 0071                __CFG_PWRTE$OFF 0000  
              _pwm2_dutyCycle 0024                __CFG_STVREN$ON 0000         __size_of__init_timer2 0007  
              _pwm3_dutyCycle 0022          __end_of_incDutyCycle 0075                  __pdataCOMMON 007B  
              _pwm4_dutyCycle 0020           checkDCBounds@retval 0074       __end_of__initialization 0012  
                __init_timer2 01BC               checkDCBounds@dc 0071                __pcstackCOMMON 0070  
__size_of_pwm4_writeDutyCycle 001B            __size_of__init_pwm 0022            __size_of_getPWMSEL 0017  
 __end_of_pwm1_writeDutyCycle 0197         incDutyCycle@dutyCycle 0077        __size_of_checkDCBounds 001A  
                  __init_gpio 01AE                    __pnvCOMMON 0079                    __pmaintext 00F3  
                  __pintentry 0004                       _PWM1DCH 0612                       _PWM1DCL 0611  
                     _PWM2DCH 0615                       _PWM2DCL 0614                       _PWM3DCH 0618  
                     _PWM3DCL 0617                       _PWM4DCH 061B                       _PWM1CON 0613  
                     _PWM4DCL 061A                       _PWM2CON 0616                       _PWM3CON 0619  
                     _PWM4CON 061C             __end_of__init_pwm 00F3   __end_of_pwm3_writeDutyCycle 0148  
           __end_of_getPWMSEL 01AE                       _InitApp 01C8                 _checkDCBounds 0163  
       __size_of_incDutyCycle 0060  pwm3_writeDutyCycle@dutyCycle 0071                       __ptext1 0015  
                     __ptext2 0197                       __ptext3 0075                       __ptext4 0163  
                     __ptext5 01C8                       __ptext6 01BC                       __ptext7 00D1  
                     __ptext8 0112                       __ptext9 012D           _pwm2_writeDutyCycle 0148  
                   _T2CONbits 001C                  __size_of_isr 0009          end_of_initialization 0012  
                 ?__init_gpio 0070          ?_pwm2_writeDutyCycle 0071                  _incDutyCycle 0015  
              ?_checkDCBounds 0071              decDutyCycle@chan 0076                     _PORTAbits 000C  
                   _PORTCbits 000E              __CFG_FOSC$INTOSC 0000           _pwm4_writeDutyCycle 0112  
 __end_of_ConfigureOscillator 01C8         ??_pwm2_writeDutyCycle 0073          ?_pwm4_writeDutyCycle 0071  
               __pidataCOMMON 01CC           __size_of__init_gpio 000E           start_initialization 000E  
                 __end_of_isr 000D               ??_checkDCBounds 0074         ??_pwm4_writeDutyCycle 0073  
                   ___latbits 0000  __size_of_pwm1_writeDutyCycle 001A                      ?_InitApp 0070  
                   __pnvBANK0 0020                     __init_pwm 00D1                     _getPWMSEL 0197  
               ?_decDutyCycle 0070                  ??__init_gpio 0071                    ?__init_pwm 0070  
                  ?_getPWMSEL 0070                ??_decDutyCycle 0076  pwm2_writeDutyCycle@dutyCycle 0071  
__size_of_pwm3_writeDutyCycle 001B            __end_of__init_gpio 01BC              incDutyCycle@chan 0076  
               ?__init_timer2 0070              __size_of_InitApp 0004                      __ptext10 0148  
                    __ptext11 017D                      __ptext12 01AE                      __ptext13 01C3  
 __end_of_pwm2_writeDutyCycle 0163        checkDCBounds@direction 0073                 __size_of_main 001F  
                 ??__init_pwm 0075                ??__init_timer2 0071  __size_of_ConfigureOscillator 0005  
                 ??_getPWMSEL 0071                      int$flags 007E           _pwm1_writeDutyCycle 017D  
        __end_of_decDutyCycle 00D1                      intlevel1 0000          ?_pwm1_writeDutyCycle 0071  
 __end_of_pwm4_writeDutyCycle 012D             __CFG_CLKOUTEN$OFF 0000         __end_of_checkDCBounds 017D  
       decDutyCycle@dutyCycle 0077           _pwm3_writeDutyCycle 012D         ??_pwm1_writeDutyCycle 0073  
               ?_incDutyCycle 0070          ?_pwm3_writeDutyCycle 0071  
