

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Thu Nov 02 18:57:51 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	16F1503
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.44
    30                           ; Generated 14/09/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F1503 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000E                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  008C                     	;# 
    90  008E                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0095                     	;# 
    95  0096                     	;# 
    96  0097                     	;# 
    97  0099                     	;# 
    98  009A                     	;# 
    99  009B                     	;# 
   100  009B                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010E                     	;# 
   107  0111                     	;# 
   108  0112                     	;# 
   109  0113                     	;# 
   110  0114                     	;# 
   111  0115                     	;# 
   112  0116                     	;# 
   113  0117                     	;# 
   114  0118                     	;# 
   115  0119                     	;# 
   116  011D                     	;# 
   117  018C                     	;# 
   118  018E                     	;# 
   119  0191                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0193                     	;# 
   123  0193                     	;# 
   124  0194                     	;# 
   125  0195                     	;# 
   126  0196                     	;# 
   127  0197                     	;# 
   128  020C                     	;# 
   129  0211                     	;# 
   130  0211                     	;# 
   131  0212                     	;# 
   132  0212                     	;# 
   133  0213                     	;# 
   134  0213                     	;# 
   135  0214                     	;# 
   136  0214                     	;# 
   137  0215                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0216                     	;# 
   141  0216                     	;# 
   142  0217                     	;# 
   143  0217                     	;# 
   144  0391                     	;# 
   145  0392                     	;# 
   146  0393                     	;# 
   147  0498                     	;# 
   148  0498                     	;# 
   149  0499                     	;# 
   150  049A                     	;# 
   151  049B                     	;# 
   152  049B                     	;# 
   153  049C                     	;# 
   154  049D                     	;# 
   155  049E                     	;# 
   156  049F                     	;# 
   157  0611                     	;# 
   158  0612                     	;# 
   159  0613                     	;# 
   160  0613                     	;# 
   161  0614                     	;# 
   162  0615                     	;# 
   163  0616                     	;# 
   164  0616                     	;# 
   165  0617                     	;# 
   166  0618                     	;# 
   167  0619                     	;# 
   168  0619                     	;# 
   169  061A                     	;# 
   170  061B                     	;# 
   171  061C                     	;# 
   172  061C                     	;# 
   173  0691                     	;# 
   174  0692                     	;# 
   175  0693                     	;# 
   176  0694                     	;# 
   177  0695                     	;# 
   178  0F0F                     	;# 
   179  0F10                     	;# 
   180  0F11                     	;# 
   181  0F12                     	;# 
   182  0F13                     	;# 
   183  0F14                     	;# 
   184  0F15                     	;# 
   185  0F16                     	;# 
   186  0F17                     	;# 
   187  0F18                     	;# 
   188  0F19                     	;# 
   189  0F1A                     	;# 
   190  0F1B                     	;# 
   191  0F1C                     	;# 
   192  0F1D                     	;# 
   193  0F1E                     	;# 
   194  0F1F                     	;# 
   195  0FE3                     	;# 
   196  0FE4                     	;# 
   197  0FE5                     	;# 
   198  0FE6                     	;# 
   199  0FE7                     	;# 
   200  0FE8                     	;# 
   201  0FE9                     	;# 
   202  0FEA                     	;# 
   203  0FEB                     	;# 
   204  0FED                     	;# 
   205  0FEE                     	;# 
   206  0FEF                     	;# 
   207  0000                     	;# 
   208  0001                     	;# 
   209  0002                     	;# 
   210  0003                     	;# 
   211  0004                     	;# 
   212  0005                     	;# 
   213  0006                     	;# 
   214  0007                     	;# 
   215  0008                     	;# 
   216  0009                     	;# 
   217  000A                     	;# 
   218  000B                     	;# 
   219  000C                     	;# 
   220  000E                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0016                     	;# 
   227  0017                     	;# 
   228  0018                     	;# 
   229  0019                     	;# 
   230  001A                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  008C                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0095                     	;# 
   239  0096                     	;# 
   240  0097                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009B                     	;# 
   245  009C                     	;# 
   246  009D                     	;# 
   247  009E                     	;# 
   248  009F                     	;# 
   249  010C                     	;# 
   250  010E                     	;# 
   251  0111                     	;# 
   252  0112                     	;# 
   253  0113                     	;# 
   254  0114                     	;# 
   255  0115                     	;# 
   256  0116                     	;# 
   257  0117                     	;# 
   258  0118                     	;# 
   259  0119                     	;# 
   260  011D                     	;# 
   261  018C                     	;# 
   262  018E                     	;# 
   263  0191                     	;# 
   264  0191                     	;# 
   265  0192                     	;# 
   266  0193                     	;# 
   267  0193                     	;# 
   268  0194                     	;# 
   269  0195                     	;# 
   270  0196                     	;# 
   271  0197                     	;# 
   272  020C                     	;# 
   273  0211                     	;# 
   274  0211                     	;# 
   275  0212                     	;# 
   276  0212                     	;# 
   277  0213                     	;# 
   278  0213                     	;# 
   279  0214                     	;# 
   280  0214                     	;# 
   281  0215                     	;# 
   282  0215                     	;# 
   283  0215                     	;# 
   284  0216                     	;# 
   285  0216                     	;# 
   286  0217                     	;# 
   287  0217                     	;# 
   288  0391                     	;# 
   289  0392                     	;# 
   290  0393                     	;# 
   291  0498                     	;# 
   292  0498                     	;# 
   293  0499                     	;# 
   294  049A                     	;# 
   295  049B                     	;# 
   296  049B                     	;# 
   297  049C                     	;# 
   298  049D                     	;# 
   299  049E                     	;# 
   300  049F                     	;# 
   301  0611                     	;# 
   302  0612                     	;# 
   303  0613                     	;# 
   304  0613                     	;# 
   305  0614                     	;# 
   306  0615                     	;# 
   307  0616                     	;# 
   308  0616                     	;# 
   309  0617                     	;# 
   310  0618                     	;# 
   311  0619                     	;# 
   312  0619                     	;# 
   313  061A                     	;# 
   314  061B                     	;# 
   315  061C                     	;# 
   316  061C                     	;# 
   317  0691                     	;# 
   318  0692                     	;# 
   319  0693                     	;# 
   320  0694                     	;# 
   321  0695                     	;# 
   322  0F0F                     	;# 
   323  0F10                     	;# 
   324  0F11                     	;# 
   325  0F12                     	;# 
   326  0F13                     	;# 
   327  0F14                     	;# 
   328  0F15                     	;# 
   329  0F16                     	;# 
   330  0F17                     	;# 
   331  0F18                     	;# 
   332  0F19                     	;# 
   333  0F1A                     	;# 
   334  0F1B                     	;# 
   335  0F1C                     	;# 
   336  0F1D                     	;# 
   337  0F1E                     	;# 
   338  0F1F                     	;# 
   339  0FE3                     	;# 
   340  0FE4                     	;# 
   341  0FE5                     	;# 
   342  0FE6                     	;# 
   343  0FE7                     	;# 
   344  0FE8                     	;# 
   345  0FE9                     	;# 
   346  0FEA                     	;# 
   347  0FEB                     	;# 
   348  0FED                     	;# 
   349  0FEE                     	;# 
   350  0FEF                     	;# 
   351  0000                     	;# 
   352  0001                     	;# 
   353  0002                     	;# 
   354  0003                     	;# 
   355  0004                     	;# 
   356  0005                     	;# 
   357  0006                     	;# 
   358  0007                     	;# 
   359  0008                     	;# 
   360  0009                     	;# 
   361  000A                     	;# 
   362  000B                     	;# 
   363  000C                     	;# 
   364  000E                     	;# 
   365  0011                     	;# 
   366  0012                     	;# 
   367  0013                     	;# 
   368  0015                     	;# 
   369  0016                     	;# 
   370  0016                     	;# 
   371  0017                     	;# 
   372  0018                     	;# 
   373  0019                     	;# 
   374  001A                     	;# 
   375  001B                     	;# 
   376  001C                     	;# 
   377  008C                     	;# 
   378  008E                     	;# 
   379  0091                     	;# 
   380  0092                     	;# 
   381  0093                     	;# 
   382  0095                     	;# 
   383  0096                     	;# 
   384  0097                     	;# 
   385  0099                     	;# 
   386  009A                     	;# 
   387  009B                     	;# 
   388  009B                     	;# 
   389  009C                     	;# 
   390  009D                     	;# 
   391  009E                     	;# 
   392  009F                     	;# 
   393  010C                     	;# 
   394  010E                     	;# 
   395  0111                     	;# 
   396  0112                     	;# 
   397  0113                     	;# 
   398  0114                     	;# 
   399  0115                     	;# 
   400  0116                     	;# 
   401  0117                     	;# 
   402  0118                     	;# 
   403  0119                     	;# 
   404  011D                     	;# 
   405  018C                     	;# 
   406  018E                     	;# 
   407  0191                     	;# 
   408  0191                     	;# 
   409  0192                     	;# 
   410  0193                     	;# 
   411  0193                     	;# 
   412  0194                     	;# 
   413  0195                     	;# 
   414  0196                     	;# 
   415  0197                     	;# 
   416  020C                     	;# 
   417  0211                     	;# 
   418  0211                     	;# 
   419  0212                     	;# 
   420  0212                     	;# 
   421  0213                     	;# 
   422  0213                     	;# 
   423  0214                     	;# 
   424  0214                     	;# 
   425  0215                     	;# 
   426  0215                     	;# 
   427  0215                     	;# 
   428  0216                     	;# 
   429  0216                     	;# 
   430  0217                     	;# 
   431  0217                     	;# 
   432  0391                     	;# 
   433  0392                     	;# 
   434  0393                     	;# 
   435  0498                     	;# 
   436  0498                     	;# 
   437  0499                     	;# 
   438  049A                     	;# 
   439  049B                     	;# 
   440  049B                     	;# 
   441  049C                     	;# 
   442  049D                     	;# 
   443  049E                     	;# 
   444  049F                     	;# 
   445  0611                     	;# 
   446  0612                     	;# 
   447  0613                     	;# 
   448  0613                     	;# 
   449  0614                     	;# 
   450  0615                     	;# 
   451  0616                     	;# 
   452  0616                     	;# 
   453  0617                     	;# 
   454  0618                     	;# 
   455  0619                     	;# 
   456  0619                     	;# 
   457  061A                     	;# 
   458  061B                     	;# 
   459  061C                     	;# 
   460  061C                     	;# 
   461  0691                     	;# 
   462  0692                     	;# 
   463  0693                     	;# 
   464  0694                     	;# 
   465  0695                     	;# 
   466  0F0F                     	;# 
   467  0F10                     	;# 
   468  0F11                     	;# 
   469  0F12                     	;# 
   470  0F13                     	;# 
   471  0F14                     	;# 
   472  0F15                     	;# 
   473  0F16                     	;# 
   474  0F17                     	;# 
   475  0F18                     	;# 
   476  0F19                     	;# 
   477  0F1A                     	;# 
   478  0F1B                     	;# 
   479  0F1C                     	;# 
   480  0F1D                     	;# 
   481  0F1E                     	;# 
   482  0F1F                     	;# 
   483  0FE3                     	;# 
   484  0FE4                     	;# 
   485  0FE5                     	;# 
   486  0FE6                     	;# 
   487  0FE7                     	;# 
   488  0FE8                     	;# 
   489  0FE9                     	;# 
   490  0FEA                     	;# 
   491  0FEB                     	;# 
   492  0FED                     	;# 
   493  0FEE                     	;# 
   494  0FEF                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0008                     	;# 
   504  0009                     	;# 
   505  000A                     	;# 
   506  000B                     	;# 
   507  000C                     	;# 
   508  000E                     	;# 
   509  0011                     	;# 
   510  0012                     	;# 
   511  0013                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0016                     	;# 
   515  0017                     	;# 
   516  0018                     	;# 
   517  0019                     	;# 
   518  001A                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  008C                     	;# 
   522  008E                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0095                     	;# 
   527  0096                     	;# 
   528  0097                     	;# 
   529  0099                     	;# 
   530  009A                     	;# 
   531  009B                     	;# 
   532  009B                     	;# 
   533  009C                     	;# 
   534  009D                     	;# 
   535  009E                     	;# 
   536  009F                     	;# 
   537  010C                     	;# 
   538  010E                     	;# 
   539  0111                     	;# 
   540  0112                     	;# 
   541  0113                     	;# 
   542  0114                     	;# 
   543  0115                     	;# 
   544  0116                     	;# 
   545  0117                     	;# 
   546  0118                     	;# 
   547  0119                     	;# 
   548  011D                     	;# 
   549  018C                     	;# 
   550  018E                     	;# 
   551  0191                     	;# 
   552  0191                     	;# 
   553  0192                     	;# 
   554  0193                     	;# 
   555  0193                     	;# 
   556  0194                     	;# 
   557  0195                     	;# 
   558  0196                     	;# 
   559  0197                     	;# 
   560  020C                     	;# 
   561  0211                     	;# 
   562  0211                     	;# 
   563  0212                     	;# 
   564  0212                     	;# 
   565  0213                     	;# 
   566  0213                     	;# 
   567  0214                     	;# 
   568  0214                     	;# 
   569  0215                     	;# 
   570  0215                     	;# 
   571  0215                     	;# 
   572  0216                     	;# 
   573  0216                     	;# 
   574  0217                     	;# 
   575  0217                     	;# 
   576  0391                     	;# 
   577  0392                     	;# 
   578  0393                     	;# 
   579  0498                     	;# 
   580  0498                     	;# 
   581  0499                     	;# 
   582  049A                     	;# 
   583  049B                     	;# 
   584  049B                     	;# 
   585  049C                     	;# 
   586  049D                     	;# 
   587  049E                     	;# 
   588  049F                     	;# 
   589  0611                     	;# 
   590  0612                     	;# 
   591  0613                     	;# 
   592  0613                     	;# 
   593  0614                     	;# 
   594  0615                     	;# 
   595  0616                     	;# 
   596  0616                     	;# 
   597  0617                     	;# 
   598  0618                     	;# 
   599  0619                     	;# 
   600  0619                     	;# 
   601  061A                     	;# 
   602  061B                     	;# 
   603  061C                     	;# 
   604  061C                     	;# 
   605  0691                     	;# 
   606  0692                     	;# 
   607  0693                     	;# 
   608  0694                     	;# 
   609  0695                     	;# 
   610  0F0F                     	;# 
   611  0F10                     	;# 
   612  0F11                     	;# 
   613  0F12                     	;# 
   614  0F13                     	;# 
   615  0F14                     	;# 
   616  0F15                     	;# 
   617  0F16                     	;# 
   618  0F17                     	;# 
   619  0F18                     	;# 
   620  0F19                     	;# 
   621  0F1A                     	;# 
   622  0F1B                     	;# 
   623  0F1C                     	;# 
   624  0F1D                     	;# 
   625  0F1E                     	;# 
   626  0F1F                     	;# 
   627  0FE3                     	;# 
   628  0FE4                     	;# 
   629  0FE5                     	;# 
   630  0FE6                     	;# 
   631  0FE7                     	;# 
   632  0FE8                     	;# 
   633  0FE9                     	;# 
   634  0FEA                     	;# 
   635  0FEB                     	;# 
   636  0FED                     	;# 
   637  0FEE                     	;# 
   638  0FEF                     	;# 
   639  0000                     	;# 
   640  0001                     	;# 
   641  0002                     	;# 
   642  0003                     	;# 
   643  0004                     	;# 
   644  0005                     	;# 
   645  0006                     	;# 
   646  0007                     	;# 
   647  0008                     	;# 
   648  0009                     	;# 
   649  000A                     	;# 
   650  000B                     	;# 
   651  000C                     	;# 
   652  000E                     	;# 
   653  0011                     	;# 
   654  0012                     	;# 
   655  0013                     	;# 
   656  0015                     	;# 
   657  0016                     	;# 
   658  0016                     	;# 
   659  0017                     	;# 
   660  0018                     	;# 
   661  0019                     	;# 
   662  001A                     	;# 
   663  001B                     	;# 
   664  001C                     	;# 
   665  008C                     	;# 
   666  008E                     	;# 
   667  0091                     	;# 
   668  0092                     	;# 
   669  0093                     	;# 
   670  0095                     	;# 
   671  0096                     	;# 
   672  0097                     	;# 
   673  0099                     	;# 
   674  009A                     	;# 
   675  009B                     	;# 
   676  009B                     	;# 
   677  009C                     	;# 
   678  009D                     	;# 
   679  009E                     	;# 
   680  009F                     	;# 
   681  010C                     	;# 
   682  010E                     	;# 
   683  0111                     	;# 
   684  0112                     	;# 
   685  0113                     	;# 
   686  0114                     	;# 
   687  0115                     	;# 
   688  0116                     	;# 
   689  0117                     	;# 
   690  0118                     	;# 
   691  0119                     	;# 
   692  011D                     	;# 
   693  018C                     	;# 
   694  018E                     	;# 
   695  0191                     	;# 
   696  0191                     	;# 
   697  0192                     	;# 
   698  0193                     	;# 
   699  0193                     	;# 
   700  0194                     	;# 
   701  0195                     	;# 
   702  0196                     	;# 
   703  0197                     	;# 
   704  020C                     	;# 
   705  0211                     	;# 
   706  0211                     	;# 
   707  0212                     	;# 
   708  0212                     	;# 
   709  0213                     	;# 
   710  0213                     	;# 
   711  0214                     	;# 
   712  0214                     	;# 
   713  0215                     	;# 
   714  0215                     	;# 
   715  0215                     	;# 
   716  0216                     	;# 
   717  0216                     	;# 
   718  0217                     	;# 
   719  0217                     	;# 
   720  0391                     	;# 
   721  0392                     	;# 
   722  0393                     	;# 
   723  0498                     	;# 
   724  0498                     	;# 
   725  0499                     	;# 
   726  049A                     	;# 
   727  049B                     	;# 
   728  049B                     	;# 
   729  049C                     	;# 
   730  049D                     	;# 
   731  049E                     	;# 
   732  049F                     	;# 
   733  0611                     	;# 
   734  0612                     	;# 
   735  0613                     	;# 
   736  0613                     	;# 
   737  0614                     	;# 
   738  0615                     	;# 
   739  0616                     	;# 
   740  0616                     	;# 
   741  0617                     	;# 
   742  0618                     	;# 
   743  0619                     	;# 
   744  0619                     	;# 
   745  061A                     	;# 
   746  061B                     	;# 
   747  061C                     	;# 
   748  061C                     	;# 
   749  0691                     	;# 
   750  0692                     	;# 
   751  0693                     	;# 
   752  0694                     	;# 
   753  0695                     	;# 
   754  0F0F                     	;# 
   755  0F10                     	;# 
   756  0F11                     	;# 
   757  0F12                     	;# 
   758  0F13                     	;# 
   759  0F14                     	;# 
   760  0F15                     	;# 
   761  0F16                     	;# 
   762  0F17                     	;# 
   763  0F18                     	;# 
   764  0F19                     	;# 
   765  0F1A                     	;# 
   766  0F1B                     	;# 
   767  0F1C                     	;# 
   768  0F1D                     	;# 
   769  0F1E                     	;# 
   770  0F1F                     	;# 
   771  0FE3                     	;# 
   772  0FE4                     	;# 
   773  0FE5                     	;# 
   774  0FE6                     	;# 
   775  0FE7                     	;# 
   776  0FE8                     	;# 
   777  0FE9                     	;# 
   778  0FEA                     	;# 
   779  0FEB                     	;# 
   780  0FED                     	;# 
   781  0FEE                     	;# 
   782  0FEF                     	;# 
   783  0000                     	;# 
   784  0001                     	;# 
   785  0002                     	;# 
   786  0003                     	;# 
   787  0004                     	;# 
   788  0005                     	;# 
   789  0006                     	;# 
   790  0007                     	;# 
   791  0008                     	;# 
   792  0009                     	;# 
   793  000A                     	;# 
   794  000B                     	;# 
   795  000C                     	;# 
   796  000E                     	;# 
   797  0011                     	;# 
   798  0012                     	;# 
   799  0013                     	;# 
   800  0015                     	;# 
   801  0016                     	;# 
   802  0016                     	;# 
   803  0017                     	;# 
   804  0018                     	;# 
   805  0019                     	;# 
   806  001A                     	;# 
   807  001B                     	;# 
   808  001C                     	;# 
   809  008C                     	;# 
   810  008E                     	;# 
   811  0091                     	;# 
   812  0092                     	;# 
   813  0093                     	;# 
   814  0095                     	;# 
   815  0096                     	;# 
   816  0097                     	;# 
   817  0099                     	;# 
   818  009A                     	;# 
   819  009B                     	;# 
   820  009B                     	;# 
   821  009C                     	;# 
   822  009D                     	;# 
   823  009E                     	;# 
   824  009F                     	;# 
   825  010C                     	;# 
   826  010E                     	;# 
   827  0111                     	;# 
   828  0112                     	;# 
   829  0113                     	;# 
   830  0114                     	;# 
   831  0115                     	;# 
   832  0116                     	;# 
   833  0117                     	;# 
   834  0118                     	;# 
   835  0119                     	;# 
   836  011D                     	;# 
   837  018C                     	;# 
   838  018E                     	;# 
   839  0191                     	;# 
   840  0191                     	;# 
   841  0192                     	;# 
   842  0193                     	;# 
   843  0193                     	;# 
   844  0194                     	;# 
   845  0195                     	;# 
   846  0196                     	;# 
   847  0197                     	;# 
   848  020C                     	;# 
   849  0211                     	;# 
   850  0211                     	;# 
   851  0212                     	;# 
   852  0212                     	;# 
   853  0213                     	;# 
   854  0213                     	;# 
   855  0214                     	;# 
   856  0214                     	;# 
   857  0215                     	;# 
   858  0215                     	;# 
   859  0215                     	;# 
   860  0216                     	;# 
   861  0216                     	;# 
   862  0217                     	;# 
   863  0217                     	;# 
   864  0391                     	;# 
   865  0392                     	;# 
   866  0393                     	;# 
   867  0498                     	;# 
   868  0498                     	;# 
   869  0499                     	;# 
   870  049A                     	;# 
   871  049B                     	;# 
   872  049B                     	;# 
   873  049C                     	;# 
   874  049D                     	;# 
   875  049E                     	;# 
   876  049F                     	;# 
   877  0611                     	;# 
   878  0612                     	;# 
   879  0613                     	;# 
   880  0613                     	;# 
   881  0614                     	;# 
   882  0615                     	;# 
   883  0616                     	;# 
   884  0616                     	;# 
   885  0617                     	;# 
   886  0618                     	;# 
   887  0619                     	;# 
   888  0619                     	;# 
   889  061A                     	;# 
   890  061B                     	;# 
   891  061C                     	;# 
   892  061C                     	;# 
   893  0691                     	;# 
   894  0692                     	;# 
   895  0693                     	;# 
   896  0694                     	;# 
   897  0695                     	;# 
   898  0F0F                     	;# 
   899  0F10                     	;# 
   900  0F11                     	;# 
   901  0F12                     	;# 
   902  0F13                     	;# 
   903  0F14                     	;# 
   904  0F15                     	;# 
   905  0F16                     	;# 
   906  0F17                     	;# 
   907  0F18                     	;# 
   908  0F19                     	;# 
   909  0F1A                     	;# 
   910  0F1B                     	;# 
   911  0F1C                     	;# 
   912  0F1D                     	;# 
   913  0F1E                     	;# 
   914  0F1F                     	;# 
   915  0FE3                     	;# 
   916  0FE4                     	;# 
   917  0FE5                     	;# 
   918  0FE6                     	;# 
   919  0FE7                     	;# 
   920  0FE8                     	;# 
   921  0FE9                     	;# 
   922  0FEA                     	;# 
   923  0FEB                     	;# 
   924  0FED                     	;# 
   925  0FEE                     	;# 
   926  0FEF                     	;# 
   927                           
   928                           	psect	nvCOMMON
   929  0079                     __pnvCOMMON:	
   930  0079                     _pwm2_dutyCycle:	
   931  0079                     	ds	2
   932  007B                     _pwm1_dutyCycle:	
   933  007B                     	ds	2
   934                           
   935                           	psect	nvBANK0
   936  0020                     __pnvBANK0:	
   937  0020                     _pwm4_dutyCycle:	
   938  0020                     	ds	2
   939  0022                     _pwm3_dutyCycle:	
   940  0022                     	ds	2
   941  000B                     _INTCONbits	set	11
   942  001C                     _T2CONbits	set	28
   943  001A                     _TMR2	set	26
   944  001B                     _PR2	set	27
   945  001C                     _T2CON	set	28
   946  000E                     _PORTCbits	set	14
   947  008E                     _TRISC	set	142
   948  008C                     _TRISA	set	140
   949  0097                     _WDTCON	set	151
   950  0099                     _OSCCON	set	153
   951  010E                     _LATC	set	270
   952  010C                     _LATA	set	268
   953  018E                     _ANSELC	set	398
   954  018C                     _ANSELA	set	396
   955  020C                     _WPUA	set	524
   956  0393                     _IOCAF	set	915
   957  0391                     _IOCAP	set	913
   958  0393                     _IOCAFbits	set	915
   959  061A                     _PWM4DCL	set	1562
   960  061B                     _PWM4DCH	set	1563
   961  0617                     _PWM3DCL	set	1559
   962  0618                     _PWM3DCH	set	1560
   963  0614                     _PWM2DCL	set	1556
   964  0615                     _PWM2DCH	set	1557
   965  0611                     _PWM1DCL	set	1553
   966  0612                     _PWM1DCH	set	1554
   967  061C                     _PWM4CON	set	1564
   968  0619                     _PWM3CON	set	1561
   969  0616                     _PWM2CON	set	1558
   970  0613                     _PWM1CON	set	1555
   971                           
   972                           ; #config settings
   973  0000                     
   974                           	psect	cinit
   975  0042                     start_initialization:	
   976  0042                     __initialization:	
   977  0042                     end_of_initialization:	
   978                           ;End of C runtime variable initialization code
   979                           
   980  0042                     __end_of__initialization:	
   981  0042  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   982  0043  0020               	movlb	0
   983  0044  2A44               	ljmp	_main	;jump to C main() function
   984                           
   985                           	psect	cstackCOMMON
   986  0070                     __pcstackCOMMON:	
   987  0070                     ?_incDutyCycle:	
   988  0070                     ?_decDutyCycle:	
   989                           ; 1 bytes @ 0x0
   990                           
   991  0070                     ?_ConfigureOscillator:	
   992                           ; 1 bytes @ 0x0
   993                           
   994  0070                     ?_InitApp:	
   995                           ; 1 bytes @ 0x0
   996                           
   997  0070                     ?__init_gpio:	
   998                           ; 1 bytes @ 0x0
   999                           
  1000  0070                     ?__init_timer2:	
  1001                           ; 1 bytes @ 0x0
  1002                           
  1003  0070                     ?__init_pwm:	
  1004                           ; 1 bytes @ 0x0
  1005                           
  1006  0070                     ?_isr:	
  1007                           ; 1 bytes @ 0x0
  1008                           
  1009  0070                     ?_main:	
  1010                           ; 1 bytes @ 0x0
  1011                           
  1012  0070                     ?i1_pwm1_writeDutyCycle:	
  1013                           ; 1 bytes @ 0x0
  1014                           
  1015  0070                     ?i1_pwm2_writeDutyCycle:	
  1016                           ; 1 bytes @ 0x0
  1017                           
  1018  0070                     ?i1_pwm3_writeDutyCycle:	
  1019                           ; 1 bytes @ 0x0
  1020                           
  1021  0070                     ?i1_pwm4_writeDutyCycle:	
  1022                           ; 1 bytes @ 0x0
  1023                           
  1024  0070                     ?_checkDCBounds:	
  1025                           ; 1 bytes @ 0x0
  1026                           
  1027  0070                     checkDCBounds@dc:	
  1028                           ; 2 bytes @ 0x0
  1029                           
  1030  0070                     i1pwm1_writeDutyCycle@dutyCycle:	
  1031                           ; 2 bytes @ 0x0
  1032                           
  1033  0070                     i1pwm2_writeDutyCycle@dutyCycle:	
  1034                           ; 2 bytes @ 0x0
  1035                           
  1036  0070                     i1pwm3_writeDutyCycle@dutyCycle:	
  1037                           ; 2 bytes @ 0x0
  1038                           
  1039  0070                     i1pwm4_writeDutyCycle@dutyCycle:	
  1040                           ; 2 bytes @ 0x0
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x0
  1044  0070                     	ds	2
  1045  0072                     ??i1_pwm1_writeDutyCycle:	
  1046  0072                     ??i1_pwm2_writeDutyCycle:	
  1047                           ; 1 bytes @ 0x2
  1048                           
  1049  0072                     ??i1_pwm3_writeDutyCycle:	
  1050                           ; 1 bytes @ 0x2
  1051                           
  1052  0072                     ??i1_pwm4_writeDutyCycle:	
  1053                           ; 1 bytes @ 0x2
  1054                           
  1055  0072                     checkDCBounds@direction:	
  1056                           ; 1 bytes @ 0x2
  1057                           
  1058                           
  1059                           ; 1 bytes @ 0x2
  1060  0072                     	ds	1
  1061  0073                     ??_checkDCBounds:	
  1062  0073                     checkDCBounds@retval:	
  1063                           ; 1 bytes @ 0x3
  1064                           
  1065                           
  1066                           ; 2 bytes @ 0x3
  1067  0073                     	ds	2
  1068  0075                     ??_incDutyCycle:	
  1069  0075                     ??_decDutyCycle:	
  1070                           ; 1 bytes @ 0x5
  1071                           
  1072  0075                     incDutyCycle@chan:	
  1073                           ; 1 bytes @ 0x5
  1074                           
  1075  0075                     decDutyCycle@chan:	
  1076                           ; 1 bytes @ 0x5
  1077                           
  1078                           
  1079                           ; 1 bytes @ 0x5
  1080  0075                     	ds	1
  1081  0076                     incDutyCycle@dutyCycle:	
  1082  0076                     decDutyCycle@dutyCycle:	
  1083                           ; 2 bytes @ 0x6
  1084                           
  1085                           
  1086                           ; 2 bytes @ 0x6
  1087  0076                     	ds	2
  1088  0078                     ??_isr:	
  1089                           
  1090                           ; 1 bytes @ 0x8
  1091  0078                     	ds	1
  1092                           
  1093                           	psect	cstackBANK0
  1094  0024                     __pcstackBANK0:	
  1095  0024                     ??_ConfigureOscillator:	
  1096  0024                     ??__init_gpio:	
  1097                           ; 1 bytes @ 0x0
  1098                           
  1099  0024                     ??__init_timer2:	
  1100                           ; 1 bytes @ 0x0
  1101                           
  1102  0024                     ?_pwm1_writeDutyCycle:	
  1103                           ; 1 bytes @ 0x0
  1104                           
  1105  0024                     ?_pwm2_writeDutyCycle:	
  1106                           ; 1 bytes @ 0x0
  1107                           
  1108  0024                     ?_pwm3_writeDutyCycle:	
  1109                           ; 1 bytes @ 0x0
  1110                           
  1111  0024                     ?_pwm4_writeDutyCycle:	
  1112                           ; 1 bytes @ 0x0
  1113                           
  1114  0024                     pwm1_writeDutyCycle@dutyCycle:	
  1115                           ; 1 bytes @ 0x0
  1116                           
  1117  0024                     pwm2_writeDutyCycle@dutyCycle:	
  1118                           ; 2 bytes @ 0x0
  1119                           
  1120  0024                     pwm3_writeDutyCycle@dutyCycle:	
  1121                           ; 2 bytes @ 0x0
  1122                           
  1123  0024                     pwm4_writeDutyCycle@dutyCycle:	
  1124                           ; 2 bytes @ 0x0
  1125                           
  1126                           
  1127                           ; 2 bytes @ 0x0
  1128  0024                     	ds	2
  1129  0026                     ??_pwm1_writeDutyCycle:	
  1130  0026                     ??_pwm2_writeDutyCycle:	
  1131                           ; 1 bytes @ 0x2
  1132                           
  1133  0026                     ??_pwm3_writeDutyCycle:	
  1134                           ; 1 bytes @ 0x2
  1135                           
  1136  0026                     ??_pwm4_writeDutyCycle:	
  1137                           ; 1 bytes @ 0x2
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x2
  1141  0026                     	ds	2
  1142  0028                     ??_InitApp:	
  1143  0028                     ??__init_pwm:	
  1144                           ; 1 bytes @ 0x4
  1145                           
  1146  0028                     ??_main:	
  1147                           ; 1 bytes @ 0x4
  1148                           
  1149                           
  1150                           	psect	maintext
  1151  0244                     __pmaintext:	
  1152                           ; 1 bytes @ 0x4
  1153 ;;
  1154 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1155 ;;
  1156 ;; *************** function _main *****************
  1157 ;; Defined at:
  1158 ;;		line 26 in file "main.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : B1F/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1
  1172 ;;      Params:         0       0       0
  1173 ;;      Locals:         0       0       0
  1174 ;;      Temps:          0       0       0
  1175 ;;      Totals:         0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels required when called:    6
  1178 ;; This function calls:
  1179 ;;		_ConfigureOscillator
  1180 ;;		_InitApp
  1181 ;; This function is called by:
  1182 ;;		Startup code after reset
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _main
  1188  0244                     _main:	
  1189                           
  1190                           ;main.c: 29: ConfigureOscillator();
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1194  0244  223B               	fcall	_ConfigureOscillator
  1195                           
  1196                           ;main.c: 32: InitApp();
  1197  0245  2240               	fcall	_InitApp
  1198  0246                     l40:	
  1199                           ;main.c: 35: while(1)
  1200                           
  1201                           
  1202                           ;main.c: 36: {
  1203  0246  2A46               	goto	l40
  1204  0247                     __end_of_main:	
  1205                           
  1206                           	psect	text1
  1207  0240                     __ptext1:	
  1208 ;; *************** function _InitApp *****************
  1209 ;; Defined at:
  1210 ;;		line 21 in file "user.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;		None
  1213 ;; Auto vars:     Size  Location     Type
  1214 ;;		None
  1215 ;; Return value:  Size  Location     Type
  1216 ;;                  1    wreg      void 
  1217 ;; Registers used:
  1218 ;;		wreg, status,2, status,0, pclath, cstack
  1219 ;; Tracked objects:
  1220 ;;		On entry : 0/0
  1221 ;;		On exit  : 0/0
  1222 ;;		Unchanged: 0/0
  1223 ;; Data sizes:     COMMON   BANK0   BANK1
  1224 ;;      Params:         0       0       0
  1225 ;;      Locals:         0       0       0
  1226 ;;      Temps:          0       0       0
  1227 ;;      Totals:         0       0       0
  1228 ;;Total ram usage:        0 bytes
  1229 ;; Hardware stack levels used:    1
  1230 ;; Hardware stack levels required when called:    5
  1231 ;; This function calls:
  1232 ;;		__init_gpio
  1233 ;;		__init_pwm
  1234 ;;		__init_timer2
  1235 ;; This function is called by:
  1236 ;;		_main
  1237 ;; This function uses a non-reentrant model
  1238 ;;
  1239                           
  1240                           
  1241                           ;psect for function _InitApp
  1242  0240                     _InitApp:	
  1243                           
  1244                           ;user.c: 25: _init_gpio();
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in _InitApp: [wreg+status,2+status,0+pclath+cstack]
  1248  0240  2221               	fcall	__init_gpio
  1249                           
  1250                           ;user.c: 28: _init_timer2();
  1251  0241  2234               	fcall	__init_timer2
  1252                           
  1253                           ;user.c: 29: _init_pwm();
  1254  0242  20FF               	fcall	__init_pwm
  1255  0243  0008               	return
  1256  0244                     __end_of_InitApp:	
  1257                           
  1258                           	psect	text2
  1259  0234                     __ptext2:	
  1260 ;; *************** function __init_timer2 *****************
  1261 ;; Defined at:
  1262 ;;		line 35 in file "user.c"
  1263 ;; Parameters:    Size  Location     Type
  1264 ;;		None
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;		None
  1267 ;; Return value:  Size  Location     Type
  1268 ;;                  1    wreg      void 
  1269 ;; Registers used:
  1270 ;;		wreg, status,2
  1271 ;; Tracked objects:
  1272 ;;		On entry : 0/0
  1273 ;;		On exit  : 0/0
  1274 ;;		Unchanged: 0/0
  1275 ;; Data sizes:     COMMON   BANK0   BANK1
  1276 ;;      Params:         0       0       0
  1277 ;;      Locals:         0       0       0
  1278 ;;      Temps:          0       0       0
  1279 ;;      Totals:         0       0       0
  1280 ;;Total ram usage:        0 bytes
  1281 ;; Hardware stack levels used:    1
  1282 ;; Hardware stack levels required when called:    3
  1283 ;; This function calls:
  1284 ;;		Nothing
  1285 ;; This function is called by:
  1286 ;;		_InitApp
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           
  1291                           ;psect for function __init_timer2
  1292  0234                     __init_timer2:	
  1293                           
  1294                           ;user.c: 38: T2CON = 0x00;
  1295                           
  1296                           ;incstack = 0
  1297                           ; Regs used in __init_timer2: [wreg+status,2]
  1298  0234  0020               	movlb	0	; select bank0
  1299  0235  019C               	clrf	28	;volatile
  1300                           
  1301                           ;user.c: 41: PR2 = 0x04;
  1302  0236  3004               	movlw	4
  1303  0237  009B               	movwf	27	;volatile
  1304                           
  1305                           ;user.c: 44: TMR2 = 0x00;
  1306  0238  019A               	clrf	26	;volatile
  1307                           
  1308                           ;user.c: 47: T2CONbits.TMR2ON = 1;
  1309  0239  151C               	bsf	28,2	;volatile
  1310  023A  0008               	return
  1311  023B                     __end_of__init_timer2:	
  1312                           
  1313                           	psect	text3
  1314  00FF                     __ptext3:	
  1315 ;; *************** function __init_pwm *****************
  1316 ;; Defined at:
  1317 ;;		line 17 in file "pwm.c"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;		None
  1320 ;; Auto vars:     Size  Location     Type
  1321 ;;		None
  1322 ;; Return value:  Size  Location     Type
  1323 ;;                  1    wreg      void 
  1324 ;; Registers used:
  1325 ;;		wreg, status,2, status,0, pclath, cstack
  1326 ;; Tracked objects:
  1327 ;;		On entry : 0/0
  1328 ;;		On exit  : 0/0
  1329 ;;		Unchanged: 0/0
  1330 ;; Data sizes:     COMMON   BANK0   BANK1
  1331 ;;      Params:         0       0       0
  1332 ;;      Locals:         0       0       0
  1333 ;;      Temps:          0       0       0
  1334 ;;      Totals:         0       0       0
  1335 ;;Total ram usage:        0 bytes
  1336 ;; Hardware stack levels used:    1
  1337 ;; Hardware stack levels required when called:    4
  1338 ;; This function calls:
  1339 ;;		_pwm1_writeDutyCycle
  1340 ;;		_pwm2_writeDutyCycle
  1341 ;;		_pwm3_writeDutyCycle
  1342 ;;		_pwm4_writeDutyCycle
  1343 ;; This function is called by:
  1344 ;;		_InitApp
  1345 ;; This function uses a non-reentrant model
  1346 ;;
  1347                           
  1348                           
  1349                           ;psect for function __init_pwm
  1350  00FF                     __init_pwm:	
  1351                           
  1352                           ;pwm.c: 20: PWM1CON = 0x00;
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in __init_pwm: [wreg+status,2+status,0+pclath+cstack]
  1356  00FF  002C               	movlb	12	; select bank12
  1357  0100  0193               	clrf	19	;volatile
  1358                           
  1359                           ;pwm.c: 21: PWM2CON = 0x00;
  1360  0101  0196               	clrf	22	;volatile
  1361                           
  1362                           ;pwm.c: 22: PWM3CON = 0x00;
  1363  0102  0199               	clrf	25	;volatile
  1364                           
  1365                           ;pwm.c: 23: PWM4CON = 0x00;
  1366  0103  019C               	clrf	28	;volatile
  1367                           
  1368                           ;pwm.c: 28: PWM1CON = 0xC0;
  1369  0104  30C0               	movlw	192
  1370  0105  0093               	movwf	19	;volatile
  1371                           
  1372                           ;pwm.c: 29: PWM2CON = 0xC0;
  1373  0106  30C0               	movlw	192
  1374  0107  0096               	movwf	22	;volatile
  1375                           
  1376                           ;pwm.c: 30: PWM3CON = 0xC0;
  1377  0108  30C0               	movlw	192
  1378  0109  0099               	movwf	25	;volatile
  1379                           
  1380                           ;pwm.c: 31: PWM4CON = 0xC0;
  1381  010A  30C0               	movlw	192
  1382  010B  009C               	movwf	28	;volatile
  1383                           
  1384                           ;pwm.c: 33: pwm1_writeDutyCycle(9U);
  1385  010C  3009               	movlw	9
  1386  010D  0020               	movlb	0	; select bank0
  1387  010E  00A4               	movwf	pwm1_writeDutyCycle@dutyCycle
  1388  010F  3000               	movlw	0
  1389  0110  00A5               	movwf	pwm1_writeDutyCycle@dutyCycle+1
  1390  0111  217F               	fcall	_pwm1_writeDutyCycle
  1391                           
  1392                           ;pwm.c: 34: pwm2_writeDutyCycle(9U);
  1393  0112  3009               	movlw	9
  1394  0113  0020               	movlb	0	; select bank0
  1395  0114  00A4               	movwf	pwm2_writeDutyCycle@dutyCycle
  1396  0115  3000               	movlw	0
  1397  0116  00A5               	movwf	pwm2_writeDutyCycle@dutyCycle+1
  1398  0117  2161               	fcall	_pwm2_writeDutyCycle
  1399                           
  1400                           ;pwm.c: 35: pwm3_writeDutyCycle(9U);
  1401  0118  3009               	movlw	9
  1402  0119  0020               	movlb	0	; select bank0
  1403  011A  00A4               	movwf	pwm3_writeDutyCycle@dutyCycle
  1404  011B  3000               	movlw	0
  1405  011C  00A5               	movwf	pwm3_writeDutyCycle@dutyCycle+1
  1406  011D  2143               	fcall	_pwm3_writeDutyCycle
  1407                           
  1408                           ;pwm.c: 36: pwm4_writeDutyCycle(9U);
  1409  011E  3009               	movlw	9
  1410  011F  0020               	movlb	0	; select bank0
  1411  0120  00A4               	movwf	pwm4_writeDutyCycle@dutyCycle
  1412  0121  3000               	movlw	0
  1413  0122  00A5               	movwf	pwm4_writeDutyCycle@dutyCycle+1
  1414  0123  2125               	fcall	_pwm4_writeDutyCycle
  1415  0124  0008               	return
  1416  0125                     __end_of__init_pwm:	
  1417                           
  1418                           	psect	text4
  1419  0125                     __ptext4:	
  1420 ;; *************** function _pwm4_writeDutyCycle *****************
  1421 ;; Defined at:
  1422 ;;		line 55 in file "pwm.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  dutyCycle       2    0[BANK0 ] unsigned int 
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, status,2, status,0
  1431 ;; Tracked objects:
  1432 ;;		On entry : 0/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1
  1436 ;;      Params:         0       2       0
  1437 ;;      Locals:         0       0       0
  1438 ;;      Temps:          0       2       0
  1439 ;;      Totals:         0       4       0
  1440 ;;Total ram usage:        4 bytes
  1441 ;; Hardware stack levels used:    1
  1442 ;; Hardware stack levels required when called:    3
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		__init_pwm
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450                           
  1451                           ;psect for function _pwm4_writeDutyCycle
  1452  0125                     _pwm4_writeDutyCycle:	
  1453                           
  1454                           ;pwm.c: 56: PWM4DCH = (dutyCycle & 0x03FC)>>2;
  1455                           
  1456                           ;incstack = 0
  1457                           ; Regs used in _pwm4_writeDutyCycle: [wreg+status,2+status,0]
  1458  0125  0020               	movlb	0	; select bank0
  1459  0126  0825               	movf	pwm4_writeDutyCycle@dutyCycle+1,w
  1460  0127  00A7               	movwf	??_pwm4_writeDutyCycle+1
  1461  0128  0824               	movf	pwm4_writeDutyCycle@dutyCycle,w
  1462  0129  00A6               	movwf	??_pwm4_writeDutyCycle
  1463  012A  36A7               	lsrf	??_pwm4_writeDutyCycle+1,f
  1464  012B  0CA6               	rrf	??_pwm4_writeDutyCycle,f
  1465  012C  36A7               	lsrf	??_pwm4_writeDutyCycle+1,f
  1466  012D  0CA6               	rrf	??_pwm4_writeDutyCycle,f
  1467  012E  0826               	movf	??_pwm4_writeDutyCycle,w
  1468  012F  002C               	movlb	12	; select bank12
  1469  0130  009B               	movwf	27	;volatile
  1470                           
  1471                           ;pwm.c: 57: PWM4DCL = (dutyCycle & 0x0003)<<6;
  1472  0131  0020               	movlb	0	; select bank0
  1473  0132  0824               	movf	pwm4_writeDutyCycle@dutyCycle,w
  1474  0133  3903               	andlw	3
  1475  0134  00A6               	movwf	??_pwm4_writeDutyCycle
  1476  0135  3005               	movlw	5
  1477  0136                     u325:	
  1478  0136  35A6               	lslf	??_pwm4_writeDutyCycle,f
  1479  0137  3EFF               	addlw	-1
  1480  0138  1D03               	skipz
  1481  0139  2936               	goto	u325
  1482  013A  3526               	lslf	??_pwm4_writeDutyCycle,w
  1483  013B  002C               	movlb	12	; select bank12
  1484  013C  009A               	movwf	26	;volatile
  1485                           
  1486                           ;pwm.c: 58: pwm4_dutyCycle = dutyCycle;
  1487  013D  0020               	movlb	0	; select bank0
  1488  013E  0825               	movf	pwm4_writeDutyCycle@dutyCycle+1,w
  1489  013F  00A1               	movwf	_pwm4_dutyCycle+1	;volatile
  1490  0140  0824               	movf	pwm4_writeDutyCycle@dutyCycle,w
  1491  0141  00A0               	movwf	_pwm4_dutyCycle	;volatile
  1492  0142  0008               	return
  1493  0143                     __end_of_pwm4_writeDutyCycle:	
  1494                           
  1495                           	psect	text5
  1496  0143                     __ptext5:	
  1497 ;; *************** function _pwm3_writeDutyCycle *****************
  1498 ;; Defined at:
  1499 ;;		line 50 in file "pwm.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;  dutyCycle       2    0[BANK0 ] unsigned int 
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1
  1513 ;;      Params:         0       2       0
  1514 ;;      Locals:         0       0       0
  1515 ;;      Temps:          0       2       0
  1516 ;;      Totals:         0       4       0
  1517 ;;Total ram usage:        4 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    3
  1520 ;; This function calls:
  1521 ;;		Nothing
  1522 ;; This function is called by:
  1523 ;;		__init_pwm
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527                           
  1528                           ;psect for function _pwm3_writeDutyCycle
  1529  0143                     _pwm3_writeDutyCycle:	
  1530                           
  1531                           ;pwm.c: 51: PWM3DCH = (dutyCycle & 0x03FC)>>2;
  1532                           
  1533                           ;incstack = 0
  1534                           ; Regs used in _pwm3_writeDutyCycle: [wreg+status,2+status,0]
  1535  0143  0020               	movlb	0	; select bank0
  1536  0144  0825               	movf	pwm3_writeDutyCycle@dutyCycle+1,w
  1537  0145  00A7               	movwf	??_pwm3_writeDutyCycle+1
  1538  0146  0824               	movf	pwm3_writeDutyCycle@dutyCycle,w
  1539  0147  00A6               	movwf	??_pwm3_writeDutyCycle
  1540  0148  36A7               	lsrf	??_pwm3_writeDutyCycle+1,f
  1541  0149  0CA6               	rrf	??_pwm3_writeDutyCycle,f
  1542  014A  36A7               	lsrf	??_pwm3_writeDutyCycle+1,f
  1543  014B  0CA6               	rrf	??_pwm3_writeDutyCycle,f
  1544  014C  0826               	movf	??_pwm3_writeDutyCycle,w
  1545  014D  002C               	movlb	12	; select bank12
  1546  014E  0098               	movwf	24	;volatile
  1547                           
  1548                           ;pwm.c: 52: PWM3DCL = (dutyCycle & 0x0003)<<6;
  1549  014F  0020               	movlb	0	; select bank0
  1550  0150  0824               	movf	pwm3_writeDutyCycle@dutyCycle,w
  1551  0151  3903               	andlw	3
  1552  0152  00A6               	movwf	??_pwm3_writeDutyCycle
  1553  0153  3005               	movlw	5
  1554  0154                     u315:	
  1555  0154  35A6               	lslf	??_pwm3_writeDutyCycle,f
  1556  0155  3EFF               	addlw	-1
  1557  0156  1D03               	skipz
  1558  0157  2954               	goto	u315
  1559  0158  3526               	lslf	??_pwm3_writeDutyCycle,w
  1560  0159  002C               	movlb	12	; select bank12
  1561  015A  0097               	movwf	23	;volatile
  1562                           
  1563                           ;pwm.c: 53: pwm3_dutyCycle = dutyCycle;
  1564  015B  0020               	movlb	0	; select bank0
  1565  015C  0825               	movf	pwm3_writeDutyCycle@dutyCycle+1,w
  1566  015D  00A3               	movwf	_pwm3_dutyCycle+1	;volatile
  1567  015E  0824               	movf	pwm3_writeDutyCycle@dutyCycle,w
  1568  015F  00A2               	movwf	_pwm3_dutyCycle	;volatile
  1569  0160  0008               	return
  1570  0161                     __end_of_pwm3_writeDutyCycle:	
  1571                           
  1572                           	psect	text6
  1573  0161                     __ptext6:	
  1574 ;; *************** function _pwm2_writeDutyCycle *****************
  1575 ;; Defined at:
  1576 ;;		line 45 in file "pwm.c"
  1577 ;; Parameters:    Size  Location     Type
  1578 ;;  dutyCycle       2    0[BANK0 ] unsigned int 
  1579 ;; Auto vars:     Size  Location     Type
  1580 ;;		None
  1581 ;; Return value:  Size  Location     Type
  1582 ;;                  1    wreg      void 
  1583 ;; Registers used:
  1584 ;;		wreg, status,2, status,0
  1585 ;; Tracked objects:
  1586 ;;		On entry : 0/0
  1587 ;;		On exit  : 0/0
  1588 ;;		Unchanged: 0/0
  1589 ;; Data sizes:     COMMON   BANK0   BANK1
  1590 ;;      Params:         0       2       0
  1591 ;;      Locals:         0       0       0
  1592 ;;      Temps:          0       2       0
  1593 ;;      Totals:         0       4       0
  1594 ;;Total ram usage:        4 bytes
  1595 ;; Hardware stack levels used:    1
  1596 ;; Hardware stack levels required when called:    3
  1597 ;; This function calls:
  1598 ;;		Nothing
  1599 ;; This function is called by:
  1600 ;;		__init_pwm
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function _pwm2_writeDutyCycle
  1606  0161                     _pwm2_writeDutyCycle:	
  1607                           
  1608                           ;pwm.c: 46: PWM2DCH = (dutyCycle & 0x03FC)>>2;
  1609                           
  1610                           ;incstack = 0
  1611                           ; Regs used in _pwm2_writeDutyCycle: [wreg+status,2+status,0]
  1612  0161  0020               	movlb	0	; select bank0
  1613  0162  0825               	movf	pwm2_writeDutyCycle@dutyCycle+1,w
  1614  0163  00A7               	movwf	??_pwm2_writeDutyCycle+1
  1615  0164  0824               	movf	pwm2_writeDutyCycle@dutyCycle,w
  1616  0165  00A6               	movwf	??_pwm2_writeDutyCycle
  1617  0166  36A7               	lsrf	??_pwm2_writeDutyCycle+1,f
  1618  0167  0CA6               	rrf	??_pwm2_writeDutyCycle,f
  1619  0168  36A7               	lsrf	??_pwm2_writeDutyCycle+1,f
  1620  0169  0CA6               	rrf	??_pwm2_writeDutyCycle,f
  1621  016A  0826               	movf	??_pwm2_writeDutyCycle,w
  1622  016B  002C               	movlb	12	; select bank12
  1623  016C  0095               	movwf	21	;volatile
  1624                           
  1625                           ;pwm.c: 47: PWM2DCL = (dutyCycle & 0x0003)<<6;
  1626  016D  0020               	movlb	0	; select bank0
  1627  016E  0824               	movf	pwm2_writeDutyCycle@dutyCycle,w
  1628  016F  3903               	andlw	3
  1629  0170  00A6               	movwf	??_pwm2_writeDutyCycle
  1630  0171  3005               	movlw	5
  1631  0172                     u305:	
  1632  0172  35A6               	lslf	??_pwm2_writeDutyCycle,f
  1633  0173  3EFF               	addlw	-1
  1634  0174  1D03               	skipz
  1635  0175  2972               	goto	u305
  1636  0176  3526               	lslf	??_pwm2_writeDutyCycle,w
  1637  0177  002C               	movlb	12	; select bank12
  1638  0178  0094               	movwf	20	;volatile
  1639                           
  1640                           ;pwm.c: 48: pwm2_dutyCycle = dutyCycle;
  1641  0179  0020               	movlb	0	; select bank0
  1642  017A  0825               	movf	pwm2_writeDutyCycle@dutyCycle+1,w
  1643  017B  00FA               	movwf	_pwm2_dutyCycle+1	;volatile
  1644  017C  0824               	movf	pwm2_writeDutyCycle@dutyCycle,w
  1645  017D  00F9               	movwf	_pwm2_dutyCycle	;volatile
  1646  017E  0008               	return
  1647  017F                     __end_of_pwm2_writeDutyCycle:	
  1648                           
  1649                           	psect	text7
  1650  017F                     __ptext7:	
  1651 ;; *************** function _pwm1_writeDutyCycle *****************
  1652 ;; Defined at:
  1653 ;;		line 40 in file "pwm.c"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  dutyCycle       2    0[BANK0 ] unsigned int 
  1656 ;; Auto vars:     Size  Location     Type
  1657 ;;		None
  1658 ;; Return value:  Size  Location     Type
  1659 ;;                  1    wreg      void 
  1660 ;; Registers used:
  1661 ;;		wreg, status,2, status,0
  1662 ;; Tracked objects:
  1663 ;;		On entry : 0/0
  1664 ;;		On exit  : 0/0
  1665 ;;		Unchanged: 0/0
  1666 ;; Data sizes:     COMMON   BANK0   BANK1
  1667 ;;      Params:         0       2       0
  1668 ;;      Locals:         0       0       0
  1669 ;;      Temps:          0       2       0
  1670 ;;      Totals:         0       4       0
  1671 ;;Total ram usage:        4 bytes
  1672 ;; Hardware stack levels used:    1
  1673 ;; Hardware stack levels required when called:    3
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		__init_pwm
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           
  1682                           ;psect for function _pwm1_writeDutyCycle
  1683  017F                     _pwm1_writeDutyCycle:	
  1684                           
  1685                           ;pwm.c: 41: PWM1DCH = (dutyCycle & 0x03FC)>>2;
  1686                           
  1687                           ;incstack = 0
  1688                           ; Regs used in _pwm1_writeDutyCycle: [wreg+status,2+status,0]
  1689  017F  0020               	movlb	0	; select bank0
  1690  0180  0825               	movf	pwm1_writeDutyCycle@dutyCycle+1,w
  1691  0181  00A7               	movwf	??_pwm1_writeDutyCycle+1
  1692  0182  0824               	movf	pwm1_writeDutyCycle@dutyCycle,w
  1693  0183  00A6               	movwf	??_pwm1_writeDutyCycle
  1694  0184  36A7               	lsrf	??_pwm1_writeDutyCycle+1,f
  1695  0185  0CA6               	rrf	??_pwm1_writeDutyCycle,f
  1696  0186  36A7               	lsrf	??_pwm1_writeDutyCycle+1,f
  1697  0187  0CA6               	rrf	??_pwm1_writeDutyCycle,f
  1698  0188  0826               	movf	??_pwm1_writeDutyCycle,w
  1699  0189  002C               	movlb	12	; select bank12
  1700  018A  0092               	movwf	18	;volatile
  1701                           
  1702                           ;pwm.c: 42: PWM1DCL = (dutyCycle & 0x0003)<<6;
  1703  018B  0020               	movlb	0	; select bank0
  1704  018C  0824               	movf	pwm1_writeDutyCycle@dutyCycle,w
  1705  018D  3903               	andlw	3
  1706  018E  00A6               	movwf	??_pwm1_writeDutyCycle
  1707  018F  3005               	movlw	5
  1708  0190                     u295:	
  1709  0190  35A6               	lslf	??_pwm1_writeDutyCycle,f
  1710  0191  3EFF               	addlw	-1
  1711  0192  1D03               	skipz
  1712  0193  2990               	goto	u295
  1713  0194  3526               	lslf	??_pwm1_writeDutyCycle,w
  1714  0195  002C               	movlb	12	; select bank12
  1715  0196  0091               	movwf	17	;volatile
  1716                           
  1717                           ;pwm.c: 43: pwm1_dutyCycle = dutyCycle;
  1718  0197  0020               	movlb	0	; select bank0
  1719  0198  0825               	movf	pwm1_writeDutyCycle@dutyCycle+1,w
  1720  0199  00FC               	movwf	_pwm1_dutyCycle+1	;volatile
  1721  019A  0824               	movf	pwm1_writeDutyCycle@dutyCycle,w
  1722  019B  00FB               	movwf	_pwm1_dutyCycle	;volatile
  1723  019C  0008               	return
  1724  019D                     __end_of_pwm1_writeDutyCycle:	
  1725                           
  1726                           	psect	text8
  1727  0221                     __ptext8:	
  1728 ;; *************** function __init_gpio *****************
  1729 ;; Defined at:
  1730 ;;		line 50 in file "user.c"
  1731 ;; Parameters:    Size  Location     Type
  1732 ;;		None
  1733 ;; Auto vars:     Size  Location     Type
  1734 ;;		None
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  1    wreg      void 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMMON   BANK0   BANK1
  1744 ;;      Params:         0       0       0
  1745 ;;      Locals:         0       0       0
  1746 ;;      Temps:          0       0       0
  1747 ;;      Totals:         0       0       0
  1748 ;;Total ram usage:        0 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    3
  1751 ;; This function calls:
  1752 ;;		Nothing
  1753 ;; This function is called by:
  1754 ;;		_InitApp
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           
  1759                           ;psect for function __init_gpio
  1760  0221                     __init_gpio:	
  1761                           
  1762                           ;user.c: 52: LATA = 0x00;
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in __init_gpio: [wreg+status,2]
  1766  0221  0022               	movlb	2	; select bank2
  1767  0222  018C               	clrf	12	;volatile
  1768                           
  1769                           ;user.c: 53: LATC = 0x00;
  1770  0223  018E               	clrf	14	;volatile
  1771                           
  1772                           ;user.c: 55: TRISA = 0x33;
  1773  0224  3033               	movlw	51
  1774  0225  0021               	movlb	1	; select bank1
  1775  0226  008C               	movwf	12	;volatile
  1776                           
  1777                           ;user.c: 56: TRISC = 0x15;
  1778  0227  3015               	movlw	21
  1779  0228  008E               	movwf	14	;volatile
  1780                           
  1781                           ;user.c: 59: ANSELA = 0x00;
  1782  0229  0023               	movlb	3	; select bank3
  1783  022A  018C               	clrf	12	;volatile
  1784                           
  1785                           ;user.c: 60: ANSELC = 0x00;
  1786  022B  018E               	clrf	14	;volatile
  1787                           
  1788                           ;user.c: 63: WPUA = 0x00;
  1789  022C  0024               	movlb	4	; select bank4
  1790  022D  018C               	clrf	12	;volatile
  1791                           
  1792                           ;user.c: 64: IOCAP = 0x30;
  1793  022E  3030               	movlw	48
  1794  022F  0027               	movlb	7	; select bank7
  1795  0230  0091               	movwf	17	;volatile
  1796                           
  1797                           ;user.c: 65: IOCAF = 0x00;
  1798  0231  0193               	clrf	19	;volatile
  1799                           
  1800                           ;user.c: 68: INTCONbits.IOCIE = 1;
  1801  0232  158B               	bsf	11,3	;volatile
  1802  0233  0008               	return
  1803  0234                     __end_of__init_gpio:	
  1804                           
  1805                           	psect	text9
  1806  023B                     __ptext9:	
  1807 ;; *************** function _ConfigureOscillator *****************
  1808 ;; Defined at:
  1809 ;;		line 17 in file "system.c"
  1810 ;; Parameters:    Size  Location     Type
  1811 ;;		None
  1812 ;; Auto vars:     Size  Location     Type
  1813 ;;		None
  1814 ;; Return value:  Size  Location     Type
  1815 ;;                  1    wreg      void 
  1816 ;; Registers used:
  1817 ;;		wreg, status,2
  1818 ;; Tracked objects:
  1819 ;;		On entry : 0/0
  1820 ;;		On exit  : 0/0
  1821 ;;		Unchanged: 0/0
  1822 ;; Data sizes:     COMMON   BANK0   BANK1
  1823 ;;      Params:         0       0       0
  1824 ;;      Locals:         0       0       0
  1825 ;;      Temps:          0       0       0
  1826 ;;      Totals:         0       0       0
  1827 ;;Total ram usage:        0 bytes
  1828 ;; Hardware stack levels used:    1
  1829 ;; Hardware stack levels required when called:    3
  1830 ;; This function calls:
  1831 ;;		Nothing
  1832 ;; This function is called by:
  1833 ;;		_main
  1834 ;; This function uses a non-reentrant model
  1835 ;;
  1836                           
  1837                           
  1838                           ;psect for function _ConfigureOscillator
  1839  023B                     _ConfigureOscillator:	
  1840                           
  1841                           ;system.c: 20: OSCCON = 0x3B;
  1842                           
  1843                           ;incstack = 0
  1844                           ; Regs used in _ConfigureOscillator: [wreg+status,2]
  1845  023B  303B               	movlw	59
  1846  023C  0021               	movlb	1	; select bank1
  1847  023D  0099               	movwf	25	;volatile
  1848                           
  1849                           ;system.c: 23: WDTCON = 0x00;
  1850  023E  0197               	clrf	23	;volatile
  1851  023F  0008               	return
  1852  0240                     __end_of_ConfigureOscillator:	
  1853                           
  1854                           	psect	intentry
  1855  0004                     __pintentry:	
  1856 ;; *************** function _isr *****************
  1857 ;; Defined at:
  1858 ;;		line 29 in file "interrupts.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;		None
  1861 ;; Auto vars:     Size  Location     Type
  1862 ;;		None
  1863 ;; Return value:  Size  Location     Type
  1864 ;;                  1    wreg      void 
  1865 ;; Registers used:
  1866 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1867 ;; Tracked objects:
  1868 ;;		On entry : 0/0
  1869 ;;		On exit  : 0/0
  1870 ;;		Unchanged: 0/0
  1871 ;; Data sizes:     COMMON   BANK0   BANK1
  1872 ;;      Params:         0       0       0
  1873 ;;      Locals:         0       0       0
  1874 ;;      Temps:          1       0       0
  1875 ;;      Totals:         1       0       0
  1876 ;;Total ram usage:        1 bytes
  1877 ;; Hardware stack levels used:    1
  1878 ;; Hardware stack levels required when called:    2
  1879 ;; This function calls:
  1880 ;;		_decDutyCycle
  1881 ;;		_incDutyCycle
  1882 ;; This function is called by:
  1883 ;;		Interrupt level 1
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887  0004                     _isr:	
  1888                           
  1889                           ;incstack = 0
  1890  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  1891                           
  1892                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1893  0005  3180               	pagesel	$
  1894  0006  0020               	movlb	0	; select bank0
  1895  0007  087F               	movf	127,w
  1896  0008  00F8               	movwf	??_isr
  1897                           
  1898                           ;interrupts.c: 34: if(IOCAFbits.IOCAF4 == 1)
  1899  0009  0027               	movlb	7	; select bank7
  1900  000A  1E13               	btfss	19,4	;volatile
  1901  000B  2823               	goto	i1l13
  1902                           
  1903                           ;interrupts.c: 35: {
  1904                           ;interrupts.c: 37: if( PORTCbits.RC4 == 0 && PORTCbits.RC2 == 0 ){
  1905  000C  0020               	movlb	0	; select bank0
  1906  000D  1E0E               	btfss	14,4	;volatile
  1907  000E  190E               	btfsc	14,2	;volatile
  1908  000F  2812               	goto	i1l14
  1909                           
  1910                           ;interrupts.c: 38: incDutyCycle(PWM_CH1);
  1911  0010  3000               	movlw	0
  1912  0011  2820               	goto	L1
  1913  0012                     i1l14:	
  1914                           ;interrupts.c: 39: }else if( PORTCbits.RC4 == 0 && PORTCbits.RC2 == 1 ){
  1915                           
  1916  0012  1E0E               	btfss	14,4	;volatile
  1917  0013  1D0E               	btfss	14,2	;volatile
  1918  0014  2817               	goto	i1l16
  1919                           
  1920                           ;interrupts.c: 40: incDutyCycle(PWM_CH2);
  1921  0015  3001               	movlw	1
  1922  0016  2820               	goto	L1
  1923  0017                     i1l16:	
  1924                           ;interrupts.c: 41: }else if( PORTCbits.RC4 == 1 && PORTCbits.RC2 == 0 ){
  1925                           
  1926  0017  1A0E               	btfsc	14,4	;volatile
  1927  0018  190E               	btfsc	14,2	;volatile
  1928  0019  281C               	goto	i1l18
  1929                           
  1930                           ;interrupts.c: 42: incDutyCycle(PWM_CH3);
  1931  001A  3002               	movlw	2
  1932  001B  2820               	goto	L1
  1933  001C                     i1l18:	
  1934                           ;interrupts.c: 43: }else if( PORTCbits.RC4 == 1 && PORTCbits.RC2 == 1 ){
  1935                           
  1936  001C  1A0E               	btfsc	14,4	;volatile
  1937  001D  1D0E               	btfss	14,2	;volatile
  1938  001E  2821               	goto	i1l15
  1939                           
  1940                           ;interrupts.c: 44: incDutyCycle(PWM_CH4);
  1941  001F  3003               	movlw	3
  1942  0020                     L1:	
  1943  0020  2045               	fcall	_incDutyCycle
  1944  0021                     i1l15:	
  1945                           ;interrupts.c: 45: }else{
  1946                           
  1947                           
  1948                           ;interrupts.c: 47: }
  1949                           ;interrupts.c: 50: IOCAFbits.IOCAF4 = 0;
  1950  0021  0027               	movlb	7	; select bank7
  1951  0022  1213               	bcf	19,4	;volatile
  1952  0023                     i1l13:	
  1953                           
  1954                           ;interrupts.c: 51: }
  1955                           ;interrupts.c: 54: if(IOCAFbits.IOCAF5 == 1)
  1956  0023  1E93               	btfss	19,5	;volatile
  1957  0024  283C               	goto	i1l31
  1958                           
  1959                           ;interrupts.c: 55: {
  1960                           ;interrupts.c: 57: if( PORTCbits.RC4 == 0 && PORTCbits.RC2 == 0 ){
  1961  0025  0020               	movlb	0	; select bank0
  1962  0026  1E0E               	btfss	14,4	;volatile
  1963  0027  190E               	btfsc	14,2	;volatile
  1964  0028  282B               	goto	i1l23
  1965                           
  1966                           ;interrupts.c: 58: decDutyCycle(PWM_CH1);
  1967  0029  3000               	movlw	0
  1968  002A  2839               	goto	L2
  1969  002B                     i1l23:	
  1970                           ;interrupts.c: 59: }else if( PORTCbits.RC4 == 0 && PORTCbits.RC2 == 1 ){
  1971                           
  1972  002B  1E0E               	btfss	14,4	;volatile
  1973  002C  1D0E               	btfss	14,2	;volatile
  1974  002D  2830               	goto	i1l25
  1975                           
  1976                           ;interrupts.c: 60: decDutyCycle(PWM_CH2);
  1977  002E  3001               	movlw	1
  1978  002F  2839               	goto	L2
  1979  0030                     i1l25:	
  1980                           ;interrupts.c: 61: }else if( PORTCbits.RC4 == 1 && PORTCbits.RC2 == 0 ){
  1981                           
  1982  0030  1A0E               	btfsc	14,4	;volatile
  1983  0031  190E               	btfsc	14,2	;volatile
  1984  0032  2835               	goto	i1l27
  1985                           
  1986                           ;interrupts.c: 62: decDutyCycle(PWM_CH3);
  1987  0033  3002               	movlw	2
  1988  0034  2839               	goto	L2
  1989  0035                     i1l27:	
  1990                           ;interrupts.c: 63: }else if( PORTCbits.RC4 == 1 && PORTCbits.RC2 == 1 ){
  1991                           
  1992  0035  1A0E               	btfsc	14,4	;volatile
  1993  0036  1D0E               	btfss	14,2	;volatile
  1994  0037  283A               	goto	i1l24
  1995                           
  1996                           ;interrupts.c: 64: decDutyCycle(PWM_CH4);
  1997  0038  3003               	movlw	3
  1998  0039                     L2:	
  1999  0039  20A4               	fcall	_decDutyCycle
  2000  003A                     i1l24:	
  2001                           ;interrupts.c: 65: }else{
  2002                           
  2003                           
  2004                           ;interrupts.c: 67: }
  2005                           ;interrupts.c: 70: IOCAFbits.IOCAF5 = 0;
  2006  003A  0027               	movlb	7	; select bank7
  2007  003B  1293               	bcf	19,5	;volatile
  2008  003C                     i1l31:	
  2009  003C  0878               	movf	??_isr,w
  2010  003D  0020               	movlb	0	; select bank0
  2011  003E  00FF               	movwf	127
  2012  003F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2013  0040  0009               	retfie
  2014  0041                     __end_of_isr:	
  2015                           
  2016                           	psect	text11
  2017  0045                     __ptext11:	
  2018 ;; *************** function _incDutyCycle *****************
  2019 ;; Defined at:
  2020 ;;		line 78 in file "pwm.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  chan            1    wreg     enum E2936
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  chan            1    5[COMMON] enum E2936
  2025 ;;  dutyCycle       2    6[COMMON] unsigned int 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      void 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1
  2035 ;;      Params:         0       0       0
  2036 ;;      Locals:         3       0       0
  2037 ;;      Temps:          0       0       0
  2038 ;;      Totals:         3       0       0
  2039 ;;Total ram usage:        3 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		_checkDCBounds
  2044 ;;		i1_pwm1_writeDutyCycle
  2045 ;;		i1_pwm2_writeDutyCycle
  2046 ;;		i1_pwm3_writeDutyCycle
  2047 ;;		i1_pwm4_writeDutyCycle
  2048 ;; This function is called by:
  2049 ;;		_isr
  2050 ;; This function uses a non-reentrant model
  2051 ;;
  2052                           
  2053                           
  2054                           ;psect for function _incDutyCycle
  2055  0045                     _incDutyCycle:	
  2056                           
  2057                           ;incstack = 0
  2058                           ; Regs used in _incDutyCycle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2059                           ;incDutyCycle@chan stored from wreg
  2060  0045  00F5               	movwf	incDutyCycle@chan
  2061                           
  2062                           ;pwm.c: 79: uint16_t dutyCycle;
  2063                           ;pwm.c: 81: switch(chan){
  2064  0046  2895               	goto	i1l800
  2065  0047                     i1l790:	
  2066                           ;pwm.c: 82: case PWM_CH1:
  2067                           
  2068                           
  2069                           ;pwm.c: 84: dutyCycle = checkDCBounds(pwm1_dutyCycle + 1U, 1);
  2070  0047  087B               	movf	_pwm1_dutyCycle,w	;volatile
  2071  0048  3E01               	addlw	1
  2072  0049  00F0               	movwf	checkDCBounds@dc
  2073  004A  3000               	movlw	0
  2074  004B  3D7C               	addwfc	_pwm1_dutyCycle+1,w	;volatile
  2075  004C  00F1               	movwf	checkDCBounds@dc+1
  2076  004D  01F2               	clrf	checkDCBounds@direction
  2077  004E  0AF2               	incf	checkDCBounds@direction,f
  2078  004F  2207               	fcall	_checkDCBounds
  2079  0050  0871               	movf	?_checkDCBounds+1,w
  2080  0051  00F7               	movwf	incDutyCycle@dutyCycle+1
  2081  0052  0870               	movf	?_checkDCBounds,w
  2082  0053  00F6               	movwf	incDutyCycle@dutyCycle
  2083                           
  2084                           ;pwm.c: 87: pwm1_writeDutyCycle(dutyCycle);
  2085  0054  0877               	movf	incDutyCycle@dutyCycle+1,w
  2086  0055  00F1               	movwf	i1pwm1_writeDutyCycle@dutyCycle+1
  2087  0056  0876               	movf	incDutyCycle@dutyCycle,w
  2088  0057  00F0               	movwf	i1pwm1_writeDutyCycle@dutyCycle
  2089  0058  21ED               	fcall	i1_pwm1_writeDutyCycle
  2090                           
  2091                           ;pwm.c: 89: break;
  2092  0059  0008               	return
  2093  005A                     i1l792:	
  2094                           ;pwm.c: 91: case PWM_CH2:
  2095                           
  2096                           
  2097                           ;pwm.c: 93: dutyCycle = checkDCBounds(pwm2_dutyCycle + 1U, 1);
  2098  005A  0879               	movf	_pwm2_dutyCycle,w	;volatile
  2099  005B  3E01               	addlw	1
  2100  005C  00F0               	movwf	checkDCBounds@dc
  2101  005D  3000               	movlw	0
  2102  005E  3D7A               	addwfc	_pwm2_dutyCycle+1,w	;volatile
  2103  005F  00F1               	movwf	checkDCBounds@dc+1
  2104  0060  01F2               	clrf	checkDCBounds@direction
  2105  0061  0AF2               	incf	checkDCBounds@direction,f
  2106  0062  2207               	fcall	_checkDCBounds
  2107  0063  0871               	movf	?_checkDCBounds+1,w
  2108  0064  00F7               	movwf	incDutyCycle@dutyCycle+1
  2109  0065  0870               	movf	?_checkDCBounds,w
  2110  0066  00F6               	movwf	incDutyCycle@dutyCycle
  2111                           
  2112                           ;pwm.c: 96: pwm2_writeDutyCycle(dutyCycle);
  2113  0067  0877               	movf	incDutyCycle@dutyCycle+1,w
  2114  0068  00F1               	movwf	i1pwm2_writeDutyCycle@dutyCycle+1
  2115  0069  0876               	movf	incDutyCycle@dutyCycle,w
  2116  006A  00F0               	movwf	i1pwm2_writeDutyCycle@dutyCycle
  2117  006B  21D3               	fcall	i1_pwm2_writeDutyCycle
  2118                           
  2119                           ;pwm.c: 98: break;
  2120  006C  0008               	return
  2121  006D                     i1l794:	
  2122                           ;pwm.c: 100: case PWM_CH3:
  2123                           
  2124                           
  2125                           ;pwm.c: 102: dutyCycle = checkDCBounds(pwm3_dutyCycle + 1U, 1);
  2126  006D  0020               	movlb	0	; select bank0
  2127  006E  0822               	movf	_pwm3_dutyCycle,w	;volatile
  2128  006F  3E01               	addlw	1
  2129  0070  00F0               	movwf	checkDCBounds@dc
  2130  0071  3000               	movlw	0
  2131  0072  3D23               	addwfc	_pwm3_dutyCycle+1,w	;volatile
  2132  0073  00F1               	movwf	checkDCBounds@dc+1
  2133  0074  01F2               	clrf	checkDCBounds@direction
  2134  0075  0AF2               	incf	checkDCBounds@direction,f
  2135  0076  2207               	fcall	_checkDCBounds
  2136  0077  0871               	movf	?_checkDCBounds+1,w
  2137  0078  00F7               	movwf	incDutyCycle@dutyCycle+1
  2138  0079  0870               	movf	?_checkDCBounds,w
  2139  007A  00F6               	movwf	incDutyCycle@dutyCycle
  2140                           
  2141                           ;pwm.c: 105: pwm3_writeDutyCycle(dutyCycle);
  2142  007B  0877               	movf	incDutyCycle@dutyCycle+1,w
  2143  007C  00F1               	movwf	i1pwm3_writeDutyCycle@dutyCycle+1
  2144  007D  0876               	movf	incDutyCycle@dutyCycle,w
  2145  007E  00F0               	movwf	i1pwm3_writeDutyCycle@dutyCycle
  2146  007F  21B8               	fcall	i1_pwm3_writeDutyCycle
  2147                           
  2148                           ;pwm.c: 107: break;
  2149  0080  0008               	return
  2150  0081                     i1l796:	
  2151                           ;pwm.c: 109: case PWM_CH4:
  2152                           
  2153                           
  2154                           ;pwm.c: 111: dutyCycle = checkDCBounds(pwm4_dutyCycle + 1U, 1);
  2155  0081  0020               	movlb	0	; select bank0
  2156  0082  0820               	movf	_pwm4_dutyCycle,w	;volatile
  2157  0083  3E01               	addlw	1
  2158  0084  00F0               	movwf	checkDCBounds@dc
  2159  0085  3000               	movlw	0
  2160  0086  3D21               	addwfc	_pwm4_dutyCycle+1,w	;volatile
  2161  0087  00F1               	movwf	checkDCBounds@dc+1
  2162  0088  01F2               	clrf	checkDCBounds@direction
  2163  0089  0AF2               	incf	checkDCBounds@direction,f
  2164  008A  2207               	fcall	_checkDCBounds
  2165  008B  0871               	movf	?_checkDCBounds+1,w
  2166  008C  00F7               	movwf	incDutyCycle@dutyCycle+1
  2167  008D  0870               	movf	?_checkDCBounds,w
  2168  008E  00F6               	movwf	incDutyCycle@dutyCycle
  2169                           
  2170                           ;pwm.c: 114: pwm4_writeDutyCycle(dutyCycle);
  2171  008F  0877               	movf	incDutyCycle@dutyCycle+1,w
  2172  0090  00F1               	movwf	i1pwm4_writeDutyCycle@dutyCycle+1
  2173  0091  0876               	movf	incDutyCycle@dutyCycle,w
  2174  0092  00F0               	movwf	i1pwm4_writeDutyCycle@dutyCycle
  2175  0093  219D               	fcall	i1_pwm4_writeDutyCycle
  2176                           
  2177                           ;pwm.c: 121: }
  2178                           
  2179                           ;pwm.c: 120: break;
  2180                           
  2181                           ;pwm.c: 118: default:
  2182                           
  2183                           ;pwm.c: 116: break;
  2184  0094  0008               	return
  2185  0095                     i1l800:	
  2186  0095  0875               	movf	incDutyCycle@chan,w
  2187                           
  2188                           ; Switch size 1, requested type "space"
  2189                           ; Number of cases is 4, Range of values is 0 to 3
  2190                           ; switch strategies available:
  2191                           ; Name         Instructions Cycles
  2192                           ; simple_byte           13     7 (average)
  2193                           ; direct_byte           14     6 (fixed)
  2194                           ; jumptable            260     6 (fixed)
  2195                           ;	Chosen strategy is simple_byte
  2196  0096  3A00               	xorlw	0	; case 0
  2197  0097  1903               	skipnz
  2198  0098  2847               	goto	i1l790
  2199  0099  3A01               	xorlw	1	; case 1
  2200  009A  1903               	skipnz
  2201  009B  285A               	goto	i1l792
  2202  009C  3A03               	xorlw	3	; case 2
  2203  009D  1903               	skipnz
  2204  009E  286D               	goto	i1l794
  2205  009F  3A01               	xorlw	1	; case 3
  2206  00A0  1903               	skipnz
  2207  00A1  2881               	goto	i1l796
  2208  00A2  28A3               	goto	i1l164
  2209  00A3                     i1l164:	
  2210  00A3  0008               	return
  2211  00A4                     __end_of_incDutyCycle:	
  2212                           
  2213                           	psect	text12
  2214  00A4                     __ptext12:	
  2215 ;; *************** function _decDutyCycle *****************
  2216 ;; Defined at:
  2217 ;;		line 124 in file "pwm.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;  chan            1    wreg     enum E2936
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  chan            1    5[COMMON] enum E2936
  2222 ;;  dutyCycle       2    6[COMMON] unsigned int 
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1
  2232 ;;      Params:         0       0       0
  2233 ;;      Locals:         3       0       0
  2234 ;;      Temps:          0       0       0
  2235 ;;      Totals:         3       0       0
  2236 ;;Total ram usage:        3 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    1
  2239 ;; This function calls:
  2240 ;;		_checkDCBounds
  2241 ;;		i1_pwm1_writeDutyCycle
  2242 ;;		i1_pwm2_writeDutyCycle
  2243 ;;		i1_pwm3_writeDutyCycle
  2244 ;;		i1_pwm4_writeDutyCycle
  2245 ;; This function is called by:
  2246 ;;		_isr
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _decDutyCycle
  2252  00A4                     _decDutyCycle:	
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _decDutyCycle: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2256                           ;decDutyCycle@chan stored from wreg
  2257  00A4  00F5               	movwf	decDutyCycle@chan
  2258                           
  2259                           ;pwm.c: 125: uint16_t dutyCycle;
  2260                           ;pwm.c: 127: switch(chan){
  2261  00A5  28F0               	goto	i1l814
  2262  00A6                     i1l804:	
  2263                           ;pwm.c: 128: case PWM_CH1:
  2264                           
  2265                           
  2266                           ;pwm.c: 130: dutyCycle = checkDCBounds(pwm1_dutyCycle - 1U, 0);
  2267  00A6  087B               	movf	_pwm1_dutyCycle,w	;volatile
  2268  00A7  3EFF               	addlw	255
  2269  00A8  00F0               	movwf	checkDCBounds@dc
  2270  00A9  30FF               	movlw	255
  2271  00AA  3D7C               	addwfc	_pwm1_dutyCycle+1,w	;volatile
  2272  00AB  00F1               	movwf	checkDCBounds@dc+1
  2273  00AC  01F2               	clrf	checkDCBounds@direction
  2274  00AD  2207               	fcall	_checkDCBounds
  2275  00AE  0871               	movf	?_checkDCBounds+1,w
  2276  00AF  00F7               	movwf	decDutyCycle@dutyCycle+1
  2277  00B0  0870               	movf	?_checkDCBounds,w
  2278  00B1  00F6               	movwf	decDutyCycle@dutyCycle
  2279                           
  2280                           ;pwm.c: 133: pwm1_writeDutyCycle(dutyCycle);
  2281  00B2  0877               	movf	decDutyCycle@dutyCycle+1,w
  2282  00B3  00F1               	movwf	i1pwm1_writeDutyCycle@dutyCycle+1
  2283  00B4  0876               	movf	decDutyCycle@dutyCycle,w
  2284  00B5  00F0               	movwf	i1pwm1_writeDutyCycle@dutyCycle
  2285  00B6  21ED               	fcall	i1_pwm1_writeDutyCycle
  2286                           
  2287                           ;pwm.c: 135: break;
  2288  00B7  0008               	return
  2289  00B8                     i1l806:	
  2290                           ;pwm.c: 137: case PWM_CH2:
  2291                           
  2292                           
  2293                           ;pwm.c: 139: dutyCycle = checkDCBounds(pwm2_dutyCycle - 1U, 0);
  2294  00B8  0879               	movf	_pwm2_dutyCycle,w	;volatile
  2295  00B9  3EFF               	addlw	255
  2296  00BA  00F0               	movwf	checkDCBounds@dc
  2297  00BB  30FF               	movlw	255
  2298  00BC  3D7A               	addwfc	_pwm2_dutyCycle+1,w	;volatile
  2299  00BD  00F1               	movwf	checkDCBounds@dc+1
  2300  00BE  01F2               	clrf	checkDCBounds@direction
  2301  00BF  2207               	fcall	_checkDCBounds
  2302  00C0  0871               	movf	?_checkDCBounds+1,w
  2303  00C1  00F7               	movwf	decDutyCycle@dutyCycle+1
  2304  00C2  0870               	movf	?_checkDCBounds,w
  2305  00C3  00F6               	movwf	decDutyCycle@dutyCycle
  2306                           
  2307                           ;pwm.c: 142: pwm2_writeDutyCycle(dutyCycle);
  2308  00C4  0877               	movf	decDutyCycle@dutyCycle+1,w
  2309  00C5  00F1               	movwf	i1pwm2_writeDutyCycle@dutyCycle+1
  2310  00C6  0876               	movf	decDutyCycle@dutyCycle,w
  2311  00C7  00F0               	movwf	i1pwm2_writeDutyCycle@dutyCycle
  2312  00C8  21D3               	fcall	i1_pwm2_writeDutyCycle
  2313                           
  2314                           ;pwm.c: 144: break;
  2315  00C9  0008               	return
  2316  00CA                     i1l808:	
  2317                           ;pwm.c: 146: case PWM_CH3:
  2318                           
  2319                           
  2320                           ;pwm.c: 148: dutyCycle = checkDCBounds(pwm3_dutyCycle - 1U, 0);
  2321  00CA  0020               	movlb	0	; select bank0
  2322  00CB  0822               	movf	_pwm3_dutyCycle,w	;volatile
  2323  00CC  3EFF               	addlw	255
  2324  00CD  00F0               	movwf	checkDCBounds@dc
  2325  00CE  30FF               	movlw	255
  2326  00CF  3D23               	addwfc	_pwm3_dutyCycle+1,w	;volatile
  2327  00D0  00F1               	movwf	checkDCBounds@dc+1
  2328  00D1  01F2               	clrf	checkDCBounds@direction
  2329  00D2  2207               	fcall	_checkDCBounds
  2330  00D3  0871               	movf	?_checkDCBounds+1,w
  2331  00D4  00F7               	movwf	decDutyCycle@dutyCycle+1
  2332  00D5  0870               	movf	?_checkDCBounds,w
  2333  00D6  00F6               	movwf	decDutyCycle@dutyCycle
  2334                           
  2335                           ;pwm.c: 151: pwm3_writeDutyCycle(dutyCycle);
  2336  00D7  0877               	movf	decDutyCycle@dutyCycle+1,w
  2337  00D8  00F1               	movwf	i1pwm3_writeDutyCycle@dutyCycle+1
  2338  00D9  0876               	movf	decDutyCycle@dutyCycle,w
  2339  00DA  00F0               	movwf	i1pwm3_writeDutyCycle@dutyCycle
  2340  00DB  21B8               	fcall	i1_pwm3_writeDutyCycle
  2341                           
  2342                           ;pwm.c: 153: break;
  2343  00DC  0008               	return
  2344  00DD                     i1l810:	
  2345                           ;pwm.c: 155: case PWM_CH4:
  2346                           
  2347                           
  2348                           ;pwm.c: 157: dutyCycle = checkDCBounds(pwm4_dutyCycle - 1U, 0);
  2349  00DD  0020               	movlb	0	; select bank0
  2350  00DE  0820               	movf	_pwm4_dutyCycle,w	;volatile
  2351  00DF  3EFF               	addlw	255
  2352  00E0  00F0               	movwf	checkDCBounds@dc
  2353  00E1  30FF               	movlw	255
  2354  00E2  3D21               	addwfc	_pwm4_dutyCycle+1,w	;volatile
  2355  00E3  00F1               	movwf	checkDCBounds@dc+1
  2356  00E4  01F2               	clrf	checkDCBounds@direction
  2357  00E5  2207               	fcall	_checkDCBounds
  2358  00E6  0871               	movf	?_checkDCBounds+1,w
  2359  00E7  00F7               	movwf	decDutyCycle@dutyCycle+1
  2360  00E8  0870               	movf	?_checkDCBounds,w
  2361  00E9  00F6               	movwf	decDutyCycle@dutyCycle
  2362                           
  2363                           ;pwm.c: 160: pwm4_writeDutyCycle(dutyCycle);
  2364  00EA  0877               	movf	decDutyCycle@dutyCycle+1,w
  2365  00EB  00F1               	movwf	i1pwm4_writeDutyCycle@dutyCycle+1
  2366  00EC  0876               	movf	decDutyCycle@dutyCycle,w
  2367  00ED  00F0               	movwf	i1pwm4_writeDutyCycle@dutyCycle
  2368  00EE  219D               	fcall	i1_pwm4_writeDutyCycle
  2369                           
  2370                           ;pwm.c: 167: }
  2371                           
  2372                           ;pwm.c: 166: break;
  2373                           
  2374                           ;pwm.c: 164: default:
  2375                           
  2376                           ;pwm.c: 162: break;
  2377  00EF  0008               	return
  2378  00F0                     i1l814:	
  2379  00F0  0875               	movf	decDutyCycle@chan,w
  2380                           
  2381                           ; Switch size 1, requested type "space"
  2382                           ; Number of cases is 4, Range of values is 0 to 3
  2383                           ; switch strategies available:
  2384                           ; Name         Instructions Cycles
  2385                           ; simple_byte           13     7 (average)
  2386                           ; direct_byte           14     6 (fixed)
  2387                           ; jumptable            260     6 (fixed)
  2388                           ;	Chosen strategy is simple_byte
  2389  00F1  3A00               	xorlw	0	; case 0
  2390  00F2  1903               	skipnz
  2391  00F3  28A6               	goto	i1l804
  2392  00F4  3A01               	xorlw	1	; case 1
  2393  00F5  1903               	skipnz
  2394  00F6  28B8               	goto	i1l806
  2395  00F7  3A03               	xorlw	3	; case 2
  2396  00F8  1903               	skipnz
  2397  00F9  28CA               	goto	i1l808
  2398  00FA  3A01               	xorlw	1	; case 3
  2399  00FB  1903               	skipnz
  2400  00FC  28DD               	goto	i1l810
  2401  00FD  28FE               	goto	i1l174
  2402  00FE                     i1l174:	
  2403  00FE  0008               	return
  2404  00FF                     __end_of_decDutyCycle:	
  2405                           
  2406                           	psect	text13
  2407  019D                     __ptext13:	
  2408 ;; *************** function i1_pwm4_writeDutyCycle *****************
  2409 ;; Defined at:
  2410 ;;		line 55 in file "pwm.c"
  2411 ;; Parameters:    Size  Location     Type
  2412 ;;  dutyCycle       2    0[COMMON] unsigned int 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;		None
  2415 ;; Return value:  Size  Location     Type
  2416 ;;                  1    wreg      void 
  2417 ;; Registers used:
  2418 ;;		wreg, status,2, status,0
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMMON   BANK0   BANK1
  2424 ;;      Params:         2       0       0
  2425 ;;      Locals:         0       0       0
  2426 ;;      Temps:          2       0       0
  2427 ;;      Totals:         4       0       0
  2428 ;;Total ram usage:        4 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; This function calls:
  2431 ;;		Nothing
  2432 ;; This function is called by:
  2433 ;;		_incDutyCycle
  2434 ;;		_decDutyCycle
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           
  2439                           ;psect for function i1_pwm4_writeDutyCycle
  2440  019D                     i1_pwm4_writeDutyCycle:	
  2441                           
  2442                           ;pwm.c: 56: PWM4DCH = (dutyCycle & 0x03FC)>>2;
  2443                           
  2444                           ;incstack = 0
  2445                           ; Regs used in i1_pwm4_writeDutyCycle: [wreg+status,2+status,0]
  2446  019D  0871               	movf	i1pwm4_writeDutyCycle@dutyCycle+1,w
  2447  019E  00F3               	movwf	??i1_pwm4_writeDutyCycle+1
  2448  019F  0870               	movf	i1pwm4_writeDutyCycle@dutyCycle,w
  2449  01A0  00F2               	movwf	??i1_pwm4_writeDutyCycle
  2450  01A1  36F3               	lsrf	??i1_pwm4_writeDutyCycle+1,f
  2451  01A2  0CF2               	rrf	??i1_pwm4_writeDutyCycle,f
  2452  01A3  36F3               	lsrf	??i1_pwm4_writeDutyCycle+1,f
  2453  01A4  0CF2               	rrf	??i1_pwm4_writeDutyCycle,f
  2454  01A5  0872               	movf	??i1_pwm4_writeDutyCycle,w
  2455  01A6  002C               	movlb	12	; select bank12
  2456  01A7  009B               	movwf	27	;volatile
  2457                           
  2458                           ;pwm.c: 57: PWM4DCL = (dutyCycle & 0x0003)<<6;
  2459  01A8  0870               	movf	i1pwm4_writeDutyCycle@dutyCycle,w
  2460  01A9  3903               	andlw	3
  2461  01AA  00F2               	movwf	??i1_pwm4_writeDutyCycle
  2462  01AB  3005               	movlw	5
  2463  01AC                     u38_25:	
  2464  01AC  35F2               	lslf	??i1_pwm4_writeDutyCycle,f
  2465  01AD  3EFF               	addlw	-1
  2466  01AE  1D03               	skipz
  2467  01AF  29AC               	goto	u38_25
  2468  01B0  3572               	lslf	??i1_pwm4_writeDutyCycle,w
  2469  01B1  009A               	movwf	26	;volatile
  2470                           
  2471                           ;pwm.c: 58: pwm4_dutyCycle = dutyCycle;
  2472  01B2  0871               	movf	i1pwm4_writeDutyCycle@dutyCycle+1,w
  2473  01B3  0020               	movlb	0	; select bank0
  2474  01B4  00A1               	movwf	_pwm4_dutyCycle+1	;volatile
  2475  01B5  0870               	movf	i1pwm4_writeDutyCycle@dutyCycle,w
  2476  01B6  00A0               	movwf	_pwm4_dutyCycle	;volatile
  2477  01B7  0008               	return
  2478  01B8                     __end_ofi1_pwm4_writeDutyCycle:	
  2479                           
  2480                           	psect	text14
  2481  01B8                     __ptext14:	
  2482 ;; *************** function i1_pwm3_writeDutyCycle *****************
  2483 ;; Defined at:
  2484 ;;		line 50 in file "pwm.c"
  2485 ;; Parameters:    Size  Location     Type
  2486 ;;  dutyCycle       2    0[COMMON] unsigned int 
  2487 ;; Auto vars:     Size  Location     Type
  2488 ;;		None
  2489 ;; Return value:  Size  Location     Type
  2490 ;;                  1    wreg      void 
  2491 ;; Registers used:
  2492 ;;		wreg, status,2, status,0
  2493 ;; Tracked objects:
  2494 ;;		On entry : 0/0
  2495 ;;		On exit  : 0/0
  2496 ;;		Unchanged: 0/0
  2497 ;; Data sizes:     COMMON   BANK0   BANK1
  2498 ;;      Params:         2       0       0
  2499 ;;      Locals:         0       0       0
  2500 ;;      Temps:          2       0       0
  2501 ;;      Totals:         4       0       0
  2502 ;;Total ram usage:        4 bytes
  2503 ;; Hardware stack levels used:    1
  2504 ;; This function calls:
  2505 ;;		Nothing
  2506 ;; This function is called by:
  2507 ;;		_incDutyCycle
  2508 ;;		_decDutyCycle
  2509 ;; This function uses a non-reentrant model
  2510 ;;
  2511                           
  2512                           
  2513                           ;psect for function i1_pwm3_writeDutyCycle
  2514  01B8                     i1_pwm3_writeDutyCycle:	
  2515                           
  2516                           ;pwm.c: 51: PWM3DCH = (dutyCycle & 0x03FC)>>2;
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in i1_pwm3_writeDutyCycle: [wreg+status,2+status,0]
  2520  01B8  0871               	movf	i1pwm3_writeDutyCycle@dutyCycle+1,w
  2521  01B9  00F3               	movwf	??i1_pwm3_writeDutyCycle+1
  2522  01BA  0870               	movf	i1pwm3_writeDutyCycle@dutyCycle,w
  2523  01BB  00F2               	movwf	??i1_pwm3_writeDutyCycle
  2524  01BC  36F3               	lsrf	??i1_pwm3_writeDutyCycle+1,f
  2525  01BD  0CF2               	rrf	??i1_pwm3_writeDutyCycle,f
  2526  01BE  36F3               	lsrf	??i1_pwm3_writeDutyCycle+1,f
  2527  01BF  0CF2               	rrf	??i1_pwm3_writeDutyCycle,f
  2528  01C0  0872               	movf	??i1_pwm3_writeDutyCycle,w
  2529  01C1  002C               	movlb	12	; select bank12
  2530  01C2  0098               	movwf	24	;volatile
  2531                           
  2532                           ;pwm.c: 52: PWM3DCL = (dutyCycle & 0x0003)<<6;
  2533  01C3  0870               	movf	i1pwm3_writeDutyCycle@dutyCycle,w
  2534  01C4  3903               	andlw	3
  2535  01C5  00F2               	movwf	??i1_pwm3_writeDutyCycle
  2536  01C6  3005               	movlw	5
  2537  01C7                     u37_25:	
  2538  01C7  35F2               	lslf	??i1_pwm3_writeDutyCycle,f
  2539  01C8  3EFF               	addlw	-1
  2540  01C9  1D03               	skipz
  2541  01CA  29C7               	goto	u37_25
  2542  01CB  3572               	lslf	??i1_pwm3_writeDutyCycle,w
  2543  01CC  0097               	movwf	23	;volatile
  2544                           
  2545                           ;pwm.c: 53: pwm3_dutyCycle = dutyCycle;
  2546  01CD  0871               	movf	i1pwm3_writeDutyCycle@dutyCycle+1,w
  2547  01CE  0020               	movlb	0	; select bank0
  2548  01CF  00A3               	movwf	_pwm3_dutyCycle+1	;volatile
  2549  01D0  0870               	movf	i1pwm3_writeDutyCycle@dutyCycle,w
  2550  01D1  00A2               	movwf	_pwm3_dutyCycle	;volatile
  2551  01D2  0008               	return
  2552  01D3                     __end_ofi1_pwm3_writeDutyCycle:	
  2553                           
  2554                           	psect	text15
  2555  01D3                     __ptext15:	
  2556 ;; *************** function i1_pwm2_writeDutyCycle *****************
  2557 ;; Defined at:
  2558 ;;		line 45 in file "pwm.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  dutyCycle       2    0[COMMON] unsigned int 
  2561 ;; Auto vars:     Size  Location     Type
  2562 ;;		None
  2563 ;; Return value:  Size  Location     Type
  2564 ;;                  1    wreg      void 
  2565 ;; Registers used:
  2566 ;;		wreg, status,2, status,0
  2567 ;; Tracked objects:
  2568 ;;		On entry : 0/0
  2569 ;;		On exit  : 0/0
  2570 ;;		Unchanged: 0/0
  2571 ;; Data sizes:     COMMON   BANK0   BANK1
  2572 ;;      Params:         2       0       0
  2573 ;;      Locals:         0       0       0
  2574 ;;      Temps:          2       0       0
  2575 ;;      Totals:         4       0       0
  2576 ;;Total ram usage:        4 bytes
  2577 ;; Hardware stack levels used:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_incDutyCycle
  2582 ;;		_decDutyCycle
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function i1_pwm2_writeDutyCycle
  2588  01D3                     i1_pwm2_writeDutyCycle:	
  2589                           
  2590                           ;pwm.c: 46: PWM2DCH = (dutyCycle & 0x03FC)>>2;
  2591                           
  2592                           ;incstack = 0
  2593                           ; Regs used in i1_pwm2_writeDutyCycle: [wreg+status,2+status,0]
  2594  01D3  0871               	movf	i1pwm2_writeDutyCycle@dutyCycle+1,w
  2595  01D4  00F3               	movwf	??i1_pwm2_writeDutyCycle+1
  2596  01D5  0870               	movf	i1pwm2_writeDutyCycle@dutyCycle,w
  2597  01D6  00F2               	movwf	??i1_pwm2_writeDutyCycle
  2598  01D7  36F3               	lsrf	??i1_pwm2_writeDutyCycle+1,f
  2599  01D8  0CF2               	rrf	??i1_pwm2_writeDutyCycle,f
  2600  01D9  36F3               	lsrf	??i1_pwm2_writeDutyCycle+1,f
  2601  01DA  0CF2               	rrf	??i1_pwm2_writeDutyCycle,f
  2602  01DB  0872               	movf	??i1_pwm2_writeDutyCycle,w
  2603  01DC  002C               	movlb	12	; select bank12
  2604  01DD  0095               	movwf	21	;volatile
  2605                           
  2606                           ;pwm.c: 47: PWM2DCL = (dutyCycle & 0x0003)<<6;
  2607  01DE  0870               	movf	i1pwm2_writeDutyCycle@dutyCycle,w
  2608  01DF  3903               	andlw	3
  2609  01E0  00F2               	movwf	??i1_pwm2_writeDutyCycle
  2610  01E1  3005               	movlw	5
  2611  01E2                     u36_25:	
  2612  01E2  35F2               	lslf	??i1_pwm2_writeDutyCycle,f
  2613  01E3  3EFF               	addlw	-1
  2614  01E4  1D03               	skipz
  2615  01E5  29E2               	goto	u36_25
  2616  01E6  3572               	lslf	??i1_pwm2_writeDutyCycle,w
  2617  01E7  0094               	movwf	20	;volatile
  2618                           
  2619                           ;pwm.c: 48: pwm2_dutyCycle = dutyCycle;
  2620  01E8  0871               	movf	i1pwm2_writeDutyCycle@dutyCycle+1,w
  2621  01E9  00FA               	movwf	_pwm2_dutyCycle+1	;volatile
  2622  01EA  0870               	movf	i1pwm2_writeDutyCycle@dutyCycle,w
  2623  01EB  00F9               	movwf	_pwm2_dutyCycle	;volatile
  2624  01EC  0008               	return
  2625  01ED                     __end_ofi1_pwm2_writeDutyCycle:	
  2626                           
  2627                           	psect	text16
  2628  01ED                     __ptext16:	
  2629 ;; *************** function i1_pwm1_writeDutyCycle *****************
  2630 ;; Defined at:
  2631 ;;		line 40 in file "pwm.c"
  2632 ;; Parameters:    Size  Location     Type
  2633 ;;  dutyCycle       2    0[COMMON] unsigned int 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  1    wreg      void 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1
  2645 ;;      Params:         2       0       0
  2646 ;;      Locals:         0       0       0
  2647 ;;      Temps:          2       0       0
  2648 ;;      Totals:         4       0       0
  2649 ;;Total ram usage:        4 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; This function calls:
  2652 ;;		Nothing
  2653 ;; This function is called by:
  2654 ;;		_incDutyCycle
  2655 ;;		_decDutyCycle
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function i1_pwm1_writeDutyCycle
  2661  01ED                     i1_pwm1_writeDutyCycle:	
  2662                           
  2663                           ;pwm.c: 41: PWM1DCH = (dutyCycle & 0x03FC)>>2;
  2664                           
  2665                           ;incstack = 0
  2666                           ; Regs used in i1_pwm1_writeDutyCycle: [wreg+status,2+status,0]
  2667  01ED  0871               	movf	i1pwm1_writeDutyCycle@dutyCycle+1,w
  2668  01EE  00F3               	movwf	??i1_pwm1_writeDutyCycle+1
  2669  01EF  0870               	movf	i1pwm1_writeDutyCycle@dutyCycle,w
  2670  01F0  00F2               	movwf	??i1_pwm1_writeDutyCycle
  2671  01F1  36F3               	lsrf	??i1_pwm1_writeDutyCycle+1,f
  2672  01F2  0CF2               	rrf	??i1_pwm1_writeDutyCycle,f
  2673  01F3  36F3               	lsrf	??i1_pwm1_writeDutyCycle+1,f
  2674  01F4  0CF2               	rrf	??i1_pwm1_writeDutyCycle,f
  2675  01F5  0872               	movf	??i1_pwm1_writeDutyCycle,w
  2676  01F6  002C               	movlb	12	; select bank12
  2677  01F7  0092               	movwf	18	;volatile
  2678                           
  2679                           ;pwm.c: 42: PWM1DCL = (dutyCycle & 0x0003)<<6;
  2680  01F8  0870               	movf	i1pwm1_writeDutyCycle@dutyCycle,w
  2681  01F9  3903               	andlw	3
  2682  01FA  00F2               	movwf	??i1_pwm1_writeDutyCycle
  2683  01FB  3005               	movlw	5
  2684  01FC                     u35_25:	
  2685  01FC  35F2               	lslf	??i1_pwm1_writeDutyCycle,f
  2686  01FD  3EFF               	addlw	-1
  2687  01FE  1D03               	skipz
  2688  01FF  29FC               	goto	u35_25
  2689  0200  3572               	lslf	??i1_pwm1_writeDutyCycle,w
  2690  0201  0091               	movwf	17	;volatile
  2691                           
  2692                           ;pwm.c: 43: pwm1_dutyCycle = dutyCycle;
  2693  0202  0871               	movf	i1pwm1_writeDutyCycle@dutyCycle+1,w
  2694  0203  00FC               	movwf	_pwm1_dutyCycle+1	;volatile
  2695  0204  0870               	movf	i1pwm1_writeDutyCycle@dutyCycle,w
  2696  0205  00FB               	movwf	_pwm1_dutyCycle	;volatile
  2697  0206  0008               	return
  2698  0207                     __end_ofi1_pwm1_writeDutyCycle:	
  2699                           
  2700                           	psect	text17
  2701  0207                     __ptext17:	
  2702 ;; *************** function _checkDCBounds *****************
  2703 ;; Defined at:
  2704 ;;		line 65 in file "pwm.c"
  2705 ;; Parameters:    Size  Location     Type
  2706 ;;  dc              2    0[COMMON] unsigned int 
  2707 ;;  direction       1    2[COMMON] unsigned char 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  retval          2    3[COMMON] unsigned int 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  2    0[COMMON] unsigned int 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMMON   BANK0   BANK1
  2719 ;;      Params:         3       0       0
  2720 ;;      Locals:         2       0       0
  2721 ;;      Temps:          0       0       0
  2722 ;;      Totals:         5       0       0
  2723 ;;Total ram usage:        5 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; This function calls:
  2726 ;;		Nothing
  2727 ;; This function is called by:
  2728 ;;		_incDutyCycle
  2729 ;;		_decDutyCycle
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           
  2734                           ;psect for function _checkDCBounds
  2735  0207                     _checkDCBounds:	
  2736                           
  2737                           ;pwm.c: 66: uint16_t retval = dc;
  2738                           
  2739                           ;incstack = 0
  2740                           ; Regs used in _checkDCBounds: [wreg+status,2+status,0]
  2741  0207  0871               	movf	checkDCBounds@dc+1,w
  2742  0208  00F4               	movwf	checkDCBounds@retval+1
  2743  0209  0870               	movf	checkDCBounds@dc,w
  2744  020A  00F3               	movwf	checkDCBounds@retval
  2745                           
  2746                           ;pwm.c: 67: if( dc > 19U ){
  2747  020B  3000               	movlw	0
  2748  020C  0271               	subwf	checkDCBounds@dc+1,w
  2749  020D  3014               	movlw	20
  2750  020E  1903               	skipnz
  2751  020F  0270               	subwf	checkDCBounds@dc,w
  2752  0210  1C03               	skipc
  2753  0211  2A1C               	goto	i1l768
  2754                           
  2755                           ;pwm.c: 68: if(direction == 1){
  2756  0212  0372               	decf	checkDCBounds@direction,w
  2757  0213  1D03               	btfss	3,2
  2758  0214  2A1A               	goto	i1l766
  2759                           
  2760                           ;pwm.c: 69: retval = 19U;
  2761  0215  3013               	movlw	19
  2762  0216  00F3               	movwf	checkDCBounds@retval
  2763  0217  3000               	movlw	0
  2764  0218  00F4               	movwf	checkDCBounds@retval+1
  2765                           
  2766                           ;pwm.c: 70: }else{
  2767  0219  2A1C               	goto	i1l768
  2768  021A                     i1l766:	
  2769                           
  2770                           ;pwm.c: 71: retval = 0U;
  2771  021A  01F3               	clrf	checkDCBounds@retval
  2772  021B  01F4               	clrf	checkDCBounds@retval+1
  2773  021C                     i1l768:	
  2774                           
  2775                           ;pwm.c: 72: }
  2776                           ;pwm.c: 73: }
  2777                           ;pwm.c: 75: return retval;
  2778  021C  0874               	movf	checkDCBounds@retval+1,w
  2779  021D  00F1               	movwf	?_checkDCBounds+1
  2780  021E  0873               	movf	checkDCBounds@retval,w
  2781  021F  00F0               	movwf	?_checkDCBounds
  2782  0220  0008               	return
  2783  0221                     __end_of_checkDCBounds:	
  2784  007E                     btemp	set	126	;btemp
  2785  007E                     int$flags	set	126
  2786  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80      4       8
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_decDutyCycle
    _isr->_incDutyCycle
    _incDutyCycle->_checkDCBounds
    _decDutyCycle->_checkDCBounds

Critical Paths under _main in BANK0

    __init_pwm->_pwm1_writeDutyCycle
    __init_pwm->_pwm2_writeDutyCycle
    __init_pwm->_pwm3_writeDutyCycle
    __init_pwm->_pwm4_writeDutyCycle

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     572
                _ConfigureOscillator
                            _InitApp
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0     572
                         __init_gpio
                          __init_pwm
                       __init_timer2
 ---------------------------------------------------------------------------------
 (2) __init_timer2                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __init_pwm                                            0     0      0     572
                _pwm1_writeDutyCycle
                _pwm2_writeDutyCycle
                _pwm3_writeDutyCycle
                _pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (3) _pwm4_writeDutyCycle                                  4     2      2     143
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _pwm3_writeDutyCycle                                  4     2      2     143
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _pwm2_writeDutyCycle                                  4     2      2     143
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) _pwm1_writeDutyCycle                                  4     2      2     143
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __init_gpio                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ConfigureOscillator                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  1     1      0    2730
                                              8 COMMON     1     1      0
                       _decDutyCycle
                       _incDutyCycle
 ---------------------------------------------------------------------------------
 (5) _incDutyCycle                                         3     3      0    1365
                                              5 COMMON     3     3      0
                      _checkDCBounds
              i1_pwm1_writeDutyCycle
              i1_pwm2_writeDutyCycle
              i1_pwm3_writeDutyCycle
              i1_pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (5) _decDutyCycle                                         3     3      0    1365
                                              5 COMMON     3     3      0
                      _checkDCBounds
              i1_pwm1_writeDutyCycle
              i1_pwm2_writeDutyCycle
              i1_pwm3_writeDutyCycle
              i1_pwm4_writeDutyCycle
 ---------------------------------------------------------------------------------
 (6) i1_pwm4_writeDutyCycle                                4     2      2     118
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) i1_pwm3_writeDutyCycle                                4     2      2     118
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) i1_pwm2_writeDutyCycle                                4     2      2     118
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) i1_pwm1_writeDutyCycle                                4     2      2     118
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (6) _checkDCBounds                                        5     2      3     779
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ConfigureOscillator
   _InitApp
     __init_gpio
     __init_pwm
       _pwm1_writeDutyCycle
       _pwm2_writeDutyCycle
       _pwm3_writeDutyCycle
       _pwm4_writeDutyCycle
     __init_timer2

 _isr (ROOT)
   _decDutyCycle
     _checkDCBounds
     i1_pwm1_writeDutyCycle
     i1_pwm2_writeDutyCycle
     i1_pwm3_writeDutyCycle
     i1_pwm4_writeDutyCycle
   _incDutyCycle
     _checkDCBounds
     i1_pwm1_writeDutyCycle
     i1_pwm2_writeDutyCycle
     i1_pwm3_writeDutyCycle
     i1_pwm4_writeDutyCycle

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              70      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      15       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      4       8       6       10.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            20      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               20      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
DATA                 0      0      15       9        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Thu Nov 02 18:57:51 2017

__size_ofi1_pwm1_writeDutyCycle 001A   __end_ofi1_pwm1_writeDutyCycle 0207                     __CFG_CP$OFF 0000  
                            l40 0246          ?i1_pwm2_writeDutyCycle 0070                     __CFG_LVP$ON 0000  
                           u305 0172                             u315 0154                             u325 0136  
                           _PR2 001B                             u295 0190                             _isr 0004  
          __end_of__init_timer2 023B                    __CFG_BORV$LO 0000                            ?_isr 0070  
                          _LATA 010C                            _LATC 010E                            i1l13 0023  
                          i1l14 0012                            i1l23 002B                            i1l31 003C  
                          i1l15 0021                            i1l24 003A                            i1l16 0017  
                          i1l25 0030                            i1l18 001C                            i1l27 0035  
                          _TMR2 001A                            _WPUA 020C    pwm1_writeDutyCycle@dutyCycle 0024  
                  __CFG_WRT$OFF 0000                  ??_incDutyCycle 0075                            _main 0244  
                          btemp 007E                   __CFG_BOREN$ON 0000                            start 0041  
         ??_pwm3_writeDutyCycle 0026                   __CFG_MCLRE$ON 0000                 __end_of_InitApp 0244  
                         ??_isr 0078           __size_of_decDutyCycle 005B  __size_ofi1_pwm3_writeDutyCycle 001B  
                         ?_main 0070   __end_ofi1_pwm3_writeDutyCycle 01D3                   __CFG_WDTE$OFF 0000  
                         _T2CON 001C                           _IOCAF 0393                           _IOCAP 0391  
                         i1l164 00A3                           i1l174 00FE                           i1l800 0095  
                         i1l810 00DD                           i1l804 00A6                           i1l806 00B8  
                         i1l814 00F0                           i1l808 00CA                           i1l766 021A  
                         i1l790 0047                           i1l768 021C                           i1l792 005A  
                         i1l794 006D                           i1l796 0081                           u35_25 01FC  
                         u36_25 01E2                           u37_25 01C7                           u38_25 01AC  
                         _TRISA 008C                           _TRISC 008E             _ConfigureOscillator 023B  
  pwm4_writeDutyCycle@dutyCycle 0024          ?i1_pwm4_writeDutyCycle 0070  i1pwm2_writeDutyCycle@dutyCycle 0070  
                         status 0003                           wtemp0 007E            ?_ConfigureOscillator 0070  
               __initialization 0042                    _decDutyCycle 00A4                    __end_of_main 0247  
                __CFG_LPBOR$OFF 0000                          ??_main 0028                          _ANSELA 018C  
                        _ANSELC 018E                  _pwm1_dutyCycle 007B                          _OSCCON 0099  
                        _WDTCON 0097    __size_of_pwm2_writeDutyCycle 001E                       ??_InitApp 0028  
         ??_ConfigureOscillator 0024                  __CFG_PWRTE$OFF 0000                  _pwm2_dutyCycle 0079  
                __CFG_STVREN$ON 0000           __size_of__init_timer2 0007                  _pwm3_dutyCycle 0022  
          __end_of_incDutyCycle 00A4                  _pwm4_dutyCycle 0020             checkDCBounds@retval 0073  
       __end_of__initialization 0042                    __init_timer2 0234                 checkDCBounds@dc 0070  
                __pcstackCOMMON 0070         ??i1_pwm2_writeDutyCycle 0072    __size_of_pwm4_writeDutyCycle 001E  
            __size_of__init_pwm 0026     __end_of_pwm1_writeDutyCycle 019D           incDutyCycle@dutyCycle 0076  
        __size_of_checkDCBounds 001A                      __init_gpio 0221                      __pnvCOMMON 0079  
                    __pmaintext 0244                      __pintentry 0004           i1_pwm1_writeDutyCycle 01ED  
       ??i1_pwm4_writeDutyCycle 0072                         _PWM1DCH 0612                         _PWM1DCL 0611  
                       _PWM2DCH 0615                         _PWM2DCL 0614                         _PWM3DCH 0618  
                       _PWM3DCL 0617                         _PWM4DCH 061B                         _PWM1CON 0613  
                       _PWM4DCL 061A                         _PWM2CON 0616                         _PWM3CON 0619  
                       _PWM4CON 061C               __end_of__init_pwm 0125     __end_of_pwm3_writeDutyCycle 0161  
                       _InitApp 0240                   _checkDCBounds 0207           __size_of_incDutyCycle 005F  
  pwm3_writeDutyCycle@dutyCycle 0024                         __ptext1 0240                         __ptext2 0234  
                       __ptext3 00FF                         __ptext4 0125                         __ptext5 0143  
                       __ptext6 0161                         __ptext7 017F                         __ptext8 0221  
                       __ptext9 023B             _pwm2_writeDutyCycle 0161                       _T2CONbits 001C  
                  __size_of_isr 003D           i1_pwm3_writeDutyCycle 01B8                       _IOCAFbits 0393  
          end_of_initialization 0042                     ?__init_gpio 0070            ?_pwm2_writeDutyCycle 0024  
                  _incDutyCycle 0045                  ?_checkDCBounds 0070  i1pwm4_writeDutyCycle@dutyCycle 0070  
              decDutyCycle@chan 0075          ?i1_pwm1_writeDutyCycle 0070                       _PORTCbits 000E  
              __CFG_FOSC$INTOSC 0000             _pwm4_writeDutyCycle 0125     __end_of_ConfigureOscillator 0240  
         ??_pwm2_writeDutyCycle 0026            ?_pwm4_writeDutyCycle 0024  __size_ofi1_pwm2_writeDutyCycle 001A  
 __end_ofi1_pwm2_writeDutyCycle 01ED             __size_of__init_gpio 0013          ?i1_pwm3_writeDutyCycle 0070  
           start_initialization 0042                     __end_of_isr 0041                 ??_checkDCBounds 0073  
         ??_pwm4_writeDutyCycle 0026  __size_ofi1_pwm4_writeDutyCycle 001B   __end_ofi1_pwm4_writeDutyCycle 01B8  
                     ___latbits 0000                   __pcstackBANK0 0024    __size_of_pwm1_writeDutyCycle 001E  
                      ?_InitApp 0070                       __pnvBANK0 0020                       __init_pwm 00FF  
                 ?_decDutyCycle 0070                    ??__init_gpio 0024                      ?__init_pwm 0070  
                ??_decDutyCycle 0075         ??i1_pwm1_writeDutyCycle 0072    pwm2_writeDutyCycle@dutyCycle 0024  
  __size_of_pwm3_writeDutyCycle 001E              __end_of__init_gpio 0234                incDutyCycle@chan 0075  
i1pwm3_writeDutyCycle@dutyCycle 0070                   ?__init_timer2 0070                __size_of_InitApp 0004  
       ??i1_pwm3_writeDutyCycle 0072  i1pwm1_writeDutyCycle@dutyCycle 0070                        __ptext11 0045  
                      __ptext12 00A4                        __ptext13 019D                        __ptext14 01B8  
                      __ptext15 01D3                        __ptext16 01ED                        __ptext17 0207  
   __end_of_pwm2_writeDutyCycle 017F          checkDCBounds@direction 0072                   __size_of_main 0003  
                   ??__init_pwm 0028                  ??__init_timer2 0024    __size_of_ConfigureOscillator 0005  
                      int$flags 007E             _pwm1_writeDutyCycle 017F           i1_pwm2_writeDutyCycle 01D3  
                    _INTCONbits 000B            __end_of_decDutyCycle 00FF                        intlevel1 0000  
          ?_pwm1_writeDutyCycle 0024     __end_of_pwm4_writeDutyCycle 0143               __CFG_CLKOUTEN$OFF 0000  
         __end_of_checkDCBounds 0221           decDutyCycle@dutyCycle 0076             _pwm3_writeDutyCycle 0143  
         i1_pwm4_writeDutyCycle 019D           ??_pwm1_writeDutyCycle 0026                   ?_incDutyCycle 0070  
          ?_pwm3_writeDutyCycle 0024  
